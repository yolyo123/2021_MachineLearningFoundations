{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"all","provenance":[],"collapsed_sections":[],"authorship_tag":"ABX9TyPvvTGQCQ2AbNq4F7N0Q41T"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2hnK-Sgisj44","executionInfo":{"status":"ok","timestamp":1641372628509,"user_tz":-480,"elapsed":16642,"user":{"displayName":"陳佑甄","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgzIUBUXR24tLoip4QQgjhsStGIG9hzjbafxUsz=s64","userId":"10990682828848697792"}},"outputId":"305fc4c5-897b-48f0-ac80-e016ab9e7d9d"},"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}]},{"cell_type":"code","execution_count":3,"metadata":{"id":"MmemwSYEhq5d","executionInfo":{"status":"ok","timestamp":1641372628511,"user_tz":-480,"elapsed":26,"user":{"displayName":"陳佑甄","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgzIUBUXR24tLoip4QQgjhsStGIG9hzjbafxUsz=s64","userId":"10990682828848697792"}}},"outputs":[],"source":["import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt"]},{"cell_type":"code","source":["def decision_stump(X, Y, U, theta):\n","  n = theta.shape[0]\n","  N = X.shape[0]\n","  # 沿y軸複製n倍，沿x軸複製1倍\n","  # 複製十次整份training data\n","  # X.shape (1000,)\n","  # theta.shape (1000, 1)\n","  X = np.tile(X, (n, 1))\n","  # X.shape (1000, 1000)\n","  # h(x)=s*sign(xi-theta)，s=-1/+1\n","  y1 = np.sign(X - theta)\n","  y2 = np.sign(X - theta) * (-1)\n","  # Ein(u) weighted error\n","  error1 = np.sum((y1 != Y) * U, axis=1)\n","  error2 = np.sum((y2 != Y) * U, axis=1)\n","  # index of min error\n","  i1 = np.argmin(error1)\n","  i2 = np.argmin(error2)\n","\n","  if error1[i1] < error2[i2]:\n","      s = 1\n","      index = i1\n","      error = error1[i1]\n","      # error = error1[i1] / N\n","  else:\n","      s = -1\n","      index = i2\n","      error = error2[i2]\n","      # error = error2[i2] / N\n","  return s, index, error"],"metadata":{"id":"6v6z62fLyPmR","executionInfo":{"status":"ok","timestamp":1641372628513,"user_tz":-480,"elapsed":24,"user":{"displayName":"陳佑甄","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgzIUBUXR24tLoip4QQgjhsStGIG9hzjbafxUsz=s64","userId":"10990682828848697792"}}},"execution_count":4,"outputs":[]},{"cell_type":"code","source":["def decision_stump_all(X, Y, U, theta):\n","  # 對所有維度做 decision_stump 後取誤差最小的\n","  x = [[] for i in range(10)]\n","  thetai = [[] for i in range(10)]\n","  s = [[] for i in range(10)]\n","  i = [[] for i in range(10)]\n","  e = [[] for i in range(10)]\n","  for k in range(10):\n","    x[k] = X[:, k]\n","    thetai[k] = theta[:, k].reshape(-1, 1)\n","    s[k], i[k], e[k] = decision_stump(x[k], Y, U, thetai[k])\n","\n","  mine = e[0]\n","  midx = 0\n","  for k in range(1, 10):\n","    if e[k] < mine:\n","        midx = k\n","        mine = e[k]\n","  return e[midx], s[midx], midx, i[midx]"],"metadata":{"id":"gb9RXwjYyTTx","executionInfo":{"status":"ok","timestamp":1641372628783,"user_tz":-480,"elapsed":6,"user":{"displayName":"陳佑甄","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgzIUBUXR24tLoip4QQgjhsStGIG9hzjbafxUsz=s64","userId":"10990682828848697792"}}},"execution_count":5,"outputs":[]},{"cell_type":"code","source":["def AdaBoost(X, Y, theta, T=500):\n","  # init\n","  N = X.shape[0]\n","  ut = np.ones(N) / N\n","  ut_1 = np.array([])\n","  alpha = np.array([])\n","  epsilon = np.array([])\n","  Ein = np.array([])\n","  G = np.array([])\n","\n","  for t in range(T):\n","    # comput current optimal result\n","    ein, s, d, index = decision_stump_all(X, Y, ut, theta)\n","    # 每50輪印一次，共印十次\n","    if t % 50 == 0:\n","        print(ein, s, d, index)\n","    # epsilon_t\n","    epsilon_t = ut.dot((s * np.sign(X[:, d] - theta[:, d][index])) != Y) / np.sum(ut)\n","    # 方塊 t\n","    cube_t = np.sqrt((1 - epsilon_t) / epsilon_t)\n","    # re-scale incorrect u_t\n","    i1 = s * np.sign(X[:, d] - theta[:, d][index]) != Y\n","    ut[i1] = ut[i1] * cube_t\n","    # re-scale correct u_t\n","    i2 = s * np.sign(X[:, d] - theta[:, d][index]) == Y\n","    ut[i2] = ut[i2] / cube_t\n","    # update alpha\n","    alpha_t = np.log(cube_t)\n","    \n","    # update variable\n","    Ein = np.r_[Ein, ein]\n","    if(t == 0):\n","        ut_1 = np.array([ut])\n","    else:\n","        ut_1 = np.r_[ut_1, np.array([ut])]\n","    epsilon = np.r_[epsilon, epsilon_t]\n","    alpha = np.r_[alpha, alpha_t]\n","    g = [[s, d, index]]\n","\n","    # G(x)\n","    if(t == 0):\n","        G = np.array(g)\n","    else:\n","        G = np.r_[G, np.array(g)]\n","  return Ein, ut_1, epsilon, alpha, G"],"metadata":{"id":"JNQ9rL0EyXaC","executionInfo":{"status":"ok","timestamp":1641372630512,"user_tz":-480,"elapsed":317,"user":{"displayName":"陳佑甄","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgzIUBUXR24tLoip4QQgjhsStGIG9hzjbafxUsz=s64","userId":"10990682828848697792"}}},"execution_count":6,"outputs":[]},{"cell_type":"code","source":["if __name__ == '__main__':\n","  # Get Data\n","  train = np.genfromtxt('/content/drive/MyDrive/Colab Notebooks/ML/HW6/hw6_train.dat.txt')\n","  test = np.genfromtxt('/content/drive/MyDrive/Colab Notebooks/ML/HW6/hw6_test.dat.txt')\n","  # print(train)\n","  # prepare theta\n","  train_dt = [[] for i in range(10)]\n","  x = [[] for i in range(10)]\n","  theta = [[] for i in range(10)]\n","  for i in range(10):\n","    # 按每個feature去排序所有資料，共十個feature，所以會有十個\n","    train_dt[i] = np.array(sorted(train, key=lambda x:x[i]))\n","    # 塞每個排序後的那一欄feature值給x[i]，x[0]就是1000筆資料排序後的所有第0個feature值，共1000個\n","    x[i] = train_dt[i][:, i]\n","    # 第一個為負無限大，然後是所有的中點\n","    theta[i] = np.append(np.array(x[i][0] - 1), (x[i][:-1] + x[i][1:])/2)\n","    # theta[i] = np.append(theta[i], x[i][-1] + 0.1)\n","\n","  theta = np.c_[theta[0], theta[1], theta[2], theta[3], theta[4], theta[5], theta[6], theta[7], theta[8], theta[9]]\n","  # print(len(theta))\n","  # print(theta.shape)\n","  # Traing data\n","  Y = train[:, 10]\n","  X = train[:, :10]\n","\n","  # Testing data\n","  Ytest = test[:, 10]\n","  Xtest = test[:, :10]\n","\n","  Ein, U, epsilon, alpha, G = AdaBoost(X, Y, theta, 500)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"5WgKVz4miXZp","executionInfo":{"status":"ok","timestamp":1641372744836,"user_tz":-480,"elapsed":112184,"user":{"displayName":"陳佑甄","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgzIUBUXR24tLoip4QQgjhsStGIG9hzjbafxUsz=s64","userId":"10990682828848697792"}},"outputId":"4b53a205-a6e2-4d7f-c18a-64379a07c756"},"execution_count":7,"outputs":[{"output_type":"stream","name":"stdout","text":["0.374 -1 9 694\n","0.25089357000866486 -1 9 861\n","0.21490346446178551 1 1 225\n","0.18947194377251314 -1 1 810\n","0.17577715396255406 -1 6 168\n","0.1626653813681176 -1 0 340\n","0.15357846343223844 -1 1 407\n","0.14251443889877227 1 5 997\n","0.13444852045664263 -1 1 908\n","0.1291357407345058 -1 4 362\n"]}]},{"cell_type":"code","source":["# 11 \n","print(\"Problem 11: \", Ein[0])\n","print(Ein.shape)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2Fg46-i_zfzB","executionInfo":{"status":"ok","timestamp":1641372744839,"user_tz":-480,"elapsed":59,"user":{"displayName":"陳佑甄","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgzIUBUXR24tLoip4QQgjhsStGIG9hzjbafxUsz=s64","userId":"10990682828848697792"}},"outputId":"fbaae341-03ec-4210-c922-9aceec84f819"},"execution_count":8,"outputs":[{"output_type":"stream","name":"stdout","text":["Problem 11:  0.374\n","(500,)\n"]}]},{"cell_type":"code","source":["# 12\n","s = G[:, 0]\n","d = G[:, 1]\n","theta_ = G[:, 2]\n","g = []\n","for i in range(500):\n","  s_ = s[i]\n","  d_ = d[i]\n","  t_ = theta_[i]\n","  g.append(np.mean(s_*np.sign(X[:, d_] - theta[:, d_][t_]) != Y))\n","print(\"Problem 12: \", max(g))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"vMkxBP_80Ld9","executionInfo":{"status":"ok","timestamp":1641372744840,"user_tz":-480,"elapsed":53,"user":{"displayName":"陳佑甄","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgzIUBUXR24tLoip4QQgjhsStGIG9hzjbafxUsz=s64","userId":"10990682828848697792"}},"outputId":"9c2547e4-1319-4fdc-8fb6-881928703ad8"},"execution_count":9,"outputs":[{"output_type":"stream","name":"stdout","text":["Problem 12:  0.591\n"]}]},{"cell_type":"code","source":["# 13\n","# compute E_{in|out}(Gt)\n","def predict(X, Y, G, alpha, t, theta):\n","  s = G[:t, 0]\n","  d = G[:t, 1]\n","  theta_ = G[:t, 2]\n","  alpha_ = alpha[:t]\n","  \n","  result = []\n","  for i in range(t):\n","      s_ = s[i]\n","      d_ = d[i]\n","      t_ = theta_[i]\n","      result.append(s_*np.sign(X[:, d_] - theta[:, d_][t_]))\n","  r = alpha_.dot(np.array(result))\n","\n","  return np.mean(np.sign(r) != Y)\n","\n","for i in range(500):\n","  e_in = predict(X, Y, G, alpha, i, theta)\n","  if e_in <= 0.05:\n","    print(\"Problem 13: \")\n","    print(i)\n","    break"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"zkk1MykM0MoO","executionInfo":{"status":"ok","timestamp":1641372792996,"user_tz":-480,"elapsed":1725,"user":{"displayName":"陳佑甄","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgzIUBUXR24tLoip4QQgjhsStGIG9hzjbafxUsz=s64","userId":"10990682828848697792"}},"outputId":"e3715ece-0bed-4845-87d0-5649f331bdaa"},"execution_count":14,"outputs":[{"output_type":"stream","name":"stdout","text":["Problem 13: \n","355\n"]}]},{"cell_type":"code","source":["# 14\n","print(\"Problem 14: \", np.mean(s[0]*np.sign(Xtest[:, d[0]] - theta[:, d[0]][theta_[0]]) != Ytest))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"IhtXiRMe0QXW","executionInfo":{"status":"ok","timestamp":1641372746453,"user_tz":-480,"elapsed":32,"user":{"displayName":"陳佑甄","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgzIUBUXR24tLoip4QQgjhsStGIG9hzjbafxUsz=s64","userId":"10990682828848697792"}},"outputId":"3725c09b-5ad1-41fd-867b-b58b92a376d8"},"execution_count":11,"outputs":[{"output_type":"stream","name":"stdout","text":["Problem 14:  0.455\n"]}]},{"cell_type":"code","source":["# 15\n","result = []\n","for i in range(500):\n","  s_ = s[i]\n","  d_ = d[i]\n","  t_ = theta_[i]\n","  result.append(s_*np.sign(Xtest[:, d_] - theta[:, d_][t_]))\n","print(\"Problem 15: \", np.mean(np.sign(np.array(result)) != Ytest))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"wMaWhyw-0Su0","executionInfo":{"status":"ok","timestamp":1641372746455,"user_tz":-480,"elapsed":31,"user":{"displayName":"陳佑甄","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgzIUBUXR24tLoip4QQgjhsStGIG9hzjbafxUsz=s64","userId":"10990682828848697792"}},"outputId":"79986ecf-68e3-4735-a4fa-90445a86e5ce"},"execution_count":12,"outputs":[{"output_type":"stream","name":"stdout","text":["Problem 15:  0.484212\n"]}]},{"cell_type":"code","source":["# 16\n","print(\"Problem 16: \", predict(Xtest, Ytest, G, alpha, 500, theta))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"v84ni4um0WsA","executionInfo":{"status":"ok","timestamp":1641372746456,"user_tz":-480,"elapsed":27,"user":{"displayName":"陳佑甄","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgzIUBUXR24tLoip4QQgjhsStGIG9hzjbafxUsz=s64","userId":"10990682828848697792"}},"outputId":"a5b3c93e-3f06-4475-c4d4-e2e446a998e5"},"execution_count":13,"outputs":[{"output_type":"stream","name":"stdout","text":["Problem 16:  0.188\n"]}]}]}