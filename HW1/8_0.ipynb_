{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"8_0.ipynb ","provenance":[],"collapsed_sections":[],"authorship_tag":"ABX9TyMBwfz6aTyOcCa0QERg8g0b"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","metadata":{"id":"BODFDcstQqq0","executionInfo":{"status":"ok","timestamp":1634659006486,"user_tz":-480,"elapsed":3,"user":{"displayName":"陳佑甄","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgzIUBUXR24tLoip4QQgjhsStGIG9hzjbafxUsz=s64","userId":"10990682828848697792"}}},"source":["import urllib.request\n","import numpy as np\n","import random"],"execution_count":1,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0WUAV2NLKAwk","executionInfo":{"status":"ok","timestamp":1634659027469,"user_tz":-480,"elapsed":20985,"user":{"displayName":"陳佑甄","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgzIUBUXR24tLoip4QQgjhsStGIG9hzjbafxUsz=s64","userId":"10990682828848697792"}},"outputId":"49a99d72-ee37-47b3-e9ae-25705172cf99"},"source":["def pla(indexlist):\n","  # W = np.zeros((len(indexlist)))\n","  W = [0]*len(indexlist)\n","  point = []\n","  cnt = 0\n","  print(len(indexlist))\n","  while cnt < len(indexlist):\n","    Xi = X[indexlist[cnt]]\n","    Xi = np.concatenate((np.array([1.]), np.array(Xi)))\n","    Yi = Y[indexlist[cnt]]\n","    WXi = np.sign(np.dot(W, Xi))\n","    #sign(0) = -1\n","    if WXi == 0:\n","      WXi = -1\n","    #mistake so update\n","    if WXi != np.sign(Yi):\n","      #W = W + np.dot(Yi, Xi)\n","      print(W)\n","      W = W + Yi * Xi\n","      print(W)\n","      cnt = 0\n","      point = []\n","    else: #right\n","      cnt = cnt + 1\n","      point.append(Xi)\n","\n","  print(\"cnt \", cnt)\n","  print(\"point: \", point, '\\n')\n","  wpla.append(W)\n","  points.append(point)\n","\n","if __name__ == '__main__':\n","\n","  X = [['-2', '2'], ['0', '0'], ['0', '3'], ['1', '1'], ['2', '1'], ['3', '0']]\n","  Y = ['1', '1', '1', '-1', '-1', '-1',]\n","  X = np.asarray(X, dtype = float)\n","  Y = np.asarray(Y, dtype = float)\n","  Eosts = []\n","  iteration = 1000\n","  for iter in range(iteration):\n","    wpla = []\n","    points = []\n","    ranlist = []\n","    #fix seed\n","    random.seed(iter)\n","    while len(ranlist) < 3:\n","      #random index\n","      rindex = random.randint(0, 5)\n","      if rindex not in ranlist:\n","        ranlist.append(rindex)\n","    print(\"ranlist: \",ranlist)\n","    #find Ein(g) = 0 on D\n","    pla(ranlist)\n","\n","    #find g outside D\n","    remainlist = []\n","    for i in range(6):\n","      if i not in ranlist:\n","        remainlist.append(i)\n","    print(\"remainlist: \", remainlist)\n","    pla(remainlist)\n","\n","    print(\"wpla: \", wpla)\n","    print(\"points: \", points)\n","\n","    # Eots(g)\n","    h = wpla[0]\n","    print(\"h: \", h)\n","    dout = points[1]\n","    print(\"dout: \", dout)\n","    y = []\n","    for i in range(len(dout)):\n","      y.append(np.sign(np.dot(h, dout[0])))\n","    print(\"y: \", y)\n","    errorsum = 0\n","    \n","    for i, j in zip(remainlist, range(len(dout))):\n","      if y[j] != Y[i]:\n","        errorsum = errorsum + 1\n","    print(\"errorsum: \", errorsum)\n","    Eost = errorsum/len(remainlist)\n","    print(\"Eost: \", Eost)\n","    Eosts.append(Eost)\n","  print(Eosts)\n","  print(\"Eost max: \",max(Eosts))\n","  print(\"Eost min: \",min(Eosts))"],"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["\u001b[1;30;43m串流輸出內容已截斷至最後 5000 行。\u001b[0m\n","errorsum:  1\n","Eost:  0.3333333333333333\n","ranlist:  [0, 3, 1]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","[ 1. -2.  2.]\n","[ 0. -3.  1.]\n","[ 0. -3.  1.]\n","[ 1. -3.  1.]\n","cnt  3\n","point:  [array([ 1., -2.,  2.]), array([1., 1., 1.]), array([1., 0., 0.])] \n","\n","remainlist:  [2, 4, 5]\n","3\n","[0, 0, 0]\n","[1. 0. 3.]\n","[1. 0. 3.]\n","[ 0. -2.  2.]\n","cnt  3\n","point:  [array([1., 0., 3.]), array([1., 2., 1.]), array([1., 3., 0.])] \n","\n","wpla:  [array([ 1., -3.,  1.]), array([ 0., -2.,  2.])]\n","points:  [[array([ 1., -2.,  2.]), array([1., 1., 1.]), array([1., 0., 0.])], [array([1., 0., 3.]), array([1., 2., 1.]), array([1., 3., 0.])]]\n","h:  [ 1. -3.  1.]\n","dout:  [array([1., 0., 3.]), array([1., 2., 1.]), array([1., 3., 0.])]\n","y:  [1.0, 1.0, 1.0]\n","errorsum:  2\n","Eost:  0.6666666666666666\n","ranlist:  [5, 4, 3]\n","3\n","cnt  3\n","point:  [array([1., 3., 0.]), array([1., 2., 1.]), array([1., 1., 1.])] \n","\n","remainlist:  [0, 1, 2]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","cnt  3\n","point:  [array([ 1., -2.,  2.]), array([1., 0., 0.]), array([1., 0., 3.])] \n","\n","wpla:  [[0, 0, 0], array([ 1., -2.,  2.])]\n","points:  [[array([1., 3., 0.]), array([1., 2., 1.]), array([1., 1., 1.])], [array([ 1., -2.,  2.]), array([1., 0., 0.]), array([1., 0., 3.])]]\n","h:  [0, 0, 0]\n","dout:  [array([ 1., -2.,  2.]), array([1., 0., 0.]), array([1., 0., 3.])]\n","y:  [0.0, 0.0, 0.0]\n","errorsum:  3\n","Eost:  1.0\n","ranlist:  [0, 1, 4]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","cnt  3\n","point:  [array([ 1., -2.,  2.]), array([1., 0., 0.]), array([1., 2., 1.])] \n","\n","remainlist:  [2, 3, 5]\n","3\n","[0, 0, 0]\n","[1. 0. 3.]\n","[1. 0. 3.]\n","[ 0. -1.  2.]\n","[ 0. -1.  2.]\n","[-1. -2.  1.]\n","cnt  3\n","point:  [array([1., 0., 3.]), array([1., 1., 1.]), array([1., 3., 0.])] \n","\n","wpla:  [array([ 1., -2.,  2.]), array([-1., -2.,  1.])]\n","points:  [[array([ 1., -2.,  2.]), array([1., 0., 0.]), array([1., 2., 1.])], [array([1., 0., 3.]), array([1., 1., 1.]), array([1., 3., 0.])]]\n","h:  [ 1. -2.  2.]\n","dout:  [array([1., 0., 3.]), array([1., 1., 1.]), array([1., 3., 0.])]\n","y:  [1.0, 1.0, 1.0]\n","errorsum:  2\n","Eost:  0.6666666666666666\n","ranlist:  [0, 3, 4]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","[ 1. -2.  2.]\n","[ 0. -3.  1.]\n","cnt  3\n","point:  [array([ 1., -2.,  2.]), array([1., 1., 1.]), array([1., 2., 1.])] \n","\n","remainlist:  [1, 2, 5]\n","3\n","[0, 0, 0]\n","[1. 0. 0.]\n","[1. 0. 0.]\n","[ 0. -3.  0.]\n","[ 0. -3.  0.]\n","[ 1. -3.  0.]\n","cnt  3\n","point:  [array([1., 0., 0.]), array([1., 0., 3.]), array([1., 3., 0.])] \n","\n","wpla:  [array([ 0., -3.,  1.]), array([ 1., -3.,  0.])]\n","points:  [[array([ 1., -2.,  2.]), array([1., 1., 1.]), array([1., 2., 1.])], [array([1., 0., 0.]), array([1., 0., 3.]), array([1., 3., 0.])]]\n","h:  [ 0. -3.  1.]\n","dout:  [array([1., 0., 0.]), array([1., 0., 3.]), array([1., 3., 0.])]\n","y:  [0.0, 0.0, 0.0]\n","errorsum:  3\n","Eost:  1.0\n","ranlist:  [1, 0, 4]\n","3\n","[0, 0, 0]\n","[1. 0. 0.]\n","[1. 0. 0.]\n","[ 0. -2. -1.]\n","[ 0. -2. -1.]\n","[ 1. -2. -1.]\n","cnt  3\n","point:  [array([1., 0., 0.]), array([ 1., -2.,  2.]), array([1., 2., 1.])] \n","\n","remainlist:  [2, 3, 5]\n","3\n","[0, 0, 0]\n","[1. 0. 3.]\n","[1. 0. 3.]\n","[ 0. -1.  2.]\n","[ 0. -1.  2.]\n","[-1. -2.  1.]\n","cnt  3\n","point:  [array([1., 0., 3.]), array([1., 1., 1.]), array([1., 3., 0.])] \n","\n","wpla:  [array([ 1., -2., -1.]), array([-1., -2.,  1.])]\n","points:  [[array([1., 0., 0.]), array([ 1., -2.,  2.]), array([1., 2., 1.])], [array([1., 0., 3.]), array([1., 1., 1.]), array([1., 3., 0.])]]\n","h:  [ 1. -2. -1.]\n","dout:  [array([1., 0., 3.]), array([1., 1., 1.]), array([1., 3., 0.])]\n","y:  [-1.0, -1.0, -1.0]\n","errorsum:  1\n","Eost:  0.3333333333333333\n","ranlist:  [4, 1, 5]\n","3\n","[0, 0, 0]\n","[1. 0. 0.]\n","[1. 0. 0.]\n","[ 0. -2. -1.]\n","[ 0. -2. -1.]\n","[ 1. -2. -1.]\n","cnt  3\n","point:  [array([1., 2., 1.]), array([1., 0., 0.]), array([1., 3., 0.])] \n","\n","remainlist:  [0, 2, 3]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","[ 1. -2.  2.]\n","[ 0. -3.  1.]\n","cnt  3\n","point:  [array([ 1., -2.,  2.]), array([1., 0., 3.]), array([1., 1., 1.])] \n","\n","wpla:  [array([ 1., -2., -1.]), array([ 0., -3.,  1.])]\n","points:  [[array([1., 2., 1.]), array([1., 0., 0.]), array([1., 3., 0.])], [array([ 1., -2.,  2.]), array([1., 0., 3.]), array([1., 1., 1.])]]\n","h:  [ 1. -2. -1.]\n","dout:  [array([ 1., -2.,  2.]), array([1., 0., 3.]), array([1., 1., 1.])]\n","y:  [1.0, 1.0, 1.0]\n","errorsum:  1\n","Eost:  0.3333333333333333\n","ranlist:  [0, 2, 4]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","cnt  3\n","point:  [array([ 1., -2.,  2.]), array([1., 0., 3.]), array([1., 2., 1.])] \n","\n","remainlist:  [1, 3, 5]\n","3\n","[0, 0, 0]\n","[1. 0. 0.]\n","[1. 0. 0.]\n","[ 0. -1. -1.]\n","[ 0. -1. -1.]\n","[ 1. -1. -1.]\n","cnt  3\n","point:  [array([1., 0., 0.]), array([1., 1., 1.]), array([1., 3., 0.])] \n","\n","wpla:  [array([ 1., -2.,  2.]), array([ 1., -1., -1.])]\n","points:  [[array([ 1., -2.,  2.]), array([1., 0., 3.]), array([1., 2., 1.])], [array([1., 0., 0.]), array([1., 1., 1.]), array([1., 3., 0.])]]\n","h:  [ 1. -2.  2.]\n","dout:  [array([1., 0., 0.]), array([1., 1., 1.]), array([1., 3., 0.])]\n","y:  [1.0, 1.0, 1.0]\n","errorsum:  2\n","Eost:  0.6666666666666666\n","ranlist:  [1, 4, 0]\n","3\n","[0, 0, 0]\n","[1. 0. 0.]\n","[1. 0. 0.]\n","[ 0. -2. -1.]\n","[ 0. -2. -1.]\n","[ 1. -2. -1.]\n","cnt  3\n","point:  [array([1., 0., 0.]), array([1., 2., 1.]), array([ 1., -2.,  2.])] \n","\n","remainlist:  [2, 3, 5]\n","3\n","[0, 0, 0]\n","[1. 0. 3.]\n","[1. 0. 3.]\n","[ 0. -1.  2.]\n","[ 0. -1.  2.]\n","[-1. -2.  1.]\n","cnt  3\n","point:  [array([1., 0., 3.]), array([1., 1., 1.]), array([1., 3., 0.])] \n","\n","wpla:  [array([ 1., -2., -1.]), array([-1., -2.,  1.])]\n","points:  [[array([1., 0., 0.]), array([1., 2., 1.]), array([ 1., -2.,  2.])], [array([1., 0., 3.]), array([1., 1., 1.]), array([1., 3., 0.])]]\n","h:  [ 1. -2. -1.]\n","dout:  [array([1., 0., 3.]), array([1., 1., 1.]), array([1., 3., 0.])]\n","y:  [-1.0, -1.0, -1.0]\n","errorsum:  1\n","Eost:  0.3333333333333333\n","ranlist:  [1, 4, 2]\n","3\n","[0, 0, 0]\n","[1. 0. 0.]\n","[1. 0. 0.]\n","[ 0. -2. -1.]\n","[ 0. -2. -1.]\n","[ 1. -2. -1.]\n","[ 1. -2. -1.]\n","[ 2. -2.  2.]\n","cnt  3\n","point:  [array([1., 0., 0.]), array([1., 2., 1.]), array([1., 0., 3.])] \n","\n","remainlist:  [0, 3, 5]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","[ 1. -2.  2.]\n","[ 0. -3.  1.]\n","cnt  3\n","point:  [array([ 1., -2.,  2.]), array([1., 1., 1.]), array([1., 3., 0.])] \n","\n","wpla:  [array([ 2., -2.,  2.]), array([ 0., -3.,  1.])]\n","points:  [[array([1., 0., 0.]), array([1., 2., 1.]), array([1., 0., 3.])], [array([ 1., -2.,  2.]), array([1., 1., 1.]), array([1., 3., 0.])]]\n","h:  [ 2. -2.  2.]\n","dout:  [array([ 1., -2.,  2.]), array([1., 1., 1.]), array([1., 3., 0.])]\n","y:  [1.0, 1.0, 1.0]\n","errorsum:  2\n","Eost:  0.6666666666666666\n","ranlist:  [3, 4, 2]\n","3\n","[0, 0, 0]\n","[1. 0. 3.]\n","[1. 0. 3.]\n","[ 0. -1.  2.]\n","[ 0. -1.  2.]\n","[-1. -2.  1.]\n","cnt  3\n","point:  [array([1., 1., 1.]), array([1., 2., 1.]), array([1., 0., 3.])] \n","\n","remainlist:  [0, 1, 5]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","cnt  3\n","point:  [array([ 1., -2.,  2.]), array([1., 0., 0.]), array([1., 3., 0.])] \n","\n","wpla:  [array([-1., -2.,  1.]), array([ 1., -2.,  2.])]\n","points:  [[array([1., 1., 1.]), array([1., 2., 1.]), array([1., 0., 3.])], [array([ 1., -2.,  2.]), array([1., 0., 0.]), array([1., 3., 0.])]]\n","h:  [-1. -2.  1.]\n","dout:  [array([ 1., -2.,  2.]), array([1., 0., 0.]), array([1., 3., 0.])]\n","y:  [1.0, 1.0, 1.0]\n","errorsum:  1\n","Eost:  0.3333333333333333\n","ranlist:  [2, 1, 5]\n","3\n","[0, 0, 0]\n","[1. 0. 3.]\n","[1. 0. 3.]\n","[ 0. -3.  3.]\n","[ 0. -3.  3.]\n","[ 1. -3.  3.]\n","cnt  3\n","point:  [array([1., 0., 3.]), array([1., 0., 0.]), array([1., 3., 0.])] \n","\n","remainlist:  [0, 3, 4]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","[ 1. -2.  2.]\n","[ 0. -3.  1.]\n","cnt  3\n","point:  [array([ 1., -2.,  2.]), array([1., 1., 1.]), array([1., 2., 1.])] \n","\n","wpla:  [array([ 1., -3.,  3.]), array([ 0., -3.,  1.])]\n","points:  [[array([1., 0., 3.]), array([1., 0., 0.]), array([1., 3., 0.])], [array([ 1., -2.,  2.]), array([1., 1., 1.]), array([1., 2., 1.])]]\n","h:  [ 1. -3.  3.]\n","dout:  [array([ 1., -2.,  2.]), array([1., 1., 1.]), array([1., 2., 1.])]\n","y:  [1.0, 1.0, 1.0]\n","errorsum:  2\n","Eost:  0.6666666666666666\n","ranlist:  [1, 2, 4]\n","3\n","[0, 0, 0]\n","[1. 0. 0.]\n","[1. 0. 0.]\n","[ 0. -2. -1.]\n","[ 0. -2. -1.]\n","[ 1. -2. -1.]\n","[ 1. -2. -1.]\n","[ 2. -2.  2.]\n","cnt  3\n","point:  [array([1., 0., 0.]), array([1., 0., 3.]), array([1., 2., 1.])] \n","\n","remainlist:  [0, 3, 5]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","[ 1. -2.  2.]\n","[ 0. -3.  1.]\n","cnt  3\n","point:  [array([ 1., -2.,  2.]), array([1., 1., 1.]), array([1., 3., 0.])] \n","\n","wpla:  [array([ 2., -2.,  2.]), array([ 0., -3.,  1.])]\n","points:  [[array([1., 0., 0.]), array([1., 0., 3.]), array([1., 2., 1.])], [array([ 1., -2.,  2.]), array([1., 1., 1.]), array([1., 3., 0.])]]\n","h:  [ 2. -2.  2.]\n","dout:  [array([ 1., -2.,  2.]), array([1., 1., 1.]), array([1., 3., 0.])]\n","y:  [1.0, 1.0, 1.0]\n","errorsum:  2\n","Eost:  0.6666666666666666\n","ranlist:  [4, 5, 3]\n","3\n","cnt  3\n","point:  [array([1., 2., 1.]), array([1., 3., 0.]), array([1., 1., 1.])] \n","\n","remainlist:  [0, 1, 2]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","cnt  3\n","point:  [array([ 1., -2.,  2.]), array([1., 0., 0.]), array([1., 0., 3.])] \n","\n","wpla:  [[0, 0, 0], array([ 1., -2.,  2.])]\n","points:  [[array([1., 2., 1.]), array([1., 3., 0.]), array([1., 1., 1.])], [array([ 1., -2.,  2.]), array([1., 0., 0.]), array([1., 0., 3.])]]\n","h:  [0, 0, 0]\n","dout:  [array([ 1., -2.,  2.]), array([1., 0., 0.]), array([1., 0., 3.])]\n","y:  [0.0, 0.0, 0.0]\n","errorsum:  3\n","Eost:  1.0\n","ranlist:  [0, 3, 2]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","[ 1. -2.  2.]\n","[ 0. -3.  1.]\n","cnt  3\n","point:  [array([ 1., -2.,  2.]), array([1., 1., 1.]), array([1., 0., 3.])] \n","\n","remainlist:  [1, 4, 5]\n","3\n","[0, 0, 0]\n","[1. 0. 0.]\n","[1. 0. 0.]\n","[ 0. -2. -1.]\n","[ 0. -2. -1.]\n","[ 1. -2. -1.]\n","cnt  3\n","point:  [array([1., 0., 0.]), array([1., 2., 1.]), array([1., 3., 0.])] \n","\n","wpla:  [array([ 0., -3.,  1.]), array([ 1., -2., -1.])]\n","points:  [[array([ 1., -2.,  2.]), array([1., 1., 1.]), array([1., 0., 3.])], [array([1., 0., 0.]), array([1., 2., 1.]), array([1., 3., 0.])]]\n","h:  [ 0. -3.  1.]\n","dout:  [array([1., 0., 0.]), array([1., 2., 1.]), array([1., 3., 0.])]\n","y:  [0.0, 0.0, 0.0]\n","errorsum:  3\n","Eost:  1.0\n","ranlist:  [2, 4, 1]\n","3\n","[0, 0, 0]\n","[1. 0. 3.]\n","[1. 0. 3.]\n","[ 0. -2.  2.]\n","[ 0. -2.  2.]\n","[ 1. -2.  2.]\n","cnt  3\n","point:  [array([1., 0., 3.]), array([1., 2., 1.]), array([1., 0., 0.])] \n","\n","remainlist:  [0, 3, 5]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","[ 1. -2.  2.]\n","[ 0. -3.  1.]\n","cnt  3\n","point:  [array([ 1., -2.,  2.]), array([1., 1., 1.]), array([1., 3., 0.])] \n","\n","wpla:  [array([ 1., -2.,  2.]), array([ 0., -3.,  1.])]\n","points:  [[array([1., 0., 3.]), array([1., 2., 1.]), array([1., 0., 0.])], [array([ 1., -2.,  2.]), array([1., 1., 1.]), array([1., 3., 0.])]]\n","h:  [ 1. -2.  2.]\n","dout:  [array([ 1., -2.,  2.]), array([1., 1., 1.]), array([1., 3., 0.])]\n","y:  [1.0, 1.0, 1.0]\n","errorsum:  2\n","Eost:  0.6666666666666666\n","ranlist:  [5, 1, 4]\n","3\n","[0, 0, 0]\n","[1. 0. 0.]\n","[1. 0. 0.]\n","[ 0. -3.  0.]\n","[ 0. -3.  0.]\n","[ 1. -3.  0.]\n","cnt  3\n","point:  [array([1., 3., 0.]), array([1., 0., 0.]), array([1., 2., 1.])] \n","\n","remainlist:  [0, 2, 3]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","[ 1. -2.  2.]\n","[ 0. -3.  1.]\n","cnt  3\n","point:  [array([ 1., -2.,  2.]), array([1., 0., 3.]), array([1., 1., 1.])] \n","\n","wpla:  [array([ 1., -3.,  0.]), array([ 0., -3.,  1.])]\n","points:  [[array([1., 3., 0.]), array([1., 0., 0.]), array([1., 2., 1.])], [array([ 1., -2.,  2.]), array([1., 0., 3.]), array([1., 1., 1.])]]\n","h:  [ 1. -3.  0.]\n","dout:  [array([ 1., -2.,  2.]), array([1., 0., 3.]), array([1., 1., 1.])]\n","y:  [1.0, 1.0, 1.0]\n","errorsum:  1\n","Eost:  0.3333333333333333\n","ranlist:  [2, 5, 4]\n","3\n","[0, 0, 0]\n","[1. 0. 3.]\n","[1. 0. 3.]\n","[ 0. -3.  3.]\n","cnt  3\n","point:  [array([1., 0., 3.]), array([1., 3., 0.]), array([1., 2., 1.])] \n","\n","remainlist:  [0, 1, 3]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","[ 1. -2.  2.]\n","[ 0. -3.  1.]\n","[ 0. -3.  1.]\n","[ 1. -3.  1.]\n","cnt  3\n","point:  [array([ 1., -2.,  2.]), array([1., 0., 0.]), array([1., 1., 1.])] \n","\n","wpla:  [array([ 0., -3.,  3.]), array([ 1., -3.,  1.])]\n","points:  [[array([1., 0., 3.]), array([1., 3., 0.]), array([1., 2., 1.])], [array([ 1., -2.,  2.]), array([1., 0., 0.]), array([1., 1., 1.])]]\n","h:  [ 0. -3.  3.]\n","dout:  [array([ 1., -2.,  2.]), array([1., 0., 0.]), array([1., 1., 1.])]\n","y:  [1.0, 1.0, 1.0]\n","errorsum:  1\n","Eost:  0.3333333333333333\n","ranlist:  [4, 5, 2]\n","3\n","[0, 0, 0]\n","[1. 0. 3.]\n","[1. 0. 3.]\n","[ 0. -2.  2.]\n","cnt  3\n","point:  [array([1., 2., 1.]), array([1., 3., 0.]), array([1., 0., 3.])] \n","\n","remainlist:  [0, 1, 3]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","[ 1. -2.  2.]\n","[ 0. -3.  1.]\n","[ 0. -3.  1.]\n","[ 1. -3.  1.]\n","cnt  3\n","point:  [array([ 1., -2.,  2.]), array([1., 0., 0.]), array([1., 1., 1.])] \n","\n","wpla:  [array([ 0., -2.,  2.]), array([ 1., -3.,  1.])]\n","points:  [[array([1., 2., 1.]), array([1., 3., 0.]), array([1., 0., 3.])], [array([ 1., -2.,  2.]), array([1., 0., 0.]), array([1., 1., 1.])]]\n","h:  [ 0. -2.  2.]\n","dout:  [array([ 1., -2.,  2.]), array([1., 0., 0.]), array([1., 1., 1.])]\n","y:  [1.0, 1.0, 1.0]\n","errorsum:  1\n","Eost:  0.3333333333333333\n","ranlist:  [2, 3, 4]\n","3\n","[0, 0, 0]\n","[1. 0. 3.]\n","[1. 0. 3.]\n","[ 0. -1.  2.]\n","[ 0. -1.  2.]\n","[-1. -2.  1.]\n","cnt  3\n","point:  [array([1., 0., 3.]), array([1., 1., 1.]), array([1., 2., 1.])] \n","\n","remainlist:  [0, 1, 5]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","cnt  3\n","point:  [array([ 1., -2.,  2.]), array([1., 0., 0.]), array([1., 3., 0.])] \n","\n","wpla:  [array([-1., -2.,  1.]), array([ 1., -2.,  2.])]\n","points:  [[array([1., 0., 3.]), array([1., 1., 1.]), array([1., 2., 1.])], [array([ 1., -2.,  2.]), array([1., 0., 0.]), array([1., 3., 0.])]]\n","h:  [-1. -2.  1.]\n","dout:  [array([ 1., -2.,  2.]), array([1., 0., 0.]), array([1., 3., 0.])]\n","y:  [1.0, 1.0, 1.0]\n","errorsum:  1\n","Eost:  0.3333333333333333\n","ranlist:  [1, 5, 0]\n","3\n","[0, 0, 0]\n","[1. 0. 0.]\n","[1. 0. 0.]\n","[ 0. -3.  0.]\n","[ 0. -3.  0.]\n","[ 1. -3.  0.]\n","cnt  3\n","point:  [array([1., 0., 0.]), array([1., 3., 0.]), array([ 1., -2.,  2.])] \n","\n","remainlist:  [2, 3, 4]\n","3\n","[0, 0, 0]\n","[1. 0. 3.]\n","[1. 0. 3.]\n","[ 0. -1.  2.]\n","[ 0. -1.  2.]\n","[-1. -2.  1.]\n","cnt  3\n","point:  [array([1., 0., 3.]), array([1., 1., 1.]), array([1., 2., 1.])] \n","\n","wpla:  [array([ 1., -3.,  0.]), array([-1., -2.,  1.])]\n","points:  [[array([1., 0., 0.]), array([1., 3., 0.]), array([ 1., -2.,  2.])], [array([1., 0., 3.]), array([1., 1., 1.]), array([1., 2., 1.])]]\n","h:  [ 1. -3.  0.]\n","dout:  [array([1., 0., 3.]), array([1., 1., 1.]), array([1., 2., 1.])]\n","y:  [1.0, 1.0, 1.0]\n","errorsum:  2\n","Eost:  0.6666666666666666\n","ranlist:  [1, 2, 3]\n","3\n","[0, 0, 0]\n","[1. 0. 0.]\n","[1. 0. 0.]\n","[ 0. -1. -1.]\n","[ 0. -1. -1.]\n","[ 1. -1. -1.]\n","[ 1. -1. -1.]\n","[ 2. -1.  2.]\n","[ 2. -1.  2.]\n","[ 1. -2.  1.]\n","cnt  3\n","point:  [array([1., 0., 0.]), array([1., 0., 3.]), array([1., 1., 1.])] \n","\n","remainlist:  [0, 4, 5]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","cnt  3\n","point:  [array([ 1., -2.,  2.]), array([1., 2., 1.]), array([1., 3., 0.])] \n","\n","wpla:  [array([ 1., -2.,  1.]), array([ 1., -2.,  2.])]\n","points:  [[array([1., 0., 0.]), array([1., 0., 3.]), array([1., 1., 1.])], [array([ 1., -2.,  2.]), array([1., 2., 1.]), array([1., 3., 0.])]]\n","h:  [ 1. -2.  1.]\n","dout:  [array([ 1., -2.,  2.]), array([1., 2., 1.]), array([1., 3., 0.])]\n","y:  [1.0, 1.0, 1.0]\n","errorsum:  2\n","Eost:  0.6666666666666666\n","ranlist:  [0, 5, 1]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","cnt  3\n","point:  [array([ 1., -2.,  2.]), array([1., 3., 0.]), array([1., 0., 0.])] \n","\n","remainlist:  [2, 3, 4]\n","3\n","[0, 0, 0]\n","[1. 0. 3.]\n","[1. 0. 3.]\n","[ 0. -1.  2.]\n","[ 0. -1.  2.]\n","[-1. -2.  1.]\n","cnt  3\n","point:  [array([1., 0., 3.]), array([1., 1., 1.]), array([1., 2., 1.])] \n","\n","wpla:  [array([ 1., -2.,  2.]), array([-1., -2.,  1.])]\n","points:  [[array([ 1., -2.,  2.]), array([1., 3., 0.]), array([1., 0., 0.])], [array([1., 0., 3.]), array([1., 1., 1.]), array([1., 2., 1.])]]\n","h:  [ 1. -2.  2.]\n","dout:  [array([1., 0., 3.]), array([1., 1., 1.]), array([1., 2., 1.])]\n","y:  [1.0, 1.0, 1.0]\n","errorsum:  2\n","Eost:  0.6666666666666666\n","ranlist:  [1, 2, 3]\n","3\n","[0, 0, 0]\n","[1. 0. 0.]\n","[1. 0. 0.]\n","[ 0. -1. -1.]\n","[ 0. -1. -1.]\n","[ 1. -1. -1.]\n","[ 1. -1. -1.]\n","[ 2. -1.  2.]\n","[ 2. -1.  2.]\n","[ 1. -2.  1.]\n","cnt  3\n","point:  [array([1., 0., 0.]), array([1., 0., 3.]), array([1., 1., 1.])] \n","\n","remainlist:  [0, 4, 5]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","cnt  3\n","point:  [array([ 1., -2.,  2.]), array([1., 2., 1.]), array([1., 3., 0.])] \n","\n","wpla:  [array([ 1., -2.,  1.]), array([ 1., -2.,  2.])]\n","points:  [[array([1., 0., 0.]), array([1., 0., 3.]), array([1., 1., 1.])], [array([ 1., -2.,  2.]), array([1., 2., 1.]), array([1., 3., 0.])]]\n","h:  [ 1. -2.  1.]\n","dout:  [array([ 1., -2.,  2.]), array([1., 2., 1.]), array([1., 3., 0.])]\n","y:  [1.0, 1.0, 1.0]\n","errorsum:  2\n","Eost:  0.6666666666666666\n","ranlist:  [5, 4, 2]\n","3\n","[0, 0, 0]\n","[1. 0. 3.]\n","[1. 0. 3.]\n","[ 0. -3.  3.]\n","cnt  3\n","point:  [array([1., 3., 0.]), array([1., 2., 1.]), array([1., 0., 3.])] \n","\n","remainlist:  [0, 1, 3]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","[ 1. -2.  2.]\n","[ 0. -3.  1.]\n","[ 0. -3.  1.]\n","[ 1. -3.  1.]\n","cnt  3\n","point:  [array([ 1., -2.,  2.]), array([1., 0., 0.]), array([1., 1., 1.])] \n","\n","wpla:  [array([ 0., -3.,  3.]), array([ 1., -3.,  1.])]\n","points:  [[array([1., 3., 0.]), array([1., 2., 1.]), array([1., 0., 3.])], [array([ 1., -2.,  2.]), array([1., 0., 0.]), array([1., 1., 1.])]]\n","h:  [ 0. -3.  3.]\n","dout:  [array([ 1., -2.,  2.]), array([1., 0., 0.]), array([1., 1., 1.])]\n","y:  [1.0, 1.0, 1.0]\n","errorsum:  1\n","Eost:  0.3333333333333333\n","ranlist:  [4, 2, 1]\n","3\n","[0, 0, 0]\n","[1. 0. 3.]\n","[1. 0. 3.]\n","[ 0. -2.  2.]\n","[ 0. -2.  2.]\n","[ 1. -2.  2.]\n","cnt  3\n","point:  [array([1., 2., 1.]), array([1., 0., 3.]), array([1., 0., 0.])] \n","\n","remainlist:  [0, 3, 5]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","[ 1. -2.  2.]\n","[ 0. -3.  1.]\n","cnt  3\n","point:  [array([ 1., -2.,  2.]), array([1., 1., 1.]), array([1., 3., 0.])] \n","\n","wpla:  [array([ 1., -2.,  2.]), array([ 0., -3.,  1.])]\n","points:  [[array([1., 2., 1.]), array([1., 0., 3.]), array([1., 0., 0.])], [array([ 1., -2.,  2.]), array([1., 1., 1.]), array([1., 3., 0.])]]\n","h:  [ 1. -2.  2.]\n","dout:  [array([ 1., -2.,  2.]), array([1., 1., 1.]), array([1., 3., 0.])]\n","y:  [1.0, 1.0, 1.0]\n","errorsum:  2\n","Eost:  0.6666666666666666\n","ranlist:  [2, 1, 4]\n","3\n","[0, 0, 0]\n","[1. 0. 3.]\n","[1. 0. 3.]\n","[ 0. -2.  2.]\n","[ 0. -2.  2.]\n","[ 1. -2.  2.]\n","cnt  3\n","point:  [array([1., 0., 3.]), array([1., 0., 0.]), array([1., 2., 1.])] \n","\n","remainlist:  [0, 3, 5]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","[ 1. -2.  2.]\n","[ 0. -3.  1.]\n","cnt  3\n","point:  [array([ 1., -2.,  2.]), array([1., 1., 1.]), array([1., 3., 0.])] \n","\n","wpla:  [array([ 1., -2.,  2.]), array([ 0., -3.,  1.])]\n","points:  [[array([1., 0., 3.]), array([1., 0., 0.]), array([1., 2., 1.])], [array([ 1., -2.,  2.]), array([1., 1., 1.]), array([1., 3., 0.])]]\n","h:  [ 1. -2.  2.]\n","dout:  [array([ 1., -2.,  2.]), array([1., 1., 1.]), array([1., 3., 0.])]\n","y:  [1.0, 1.0, 1.0]\n","errorsum:  2\n","Eost:  0.6666666666666666\n","ranlist:  [4, 5, 1]\n","3\n","[0, 0, 0]\n","[1. 0. 0.]\n","[1. 0. 0.]\n","[ 0. -2. -1.]\n","[ 0. -2. -1.]\n","[ 1. -2. -1.]\n","cnt  3\n","point:  [array([1., 2., 1.]), array([1., 3., 0.]), array([1., 0., 0.])] \n","\n","remainlist:  [0, 2, 3]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","[ 1. -2.  2.]\n","[ 0. -3.  1.]\n","cnt  3\n","point:  [array([ 1., -2.,  2.]), array([1., 0., 3.]), array([1., 1., 1.])] \n","\n","wpla:  [array([ 1., -2., -1.]), array([ 0., -3.,  1.])]\n","points:  [[array([1., 2., 1.]), array([1., 3., 0.]), array([1., 0., 0.])], [array([ 1., -2.,  2.]), array([1., 0., 3.]), array([1., 1., 1.])]]\n","h:  [ 1. -2. -1.]\n","dout:  [array([ 1., -2.,  2.]), array([1., 0., 3.]), array([1., 1., 1.])]\n","y:  [1.0, 1.0, 1.0]\n","errorsum:  1\n","Eost:  0.3333333333333333\n","ranlist:  [3, 0, 4]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","[ 1. -2.  2.]\n","[ 0. -3.  1.]\n","cnt  3\n","point:  [array([1., 1., 1.]), array([ 1., -2.,  2.]), array([1., 2., 1.])] \n","\n","remainlist:  [1, 2, 5]\n","3\n","[0, 0, 0]\n","[1. 0. 0.]\n","[1. 0. 0.]\n","[ 0. -3.  0.]\n","[ 0. -3.  0.]\n","[ 1. -3.  0.]\n","cnt  3\n","point:  [array([1., 0., 0.]), array([1., 0., 3.]), array([1., 3., 0.])] \n","\n","wpla:  [array([ 0., -3.,  1.]), array([ 1., -3.,  0.])]\n","points:  [[array([1., 1., 1.]), array([ 1., -2.,  2.]), array([1., 2., 1.])], [array([1., 0., 0.]), array([1., 0., 3.]), array([1., 3., 0.])]]\n","h:  [ 0. -3.  1.]\n","dout:  [array([1., 0., 0.]), array([1., 0., 3.]), array([1., 3., 0.])]\n","y:  [0.0, 0.0, 0.0]\n","errorsum:  3\n","Eost:  1.0\n","ranlist:  [4, 2, 3]\n","3\n","[0, 0, 0]\n","[1. 0. 3.]\n","[1. 0. 3.]\n","[ 0. -2.  2.]\n","cnt  3\n","point:  [array([1., 2., 1.]), array([1., 0., 3.]), array([1., 1., 1.])] \n","\n","remainlist:  [0, 1, 5]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","cnt  3\n","point:  [array([ 1., -2.,  2.]), array([1., 0., 0.]), array([1., 3., 0.])] \n","\n","wpla:  [array([ 0., -2.,  2.]), array([ 1., -2.,  2.])]\n","points:  [[array([1., 2., 1.]), array([1., 0., 3.]), array([1., 1., 1.])], [array([ 1., -2.,  2.]), array([1., 0., 0.]), array([1., 3., 0.])]]\n","h:  [ 0. -2.  2.]\n","dout:  [array([ 1., -2.,  2.]), array([1., 0., 0.]), array([1., 3., 0.])]\n","y:  [1.0, 1.0, 1.0]\n","errorsum:  1\n","Eost:  0.3333333333333333\n","ranlist:  [4, 2, 5]\n","3\n","[0, 0, 0]\n","[1. 0. 3.]\n","[1. 0. 3.]\n","[ 0. -2.  2.]\n","cnt  3\n","point:  [array([1., 2., 1.]), array([1., 0., 3.]), array([1., 3., 0.])] \n","\n","remainlist:  [0, 1, 3]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","[ 1. -2.  2.]\n","[ 0. -3.  1.]\n","[ 0. -3.  1.]\n","[ 1. -3.  1.]\n","cnt  3\n","point:  [array([ 1., -2.,  2.]), array([1., 0., 0.]), array([1., 1., 1.])] \n","\n","wpla:  [array([ 0., -2.,  2.]), array([ 1., -3.,  1.])]\n","points:  [[array([1., 2., 1.]), array([1., 0., 3.]), array([1., 3., 0.])], [array([ 1., -2.,  2.]), array([1., 0., 0.]), array([1., 1., 1.])]]\n","h:  [ 0. -2.  2.]\n","dout:  [array([ 1., -2.,  2.]), array([1., 0., 0.]), array([1., 1., 1.])]\n","y:  [1.0, 1.0, 1.0]\n","errorsum:  1\n","Eost:  0.3333333333333333\n","ranlist:  [4, 0, 2]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","cnt  3\n","point:  [array([1., 2., 1.]), array([ 1., -2.,  2.]), array([1., 0., 3.])] \n","\n","remainlist:  [1, 3, 5]\n","3\n","[0, 0, 0]\n","[1. 0. 0.]\n","[1. 0. 0.]\n","[ 0. -1. -1.]\n","[ 0. -1. -1.]\n","[ 1. -1. -1.]\n","cnt  3\n","point:  [array([1., 0., 0.]), array([1., 1., 1.]), array([1., 3., 0.])] \n","\n","wpla:  [array([ 1., -2.,  2.]), array([ 1., -1., -1.])]\n","points:  [[array([1., 2., 1.]), array([ 1., -2.,  2.]), array([1., 0., 3.])], [array([1., 0., 0.]), array([1., 1., 1.]), array([1., 3., 0.])]]\n","h:  [ 1. -2.  2.]\n","dout:  [array([1., 0., 0.]), array([1., 1., 1.]), array([1., 3., 0.])]\n","y:  [1.0, 1.0, 1.0]\n","errorsum:  2\n","Eost:  0.6666666666666666\n","ranlist:  [1, 3, 4]\n","3\n","[0, 0, 0]\n","[1. 0. 0.]\n","[1. 0. 0.]\n","[ 0. -1. -1.]\n","[ 0. -1. -1.]\n","[ 1. -1. -1.]\n","cnt  3\n","point:  [array([1., 0., 0.]), array([1., 1., 1.]), array([1., 2., 1.])] \n","\n","remainlist:  [0, 2, 5]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","cnt  3\n","point:  [array([ 1., -2.,  2.]), array([1., 0., 3.]), array([1., 3., 0.])] \n","\n","wpla:  [array([ 1., -1., -1.]), array([ 1., -2.,  2.])]\n","points:  [[array([1., 0., 0.]), array([1., 1., 1.]), array([1., 2., 1.])], [array([ 1., -2.,  2.]), array([1., 0., 3.]), array([1., 3., 0.])]]\n","h:  [ 1. -1. -1.]\n","dout:  [array([ 1., -2.,  2.]), array([1., 0., 3.]), array([1., 3., 0.])]\n","y:  [1.0, 1.0, 1.0]\n","errorsum:  1\n","Eost:  0.3333333333333333\n","ranlist:  [4, 5, 3]\n","3\n","cnt  3\n","point:  [array([1., 2., 1.]), array([1., 3., 0.]), array([1., 1., 1.])] \n","\n","remainlist:  [0, 1, 2]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","cnt  3\n","point:  [array([ 1., -2.,  2.]), array([1., 0., 0.]), array([1., 0., 3.])] \n","\n","wpla:  [[0, 0, 0], array([ 1., -2.,  2.])]\n","points:  [[array([1., 2., 1.]), array([1., 3., 0.]), array([1., 1., 1.])], [array([ 1., -2.,  2.]), array([1., 0., 0.]), array([1., 0., 3.])]]\n","h:  [0, 0, 0]\n","dout:  [array([ 1., -2.,  2.]), array([1., 0., 0.]), array([1., 0., 3.])]\n","y:  [0.0, 0.0, 0.0]\n","errorsum:  3\n","Eost:  1.0\n","ranlist:  [0, 3, 1]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","[ 1. -2.  2.]\n","[ 0. -3.  1.]\n","[ 0. -3.  1.]\n","[ 1. -3.  1.]\n","cnt  3\n","point:  [array([ 1., -2.,  2.]), array([1., 1., 1.]), array([1., 0., 0.])] \n","\n","remainlist:  [2, 4, 5]\n","3\n","[0, 0, 0]\n","[1. 0. 3.]\n","[1. 0. 3.]\n","[ 0. -2.  2.]\n","cnt  3\n","point:  [array([1., 0., 3.]), array([1., 2., 1.]), array([1., 3., 0.])] \n","\n","wpla:  [array([ 1., -3.,  1.]), array([ 0., -2.,  2.])]\n","points:  [[array([ 1., -2.,  2.]), array([1., 1., 1.]), array([1., 0., 0.])], [array([1., 0., 3.]), array([1., 2., 1.]), array([1., 3., 0.])]]\n","h:  [ 1. -3.  1.]\n","dout:  [array([1., 0., 3.]), array([1., 2., 1.]), array([1., 3., 0.])]\n","y:  [1.0, 1.0, 1.0]\n","errorsum:  2\n","Eost:  0.6666666666666666\n","ranlist:  [5, 4, 0]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","cnt  3\n","point:  [array([1., 3., 0.]), array([1., 2., 1.]), array([ 1., -2.,  2.])] \n","\n","remainlist:  [1, 2, 3]\n","3\n","[0, 0, 0]\n","[1. 0. 0.]\n","[1. 0. 0.]\n","[ 0. -1. -1.]\n","[ 0. -1. -1.]\n","[ 1. -1. -1.]\n","[ 1. -1. -1.]\n","[ 2. -1.  2.]\n","[ 2. -1.  2.]\n","[ 1. -2.  1.]\n","cnt  3\n","point:  [array([1., 0., 0.]), array([1., 0., 3.]), array([1., 1., 1.])] \n","\n","wpla:  [array([ 1., -2.,  2.]), array([ 1., -2.,  1.])]\n","points:  [[array([1., 3., 0.]), array([1., 2., 1.]), array([ 1., -2.,  2.])], [array([1., 0., 0.]), array([1., 0., 3.]), array([1., 1., 1.])]]\n","h:  [ 1. -2.  2.]\n","dout:  [array([1., 0., 0.]), array([1., 0., 3.]), array([1., 1., 1.])]\n","y:  [1.0, 1.0, 1.0]\n","errorsum:  1\n","Eost:  0.3333333333333333\n","ranlist:  [5, 4, 1]\n","3\n","[0, 0, 0]\n","[1. 0. 0.]\n","[1. 0. 0.]\n","[ 0. -3.  0.]\n","[ 0. -3.  0.]\n","[ 1. -3.  0.]\n","cnt  3\n","point:  [array([1., 3., 0.]), array([1., 2., 1.]), array([1., 0., 0.])] \n","\n","remainlist:  [0, 2, 3]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","[ 1. -2.  2.]\n","[ 0. -3.  1.]\n","cnt  3\n","point:  [array([ 1., -2.,  2.]), array([1., 0., 3.]), array([1., 1., 1.])] \n","\n","wpla:  [array([ 1., -3.,  0.]), array([ 0., -3.,  1.])]\n","points:  [[array([1., 3., 0.]), array([1., 2., 1.]), array([1., 0., 0.])], [array([ 1., -2.,  2.]), array([1., 0., 3.]), array([1., 1., 1.])]]\n","h:  [ 1. -3.  0.]\n","dout:  [array([ 1., -2.,  2.]), array([1., 0., 3.]), array([1., 1., 1.])]\n","y:  [1.0, 1.0, 1.0]\n","errorsum:  1\n","Eost:  0.3333333333333333\n","ranlist:  [0, 2, 5]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","cnt  3\n","point:  [array([ 1., -2.,  2.]), array([1., 0., 3.]), array([1., 3., 0.])] \n","\n","remainlist:  [1, 3, 4]\n","3\n","[0, 0, 0]\n","[1. 0. 0.]\n","[1. 0. 0.]\n","[ 0. -1. -1.]\n","[ 0. -1. -1.]\n","[ 1. -1. -1.]\n","cnt  3\n","point:  [array([1., 0., 0.]), array([1., 1., 1.]), array([1., 2., 1.])] \n","\n","wpla:  [array([ 1., -2.,  2.]), array([ 1., -1., -1.])]\n","points:  [[array([ 1., -2.,  2.]), array([1., 0., 3.]), array([1., 3., 0.])], [array([1., 0., 0.]), array([1., 1., 1.]), array([1., 2., 1.])]]\n","h:  [ 1. -2.  2.]\n","dout:  [array([1., 0., 0.]), array([1., 1., 1.]), array([1., 2., 1.])]\n","y:  [1.0, 1.0, 1.0]\n","errorsum:  2\n","Eost:  0.6666666666666666\n","ranlist:  [0, 3, 1]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","[ 1. -2.  2.]\n","[ 0. -3.  1.]\n","[ 0. -3.  1.]\n","[ 1. -3.  1.]\n","cnt  3\n","point:  [array([ 1., -2.,  2.]), array([1., 1., 1.]), array([1., 0., 0.])] \n","\n","remainlist:  [2, 4, 5]\n","3\n","[0, 0, 0]\n","[1. 0. 3.]\n","[1. 0. 3.]\n","[ 0. -2.  2.]\n","cnt  3\n","point:  [array([1., 0., 3.]), array([1., 2., 1.]), array([1., 3., 0.])] \n","\n","wpla:  [array([ 1., -3.,  1.]), array([ 0., -2.,  2.])]\n","points:  [[array([ 1., -2.,  2.]), array([1., 1., 1.]), array([1., 0., 0.])], [array([1., 0., 3.]), array([1., 2., 1.]), array([1., 3., 0.])]]\n","h:  [ 1. -3.  1.]\n","dout:  [array([1., 0., 3.]), array([1., 2., 1.]), array([1., 3., 0.])]\n","y:  [1.0, 1.0, 1.0]\n","errorsum:  2\n","Eost:  0.6666666666666666\n","ranlist:  [3, 1, 4]\n","3\n","[0, 0, 0]\n","[1. 0. 0.]\n","[1. 0. 0.]\n","[ 0. -1. -1.]\n","[ 0. -1. -1.]\n","[ 1. -1. -1.]\n","cnt  3\n","point:  [array([1., 1., 1.]), array([1., 0., 0.]), array([1., 2., 1.])] \n","\n","remainlist:  [0, 2, 5]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","cnt  3\n","point:  [array([ 1., -2.,  2.]), array([1., 0., 3.]), array([1., 3., 0.])] \n","\n","wpla:  [array([ 1., -1., -1.]), array([ 1., -2.,  2.])]\n","points:  [[array([1., 1., 1.]), array([1., 0., 0.]), array([1., 2., 1.])], [array([ 1., -2.,  2.]), array([1., 0., 3.]), array([1., 3., 0.])]]\n","h:  [ 1. -1. -1.]\n","dout:  [array([ 1., -2.,  2.]), array([1., 0., 3.]), array([1., 3., 0.])]\n","y:  [1.0, 1.0, 1.0]\n","errorsum:  1\n","Eost:  0.3333333333333333\n","ranlist:  [3, 0, 2]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","[ 1. -2.  2.]\n","[ 0. -3.  1.]\n","cnt  3\n","point:  [array([1., 1., 1.]), array([ 1., -2.,  2.]), array([1., 0., 3.])] \n","\n","remainlist:  [1, 4, 5]\n","3\n","[0, 0, 0]\n","[1. 0. 0.]\n","[1. 0. 0.]\n","[ 0. -2. -1.]\n","[ 0. -2. -1.]\n","[ 1. -2. -1.]\n","cnt  3\n","point:  [array([1., 0., 0.]), array([1., 2., 1.]), array([1., 3., 0.])] \n","\n","wpla:  [array([ 0., -3.,  1.]), array([ 1., -2., -1.])]\n","points:  [[array([1., 1., 1.]), array([ 1., -2.,  2.]), array([1., 0., 3.])], [array([1., 0., 0.]), array([1., 2., 1.]), array([1., 3., 0.])]]\n","h:  [ 0. -3.  1.]\n","dout:  [array([1., 0., 0.]), array([1., 2., 1.]), array([1., 3., 0.])]\n","y:  [0.0, 0.0, 0.0]\n","errorsum:  3\n","Eost:  1.0\n","ranlist:  [0, 5, 2]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","cnt  3\n","point:  [array([ 1., -2.,  2.]), array([1., 3., 0.]), array([1., 0., 3.])] \n","\n","remainlist:  [1, 3, 4]\n","3\n","[0, 0, 0]\n","[1. 0. 0.]\n","[1. 0. 0.]\n","[ 0. -1. -1.]\n","[ 0. -1. -1.]\n","[ 1. -1. -1.]\n","cnt  3\n","point:  [array([1., 0., 0.]), array([1., 1., 1.]), array([1., 2., 1.])] \n","\n","wpla:  [array([ 1., -2.,  2.]), array([ 1., -1., -1.])]\n","points:  [[array([ 1., -2.,  2.]), array([1., 3., 0.]), array([1., 0., 3.])], [array([1., 0., 0.]), array([1., 1., 1.]), array([1., 2., 1.])]]\n","h:  [ 1. -2.  2.]\n","dout:  [array([1., 0., 0.]), array([1., 1., 1.]), array([1., 2., 1.])]\n","y:  [1.0, 1.0, 1.0]\n","errorsum:  2\n","Eost:  0.6666666666666666\n","ranlist:  [3, 0, 4]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","[ 1. -2.  2.]\n","[ 0. -3.  1.]\n","cnt  3\n","point:  [array([1., 1., 1.]), array([ 1., -2.,  2.]), array([1., 2., 1.])] \n","\n","remainlist:  [1, 2, 5]\n","3\n","[0, 0, 0]\n","[1. 0. 0.]\n","[1. 0. 0.]\n","[ 0. -3.  0.]\n","[ 0. -3.  0.]\n","[ 1. -3.  0.]\n","cnt  3\n","point:  [array([1., 0., 0.]), array([1., 0., 3.]), array([1., 3., 0.])] \n","\n","wpla:  [array([ 0., -3.,  1.]), array([ 1., -3.,  0.])]\n","points:  [[array([1., 1., 1.]), array([ 1., -2.,  2.]), array([1., 2., 1.])], [array([1., 0., 0.]), array([1., 0., 3.]), array([1., 3., 0.])]]\n","h:  [ 0. -3.  1.]\n","dout:  [array([1., 0., 0.]), array([1., 0., 3.]), array([1., 3., 0.])]\n","y:  [0.0, 0.0, 0.0]\n","errorsum:  3\n","Eost:  1.0\n","ranlist:  [4, 3, 5]\n","3\n","cnt  3\n","point:  [array([1., 2., 1.]), array([1., 1., 1.]), array([1., 3., 0.])] \n","\n","remainlist:  [0, 1, 2]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","cnt  3\n","point:  [array([ 1., -2.,  2.]), array([1., 0., 0.]), array([1., 0., 3.])] \n","\n","wpla:  [[0, 0, 0], array([ 1., -2.,  2.])]\n","points:  [[array([1., 2., 1.]), array([1., 1., 1.]), array([1., 3., 0.])], [array([ 1., -2.,  2.]), array([1., 0., 0.]), array([1., 0., 3.])]]\n","h:  [0, 0, 0]\n","dout:  [array([ 1., -2.,  2.]), array([1., 0., 0.]), array([1., 0., 3.])]\n","y:  [0.0, 0.0, 0.0]\n","errorsum:  3\n","Eost:  1.0\n","ranlist:  [4, 0, 3]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","[ 1. -2.  2.]\n","[ 0. -3.  1.]\n","cnt  3\n","point:  [array([1., 2., 1.]), array([ 1., -2.,  2.]), array([1., 1., 1.])] \n","\n","remainlist:  [1, 2, 5]\n","3\n","[0, 0, 0]\n","[1. 0. 0.]\n","[1. 0. 0.]\n","[ 0. -3.  0.]\n","[ 0. -3.  0.]\n","[ 1. -3.  0.]\n","cnt  3\n","point:  [array([1., 0., 0.]), array([1., 0., 3.]), array([1., 3., 0.])] \n","\n","wpla:  [array([ 0., -3.,  1.]), array([ 1., -3.,  0.])]\n","points:  [[array([1., 2., 1.]), array([ 1., -2.,  2.]), array([1., 1., 1.])], [array([1., 0., 0.]), array([1., 0., 3.]), array([1., 3., 0.])]]\n","h:  [ 0. -3.  1.]\n","dout:  [array([1., 0., 0.]), array([1., 0., 3.]), array([1., 3., 0.])]\n","y:  [0.0, 0.0, 0.0]\n","errorsum:  3\n","Eost:  1.0\n","ranlist:  [3, 2, 5]\n","3\n","[0, 0, 0]\n","[1. 0. 3.]\n","[1. 0. 3.]\n","[ 0. -1.  2.]\n","[ 0. -1.  2.]\n","[-1. -2.  1.]\n","cnt  3\n","point:  [array([1., 1., 1.]), array([1., 0., 3.]), array([1., 3., 0.])] \n","\n","remainlist:  [0, 1, 4]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","cnt  3\n","point:  [array([ 1., -2.,  2.]), array([1., 0., 0.]), array([1., 2., 1.])] \n","\n","wpla:  [array([-1., -2.,  1.]), array([ 1., -2.,  2.])]\n","points:  [[array([1., 1., 1.]), array([1., 0., 3.]), array([1., 3., 0.])], [array([ 1., -2.,  2.]), array([1., 0., 0.]), array([1., 2., 1.])]]\n","h:  [-1. -2.  1.]\n","dout:  [array([ 1., -2.,  2.]), array([1., 0., 0.]), array([1., 2., 1.])]\n","y:  [1.0, 1.0, 1.0]\n","errorsum:  1\n","Eost:  0.3333333333333333\n","ranlist:  [2, 5, 4]\n","3\n","[0, 0, 0]\n","[1. 0. 3.]\n","[1. 0. 3.]\n","[ 0. -3.  3.]\n","cnt  3\n","point:  [array([1., 0., 3.]), array([1., 3., 0.]), array([1., 2., 1.])] \n","\n","remainlist:  [0, 1, 3]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","[ 1. -2.  2.]\n","[ 0. -3.  1.]\n","[ 0. -3.  1.]\n","[ 1. -3.  1.]\n","cnt  3\n","point:  [array([ 1., -2.,  2.]), array([1., 0., 0.]), array([1., 1., 1.])] \n","\n","wpla:  [array([ 0., -3.,  3.]), array([ 1., -3.,  1.])]\n","points:  [[array([1., 0., 3.]), array([1., 3., 0.]), array([1., 2., 1.])], [array([ 1., -2.,  2.]), array([1., 0., 0.]), array([1., 1., 1.])]]\n","h:  [ 0. -3.  3.]\n","dout:  [array([ 1., -2.,  2.]), array([1., 0., 0.]), array([1., 1., 1.])]\n","y:  [1.0, 1.0, 1.0]\n","errorsum:  1\n","Eost:  0.3333333333333333\n","ranlist:  [1, 2, 5]\n","3\n","[0, 0, 0]\n","[1. 0. 0.]\n","[1. 0. 0.]\n","[ 0. -3.  0.]\n","[ 0. -3.  0.]\n","[ 1. -3.  0.]\n","cnt  3\n","point:  [array([1., 0., 0.]), array([1., 0., 3.]), array([1., 3., 0.])] \n","\n","remainlist:  [0, 3, 4]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","[ 1. -2.  2.]\n","[ 0. -3.  1.]\n","cnt  3\n","point:  [array([ 1., -2.,  2.]), array([1., 1., 1.]), array([1., 2., 1.])] \n","\n","wpla:  [array([ 1., -3.,  0.]), array([ 0., -3.,  1.])]\n","points:  [[array([1., 0., 0.]), array([1., 0., 3.]), array([1., 3., 0.])], [array([ 1., -2.,  2.]), array([1., 1., 1.]), array([1., 2., 1.])]]\n","h:  [ 1. -3.  0.]\n","dout:  [array([ 1., -2.,  2.]), array([1., 1., 1.]), array([1., 2., 1.])]\n","y:  [1.0, 1.0, 1.0]\n","errorsum:  2\n","Eost:  0.6666666666666666\n","ranlist:  [1, 4, 0]\n","3\n","[0, 0, 0]\n","[1. 0. 0.]\n","[1. 0. 0.]\n","[ 0. -2. -1.]\n","[ 0. -2. -1.]\n","[ 1. -2. -1.]\n","cnt  3\n","point:  [array([1., 0., 0.]), array([1., 2., 1.]), array([ 1., -2.,  2.])] \n","\n","remainlist:  [2, 3, 5]\n","3\n","[0, 0, 0]\n","[1. 0. 3.]\n","[1. 0. 3.]\n","[ 0. -1.  2.]\n","[ 0. -1.  2.]\n","[-1. -2.  1.]\n","cnt  3\n","point:  [array([1., 0., 3.]), array([1., 1., 1.]), array([1., 3., 0.])] \n","\n","wpla:  [array([ 1., -2., -1.]), array([-1., -2.,  1.])]\n","points:  [[array([1., 0., 0.]), array([1., 2., 1.]), array([ 1., -2.,  2.])], [array([1., 0., 3.]), array([1., 1., 1.]), array([1., 3., 0.])]]\n","h:  [ 1. -2. -1.]\n","dout:  [array([1., 0., 3.]), array([1., 1., 1.]), array([1., 3., 0.])]\n","y:  [-1.0, -1.0, -1.0]\n","errorsum:  1\n","Eost:  0.3333333333333333\n","ranlist:  [3, 5, 1]\n","3\n","[0, 0, 0]\n","[1. 0. 0.]\n","[1. 0. 0.]\n","[ 0. -1. -1.]\n","[ 0. -1. -1.]\n","[ 1. -1. -1.]\n","cnt  3\n","point:  [array([1., 1., 1.]), array([1., 3., 0.]), array([1., 0., 0.])] \n","\n","remainlist:  [0, 2, 4]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","cnt  3\n","point:  [array([ 1., -2.,  2.]), array([1., 0., 3.]), array([1., 2., 1.])] \n","\n","wpla:  [array([ 1., -1., -1.]), array([ 1., -2.,  2.])]\n","points:  [[array([1., 1., 1.]), array([1., 3., 0.]), array([1., 0., 0.])], [array([ 1., -2.,  2.]), array([1., 0., 3.]), array([1., 2., 1.])]]\n","h:  [ 1. -1. -1.]\n","dout:  [array([ 1., -2.,  2.]), array([1., 0., 3.]), array([1., 2., 1.])]\n","y:  [1.0, 1.0, 1.0]\n","errorsum:  1\n","Eost:  0.3333333333333333\n","ranlist:  [4, 0, 2]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","cnt  3\n","point:  [array([1., 2., 1.]), array([ 1., -2.,  2.]), array([1., 0., 3.])] \n","\n","remainlist:  [1, 3, 5]\n","3\n","[0, 0, 0]\n","[1. 0. 0.]\n","[1. 0. 0.]\n","[ 0. -1. -1.]\n","[ 0. -1. -1.]\n","[ 1. -1. -1.]\n","cnt  3\n","point:  [array([1., 0., 0.]), array([1., 1., 1.]), array([1., 3., 0.])] \n","\n","wpla:  [array([ 1., -2.,  2.]), array([ 1., -1., -1.])]\n","points:  [[array([1., 2., 1.]), array([ 1., -2.,  2.]), array([1., 0., 3.])], [array([1., 0., 0.]), array([1., 1., 1.]), array([1., 3., 0.])]]\n","h:  [ 1. -2.  2.]\n","dout:  [array([1., 0., 0.]), array([1., 1., 1.]), array([1., 3., 0.])]\n","y:  [1.0, 1.0, 1.0]\n","errorsum:  2\n","Eost:  0.6666666666666666\n","ranlist:  [4, 1, 0]\n","3\n","[0, 0, 0]\n","[1. 0. 0.]\n","[1. 0. 0.]\n","[ 0. -2. -1.]\n","[ 0. -2. -1.]\n","[ 1. -2. -1.]\n","cnt  3\n","point:  [array([1., 2., 1.]), array([1., 0., 0.]), array([ 1., -2.,  2.])] \n","\n","remainlist:  [2, 3, 5]\n","3\n","[0, 0, 0]\n","[1. 0. 3.]\n","[1. 0. 3.]\n","[ 0. -1.  2.]\n","[ 0. -1.  2.]\n","[-1. -2.  1.]\n","cnt  3\n","point:  [array([1., 0., 3.]), array([1., 1., 1.]), array([1., 3., 0.])] \n","\n","wpla:  [array([ 1., -2., -1.]), array([-1., -2.,  1.])]\n","points:  [[array([1., 2., 1.]), array([1., 0., 0.]), array([ 1., -2.,  2.])], [array([1., 0., 3.]), array([1., 1., 1.]), array([1., 3., 0.])]]\n","h:  [ 1. -2. -1.]\n","dout:  [array([1., 0., 3.]), array([1., 1., 1.]), array([1., 3., 0.])]\n","y:  [-1.0, -1.0, -1.0]\n","errorsum:  1\n","Eost:  0.3333333333333333\n","ranlist:  [1, 5, 0]\n","3\n","[0, 0, 0]\n","[1. 0. 0.]\n","[1. 0. 0.]\n","[ 0. -3.  0.]\n","[ 0. -3.  0.]\n","[ 1. -3.  0.]\n","cnt  3\n","point:  [array([1., 0., 0.]), array([1., 3., 0.]), array([ 1., -2.,  2.])] \n","\n","remainlist:  [2, 3, 4]\n","3\n","[0, 0, 0]\n","[1. 0. 3.]\n","[1. 0. 3.]\n","[ 0. -1.  2.]\n","[ 0. -1.  2.]\n","[-1. -2.  1.]\n","cnt  3\n","point:  [array([1., 0., 3.]), array([1., 1., 1.]), array([1., 2., 1.])] \n","\n","wpla:  [array([ 1., -3.,  0.]), array([-1., -2.,  1.])]\n","points:  [[array([1., 0., 0.]), array([1., 3., 0.]), array([ 1., -2.,  2.])], [array([1., 0., 3.]), array([1., 1., 1.]), array([1., 2., 1.])]]\n","h:  [ 1. -3.  0.]\n","dout:  [array([1., 0., 3.]), array([1., 1., 1.]), array([1., 2., 1.])]\n","y:  [1.0, 1.0, 1.0]\n","errorsum:  2\n","Eost:  0.6666666666666666\n","ranlist:  [3, 5, 0]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","[ 1. -2.  2.]\n","[ 0. -3.  1.]\n","cnt  3\n","point:  [array([1., 1., 1.]), array([1., 3., 0.]), array([ 1., -2.,  2.])] \n","\n","remainlist:  [1, 2, 4]\n","3\n","[0, 0, 0]\n","[1. 0. 0.]\n","[1. 0. 0.]\n","[ 0. -2. -1.]\n","[ 0. -2. -1.]\n","[ 1. -2. -1.]\n","[ 1. -2. -1.]\n","[ 2. -2.  2.]\n","cnt  3\n","point:  [array([1., 0., 0.]), array([1., 0., 3.]), array([1., 2., 1.])] \n","\n","wpla:  [array([ 0., -3.,  1.]), array([ 2., -2.,  2.])]\n","points:  [[array([1., 1., 1.]), array([1., 3., 0.]), array([ 1., -2.,  2.])], [array([1., 0., 0.]), array([1., 0., 3.]), array([1., 2., 1.])]]\n","h:  [ 0. -3.  1.]\n","dout:  [array([1., 0., 0.]), array([1., 0., 3.]), array([1., 2., 1.])]\n","y:  [0.0, 0.0, 0.0]\n","errorsum:  3\n","Eost:  1.0\n","ranlist:  [4, 5, 1]\n","3\n","[0, 0, 0]\n","[1. 0. 0.]\n","[1. 0. 0.]\n","[ 0. -2. -1.]\n","[ 0. -2. -1.]\n","[ 1. -2. -1.]\n","cnt  3\n","point:  [array([1., 2., 1.]), array([1., 3., 0.]), array([1., 0., 0.])] \n","\n","remainlist:  [0, 2, 3]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","[ 1. -2.  2.]\n","[ 0. -3.  1.]\n","cnt  3\n","point:  [array([ 1., -2.,  2.]), array([1., 0., 3.]), array([1., 1., 1.])] \n","\n","wpla:  [array([ 1., -2., -1.]), array([ 0., -3.,  1.])]\n","points:  [[array([1., 2., 1.]), array([1., 3., 0.]), array([1., 0., 0.])], [array([ 1., -2.,  2.]), array([1., 0., 3.]), array([1., 1., 1.])]]\n","h:  [ 1. -2. -1.]\n","dout:  [array([ 1., -2.,  2.]), array([1., 0., 3.]), array([1., 1., 1.])]\n","y:  [1.0, 1.0, 1.0]\n","errorsum:  1\n","Eost:  0.3333333333333333\n","ranlist:  [4, 2, 5]\n","3\n","[0, 0, 0]\n","[1. 0. 3.]\n","[1. 0. 3.]\n","[ 0. -2.  2.]\n","cnt  3\n","point:  [array([1., 2., 1.]), array([1., 0., 3.]), array([1., 3., 0.])] \n","\n","remainlist:  [0, 1, 3]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","[ 1. -2.  2.]\n","[ 0. -3.  1.]\n","[ 0. -3.  1.]\n","[ 1. -3.  1.]\n","cnt  3\n","point:  [array([ 1., -2.,  2.]), array([1., 0., 0.]), array([1., 1., 1.])] \n","\n","wpla:  [array([ 0., -2.,  2.]), array([ 1., -3.,  1.])]\n","points:  [[array([1., 2., 1.]), array([1., 0., 3.]), array([1., 3., 0.])], [array([ 1., -2.,  2.]), array([1., 0., 0.]), array([1., 1., 1.])]]\n","h:  [ 0. -2.  2.]\n","dout:  [array([ 1., -2.,  2.]), array([1., 0., 0.]), array([1., 1., 1.])]\n","y:  [1.0, 1.0, 1.0]\n","errorsum:  1\n","Eost:  0.3333333333333333\n","ranlist:  [2, 3, 0]\n","3\n","[0, 0, 0]\n","[1. 0. 3.]\n","[1. 0. 3.]\n","[ 0. -1.  2.]\n","[ 0. -1.  2.]\n","[-1. -2.  1.]\n","cnt  3\n","point:  [array([1., 0., 3.]), array([1., 1., 1.]), array([ 1., -2.,  2.])] \n","\n","remainlist:  [1, 4, 5]\n","3\n","[0, 0, 0]\n","[1. 0. 0.]\n","[1. 0. 0.]\n","[ 0. -2. -1.]\n","[ 0. -2. -1.]\n","[ 1. -2. -1.]\n","cnt  3\n","point:  [array([1., 0., 0.]), array([1., 2., 1.]), array([1., 3., 0.])] \n","\n","wpla:  [array([-1., -2.,  1.]), array([ 1., -2., -1.])]\n","points:  [[array([1., 0., 3.]), array([1., 1., 1.]), array([ 1., -2.,  2.])], [array([1., 0., 0.]), array([1., 2., 1.]), array([1., 3., 0.])]]\n","h:  [-1. -2.  1.]\n","dout:  [array([1., 0., 0.]), array([1., 2., 1.]), array([1., 3., 0.])]\n","y:  [-1.0, -1.0, -1.0]\n","errorsum:  1\n","Eost:  0.3333333333333333\n","ranlist:  [3, 4, 0]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","[ 1. -2.  2.]\n","[ 0. -3.  1.]\n","cnt  3\n","point:  [array([1., 1., 1.]), array([1., 2., 1.]), array([ 1., -2.,  2.])] \n","\n","remainlist:  [1, 2, 5]\n","3\n","[0, 0, 0]\n","[1. 0. 0.]\n","[1. 0. 0.]\n","[ 0. -3.  0.]\n","[ 0. -3.  0.]\n","[ 1. -3.  0.]\n","cnt  3\n","point:  [array([1., 0., 0.]), array([1., 0., 3.]), array([1., 3., 0.])] \n","\n","wpla:  [array([ 0., -3.,  1.]), array([ 1., -3.,  0.])]\n","points:  [[array([1., 1., 1.]), array([1., 2., 1.]), array([ 1., -2.,  2.])], [array([1., 0., 0.]), array([1., 0., 3.]), array([1., 3., 0.])]]\n","h:  [ 0. -3.  1.]\n","dout:  [array([1., 0., 0.]), array([1., 0., 3.]), array([1., 3., 0.])]\n","y:  [0.0, 0.0, 0.0]\n","errorsum:  3\n","Eost:  1.0\n","ranlist:  [0, 1, 2]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","cnt  3\n","point:  [array([ 1., -2.,  2.]), array([1., 0., 0.]), array([1., 0., 3.])] \n","\n","remainlist:  [3, 4, 5]\n","3\n","cnt  3\n","point:  [array([1., 1., 1.]), array([1., 2., 1.]), array([1., 3., 0.])] \n","\n","wpla:  [array([ 1., -2.,  2.]), [0, 0, 0]]\n","points:  [[array([ 1., -2.,  2.]), array([1., 0., 0.]), array([1., 0., 3.])], [array([1., 1., 1.]), array([1., 2., 1.]), array([1., 3., 0.])]]\n","h:  [ 1. -2.  2.]\n","dout:  [array([1., 1., 1.]), array([1., 2., 1.]), array([1., 3., 0.])]\n","y:  [1.0, 1.0, 1.0]\n","errorsum:  3\n","Eost:  1.0\n","ranlist:  [1, 5, 3]\n","3\n","[0, 0, 0]\n","[1. 0. 0.]\n","[1. 0. 0.]\n","[ 0. -3.  0.]\n","[ 0. -3.  0.]\n","[ 1. -3.  0.]\n","cnt  3\n","point:  [array([1., 0., 0.]), array([1., 3., 0.]), array([1., 1., 1.])] \n","\n","remainlist:  [0, 2, 4]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","cnt  3\n","point:  [array([ 1., -2.,  2.]), array([1., 0., 3.]), array([1., 2., 1.])] \n","\n","wpla:  [array([ 1., -3.,  0.]), array([ 1., -2.,  2.])]\n","points:  [[array([1., 0., 0.]), array([1., 3., 0.]), array([1., 1., 1.])], [array([ 1., -2.,  2.]), array([1., 0., 3.]), array([1., 2., 1.])]]\n","h:  [ 1. -3.  0.]\n","dout:  [array([ 1., -2.,  2.]), array([1., 0., 3.]), array([1., 2., 1.])]\n","y:  [1.0, 1.0, 1.0]\n","errorsum:  1\n","Eost:  0.3333333333333333\n","ranlist:  [3, 1, 2]\n","3\n","[0, 0, 0]\n","[1. 0. 0.]\n","[1. 0. 0.]\n","[ 0. -1. -1.]\n","[ 0. -1. -1.]\n","[ 1. -1. -1.]\n","[ 1. -1. -1.]\n","[ 2. -1.  2.]\n","[ 2. -1.  2.]\n","[ 1. -2.  1.]\n","cnt  3\n","point:  [array([1., 1., 1.]), array([1., 0., 0.]), array([1., 0., 3.])] \n","\n","remainlist:  [0, 4, 5]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","cnt  3\n","point:  [array([ 1., -2.,  2.]), array([1., 2., 1.]), array([1., 3., 0.])] \n","\n","wpla:  [array([ 1., -2.,  1.]), array([ 1., -2.,  2.])]\n","points:  [[array([1., 1., 1.]), array([1., 0., 0.]), array([1., 0., 3.])], [array([ 1., -2.,  2.]), array([1., 2., 1.]), array([1., 3., 0.])]]\n","h:  [ 1. -2.  1.]\n","dout:  [array([ 1., -2.,  2.]), array([1., 2., 1.]), array([1., 3., 0.])]\n","y:  [1.0, 1.0, 1.0]\n","errorsum:  2\n","Eost:  0.6666666666666666\n","ranlist:  [3, 5, 1]\n","3\n","[0, 0, 0]\n","[1. 0. 0.]\n","[1. 0. 0.]\n","[ 0. -1. -1.]\n","[ 0. -1. -1.]\n","[ 1. -1. -1.]\n","cnt  3\n","point:  [array([1., 1., 1.]), array([1., 3., 0.]), array([1., 0., 0.])] \n","\n","remainlist:  [0, 2, 4]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","cnt  3\n","point:  [array([ 1., -2.,  2.]), array([1., 0., 3.]), array([1., 2., 1.])] \n","\n","wpla:  [array([ 1., -1., -1.]), array([ 1., -2.,  2.])]\n","points:  [[array([1., 1., 1.]), array([1., 3., 0.]), array([1., 0., 0.])], [array([ 1., -2.,  2.]), array([1., 0., 3.]), array([1., 2., 1.])]]\n","h:  [ 1. -1. -1.]\n","dout:  [array([ 1., -2.,  2.]), array([1., 0., 3.]), array([1., 2., 1.])]\n","y:  [1.0, 1.0, 1.0]\n","errorsum:  1\n","Eost:  0.3333333333333333\n","ranlist:  [1, 3, 0]\n","3\n","[0, 0, 0]\n","[1. 0. 0.]\n","[1. 0. 0.]\n","[ 0. -1. -1.]\n","[ 0. -1. -1.]\n","[ 1. -1. -1.]\n","cnt  3\n","point:  [array([1., 0., 0.]), array([1., 1., 1.]), array([ 1., -2.,  2.])] \n","\n","remainlist:  [2, 4, 5]\n","3\n","[0, 0, 0]\n","[1. 0. 3.]\n","[1. 0. 3.]\n","[ 0. -2.  2.]\n","cnt  3\n","point:  [array([1., 0., 3.]), array([1., 2., 1.]), array([1., 3., 0.])] \n","\n","wpla:  [array([ 1., -1., -1.]), array([ 0., -2.,  2.])]\n","points:  [[array([1., 0., 0.]), array([1., 1., 1.]), array([ 1., -2.,  2.])], [array([1., 0., 3.]), array([1., 2., 1.]), array([1., 3., 0.])]]\n","h:  [ 1. -1. -1.]\n","dout:  [array([1., 0., 3.]), array([1., 2., 1.]), array([1., 3., 0.])]\n","y:  [-1.0, -1.0, -1.0]\n","errorsum:  1\n","Eost:  0.3333333333333333\n","ranlist:  [2, 4, 0]\n","3\n","[0, 0, 0]\n","[1. 0. 3.]\n","[1. 0. 3.]\n","[ 0. -2.  2.]\n","cnt  3\n","point:  [array([1., 0., 3.]), array([1., 2., 1.]), array([ 1., -2.,  2.])] \n","\n","remainlist:  [1, 3, 5]\n","3\n","[0, 0, 0]\n","[1. 0. 0.]\n","[1. 0. 0.]\n","[ 0. -1. -1.]\n","[ 0. -1. -1.]\n","[ 1. -1. -1.]\n","cnt  3\n","point:  [array([1., 0., 0.]), array([1., 1., 1.]), array([1., 3., 0.])] \n","\n","wpla:  [array([ 0., -2.,  2.]), array([ 1., -1., -1.])]\n","points:  [[array([1., 0., 3.]), array([1., 2., 1.]), array([ 1., -2.,  2.])], [array([1., 0., 0.]), array([1., 1., 1.]), array([1., 3., 0.])]]\n","h:  [ 0. -2.  2.]\n","dout:  [array([1., 0., 0.]), array([1., 1., 1.]), array([1., 3., 0.])]\n","y:  [0.0, 0.0, 0.0]\n","errorsum:  3\n","Eost:  1.0\n","ranlist:  [4, 3, 1]\n","3\n","[0, 0, 0]\n","[1. 0. 0.]\n","[1. 0. 0.]\n","[ 0. -2. -1.]\n","[ 0. -2. -1.]\n","[ 1. -2. -1.]\n","cnt  3\n","point:  [array([1., 2., 1.]), array([1., 1., 1.]), array([1., 0., 0.])] \n","\n","remainlist:  [0, 2, 5]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","cnt  3\n","point:  [array([ 1., -2.,  2.]), array([1., 0., 3.]), array([1., 3., 0.])] \n","\n","wpla:  [array([ 1., -2., -1.]), array([ 1., -2.,  2.])]\n","points:  [[array([1., 2., 1.]), array([1., 1., 1.]), array([1., 0., 0.])], [array([ 1., -2.,  2.]), array([1., 0., 3.]), array([1., 3., 0.])]]\n","h:  [ 1. -2. -1.]\n","dout:  [array([ 1., -2.,  2.]), array([1., 0., 3.]), array([1., 3., 0.])]\n","y:  [1.0, 1.0, 1.0]\n","errorsum:  1\n","Eost:  0.3333333333333333\n","ranlist:  [1, 5, 4]\n","3\n","[0, 0, 0]\n","[1. 0. 0.]\n","[1. 0. 0.]\n","[ 0. -3.  0.]\n","[ 0. -3.  0.]\n","[ 1. -3.  0.]\n","cnt  3\n","point:  [array([1., 0., 0.]), array([1., 3., 0.]), array([1., 2., 1.])] \n","\n","remainlist:  [0, 2, 3]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","[ 1. -2.  2.]\n","[ 0. -3.  1.]\n","cnt  3\n","point:  [array([ 1., -2.,  2.]), array([1., 0., 3.]), array([1., 1., 1.])] \n","\n","wpla:  [array([ 1., -3.,  0.]), array([ 0., -3.,  1.])]\n","points:  [[array([1., 0., 0.]), array([1., 3., 0.]), array([1., 2., 1.])], [array([ 1., -2.,  2.]), array([1., 0., 3.]), array([1., 1., 1.])]]\n","h:  [ 1. -3.  0.]\n","dout:  [array([ 1., -2.,  2.]), array([1., 0., 3.]), array([1., 1., 1.])]\n","y:  [1.0, 1.0, 1.0]\n","errorsum:  1\n","Eost:  0.3333333333333333\n","ranlist:  [4, 1, 2]\n","3\n","[0, 0, 0]\n","[1. 0. 0.]\n","[1. 0. 0.]\n","[ 0. -2. -1.]\n","[ 0. -2. -1.]\n","[ 1. -2. -1.]\n","[ 1. -2. -1.]\n","[ 2. -2.  2.]\n","cnt  3\n","point:  [array([1., 2., 1.]), array([1., 0., 0.]), array([1., 0., 3.])] \n","\n","remainlist:  [0, 3, 5]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","[ 1. -2.  2.]\n","[ 0. -3.  1.]\n","cnt  3\n","point:  [array([ 1., -2.,  2.]), array([1., 1., 1.]), array([1., 3., 0.])] \n","\n","wpla:  [array([ 2., -2.,  2.]), array([ 0., -3.,  1.])]\n","points:  [[array([1., 2., 1.]), array([1., 0., 0.]), array([1., 0., 3.])], [array([ 1., -2.,  2.]), array([1., 1., 1.]), array([1., 3., 0.])]]\n","h:  [ 2. -2.  2.]\n","dout:  [array([ 1., -2.,  2.]), array([1., 1., 1.]), array([1., 3., 0.])]\n","y:  [1.0, 1.0, 1.0]\n","errorsum:  2\n","Eost:  0.6666666666666666\n","ranlist:  [4, 2, 5]\n","3\n","[0, 0, 0]\n","[1. 0. 3.]\n","[1. 0. 3.]\n","[ 0. -2.  2.]\n","cnt  3\n","point:  [array([1., 2., 1.]), array([1., 0., 3.]), array([1., 3., 0.])] \n","\n","remainlist:  [0, 1, 3]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","[ 1. -2.  2.]\n","[ 0. -3.  1.]\n","[ 0. -3.  1.]\n","[ 1. -3.  1.]\n","cnt  3\n","point:  [array([ 1., -2.,  2.]), array([1., 0., 0.]), array([1., 1., 1.])] \n","\n","wpla:  [array([ 0., -2.,  2.]), array([ 1., -3.,  1.])]\n","points:  [[array([1., 2., 1.]), array([1., 0., 3.]), array([1., 3., 0.])], [array([ 1., -2.,  2.]), array([1., 0., 0.]), array([1., 1., 1.])]]\n","h:  [ 0. -2.  2.]\n","dout:  [array([ 1., -2.,  2.]), array([1., 0., 0.]), array([1., 1., 1.])]\n","y:  [1.0, 1.0, 1.0]\n","errorsum:  1\n","Eost:  0.3333333333333333\n","ranlist:  [5, 0, 2]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","cnt  3\n","point:  [array([1., 3., 0.]), array([ 1., -2.,  2.]), array([1., 0., 3.])] \n","\n","remainlist:  [1, 3, 4]\n","3\n","[0, 0, 0]\n","[1. 0. 0.]\n","[1. 0. 0.]\n","[ 0. -1. -1.]\n","[ 0. -1. -1.]\n","[ 1. -1. -1.]\n","cnt  3\n","point:  [array([1., 0., 0.]), array([1., 1., 1.]), array([1., 2., 1.])] \n","\n","wpla:  [array([ 1., -2.,  2.]), array([ 1., -1., -1.])]\n","points:  [[array([1., 3., 0.]), array([ 1., -2.,  2.]), array([1., 0., 3.])], [array([1., 0., 0.]), array([1., 1., 1.]), array([1., 2., 1.])]]\n","h:  [ 1. -2.  2.]\n","dout:  [array([1., 0., 0.]), array([1., 1., 1.]), array([1., 2., 1.])]\n","y:  [1.0, 1.0, 1.0]\n","errorsum:  2\n","Eost:  0.6666666666666666\n","ranlist:  [1, 3, 2]\n","3\n","[0, 0, 0]\n","[1. 0. 0.]\n","[1. 0. 0.]\n","[ 0. -1. -1.]\n","[ 0. -1. -1.]\n","[ 1. -1. -1.]\n","[ 1. -1. -1.]\n","[ 2. -1.  2.]\n","[ 2. -1.  2.]\n","[ 1. -2.  1.]\n","cnt  3\n","point:  [array([1., 0., 0.]), array([1., 1., 1.]), array([1., 0., 3.])] \n","\n","remainlist:  [0, 4, 5]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","cnt  3\n","point:  [array([ 1., -2.,  2.]), array([1., 2., 1.]), array([1., 3., 0.])] \n","\n","wpla:  [array([ 1., -2.,  1.]), array([ 1., -2.,  2.])]\n","points:  [[array([1., 0., 0.]), array([1., 1., 1.]), array([1., 0., 3.])], [array([ 1., -2.,  2.]), array([1., 2., 1.]), array([1., 3., 0.])]]\n","h:  [ 1. -2.  1.]\n","dout:  [array([ 1., -2.,  2.]), array([1., 2., 1.]), array([1., 3., 0.])]\n","y:  [1.0, 1.0, 1.0]\n","errorsum:  2\n","Eost:  0.6666666666666666\n","ranlist:  [4, 2, 3]\n","3\n","[0, 0, 0]\n","[1. 0. 3.]\n","[1. 0. 3.]\n","[ 0. -2.  2.]\n","cnt  3\n","point:  [array([1., 2., 1.]), array([1., 0., 3.]), array([1., 1., 1.])] \n","\n","remainlist:  [0, 1, 5]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","cnt  3\n","point:  [array([ 1., -2.,  2.]), array([1., 0., 0.]), array([1., 3., 0.])] \n","\n","wpla:  [array([ 0., -2.,  2.]), array([ 1., -2.,  2.])]\n","points:  [[array([1., 2., 1.]), array([1., 0., 3.]), array([1., 1., 1.])], [array([ 1., -2.,  2.]), array([1., 0., 0.]), array([1., 3., 0.])]]\n","h:  [ 0. -2.  2.]\n","dout:  [array([ 1., -2.,  2.]), array([1., 0., 0.]), array([1., 3., 0.])]\n","y:  [1.0, 1.0, 1.0]\n","errorsum:  1\n","Eost:  0.3333333333333333\n","ranlist:  [0, 4, 2]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","cnt  3\n","point:  [array([ 1., -2.,  2.]), array([1., 2., 1.]), array([1., 0., 3.])] \n","\n","remainlist:  [1, 3, 5]\n","3\n","[0, 0, 0]\n","[1. 0. 0.]\n","[1. 0. 0.]\n","[ 0. -1. -1.]\n","[ 0. -1. -1.]\n","[ 1. -1. -1.]\n","cnt  3\n","point:  [array([1., 0., 0.]), array([1., 1., 1.]), array([1., 3., 0.])] \n","\n","wpla:  [array([ 1., -2.,  2.]), array([ 1., -1., -1.])]\n","points:  [[array([ 1., -2.,  2.]), array([1., 2., 1.]), array([1., 0., 3.])], [array([1., 0., 0.]), array([1., 1., 1.]), array([1., 3., 0.])]]\n","h:  [ 1. -2.  2.]\n","dout:  [array([1., 0., 0.]), array([1., 1., 1.]), array([1., 3., 0.])]\n","y:  [1.0, 1.0, 1.0]\n","errorsum:  2\n","Eost:  0.6666666666666666\n","ranlist:  [0, 5, 2]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","cnt  3\n","point:  [array([ 1., -2.,  2.]), array([1., 3., 0.]), array([1., 0., 3.])] \n","\n","remainlist:  [1, 3, 4]\n","3\n","[0, 0, 0]\n","[1. 0. 0.]\n","[1. 0. 0.]\n","[ 0. -1. -1.]\n","[ 0. -1. -1.]\n","[ 1. -1. -1.]\n","cnt  3\n","point:  [array([1., 0., 0.]), array([1., 1., 1.]), array([1., 2., 1.])] \n","\n","wpla:  [array([ 1., -2.,  2.]), array([ 1., -1., -1.])]\n","points:  [[array([ 1., -2.,  2.]), array([1., 3., 0.]), array([1., 0., 3.])], [array([1., 0., 0.]), array([1., 1., 1.]), array([1., 2., 1.])]]\n","h:  [ 1. -2.  2.]\n","dout:  [array([1., 0., 0.]), array([1., 1., 1.]), array([1., 2., 1.])]\n","y:  [1.0, 1.0, 1.0]\n","errorsum:  2\n","Eost:  0.6666666666666666\n","ranlist:  [5, 2, 1]\n","3\n","[0, 0, 0]\n","[1. 0. 3.]\n","[1. 0. 3.]\n","[ 0. -3.  3.]\n","[ 0. -3.  3.]\n","[ 1. -3.  3.]\n","cnt  3\n","point:  [array([1., 3., 0.]), array([1., 0., 3.]), array([1., 0., 0.])] \n","\n","remainlist:  [0, 3, 4]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","[ 1. -2.  2.]\n","[ 0. -3.  1.]\n","cnt  3\n","point:  [array([ 1., -2.,  2.]), array([1., 1., 1.]), array([1., 2., 1.])] \n","\n","wpla:  [array([ 1., -3.,  3.]), array([ 0., -3.,  1.])]\n","points:  [[array([1., 3., 0.]), array([1., 0., 3.]), array([1., 0., 0.])], [array([ 1., -2.,  2.]), array([1., 1., 1.]), array([1., 2., 1.])]]\n","h:  [ 1. -3.  3.]\n","dout:  [array([ 1., -2.,  2.]), array([1., 1., 1.]), array([1., 2., 1.])]\n","y:  [1.0, 1.0, 1.0]\n","errorsum:  2\n","Eost:  0.6666666666666666\n","ranlist:  [0, 5, 2]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","cnt  3\n","point:  [array([ 1., -2.,  2.]), array([1., 3., 0.]), array([1., 0., 3.])] \n","\n","remainlist:  [1, 3, 4]\n","3\n","[0, 0, 0]\n","[1. 0. 0.]\n","[1. 0. 0.]\n","[ 0. -1. -1.]\n","[ 0. -1. -1.]\n","[ 1. -1. -1.]\n","cnt  3\n","point:  [array([1., 0., 0.]), array([1., 1., 1.]), array([1., 2., 1.])] \n","\n","wpla:  [array([ 1., -2.,  2.]), array([ 1., -1., -1.])]\n","points:  [[array([ 1., -2.,  2.]), array([1., 3., 0.]), array([1., 0., 3.])], [array([1., 0., 0.]), array([1., 1., 1.]), array([1., 2., 1.])]]\n","h:  [ 1. -2.  2.]\n","dout:  [array([1., 0., 0.]), array([1., 1., 1.]), array([1., 2., 1.])]\n","y:  [1.0, 1.0, 1.0]\n","errorsum:  2\n","Eost:  0.6666666666666666\n","ranlist:  [4, 0, 1]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","cnt  3\n","point:  [array([1., 2., 1.]), array([ 1., -2.,  2.]), array([1., 0., 0.])] \n","\n","remainlist:  [2, 3, 5]\n","3\n","[0, 0, 0]\n","[1. 0. 3.]\n","[1. 0. 3.]\n","[ 0. -1.  2.]\n","[ 0. -1.  2.]\n","[-1. -2.  1.]\n","cnt  3\n","point:  [array([1., 0., 3.]), array([1., 1., 1.]), array([1., 3., 0.])] \n","\n","wpla:  [array([ 1., -2.,  2.]), array([-1., -2.,  1.])]\n","points:  [[array([1., 2., 1.]), array([ 1., -2.,  2.]), array([1., 0., 0.])], [array([1., 0., 3.]), array([1., 1., 1.]), array([1., 3., 0.])]]\n","h:  [ 1. -2.  2.]\n","dout:  [array([1., 0., 3.]), array([1., 1., 1.]), array([1., 3., 0.])]\n","y:  [1.0, 1.0, 1.0]\n","errorsum:  2\n","Eost:  0.6666666666666666\n","ranlist:  [5, 0, 3]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","[ 1. -2.  2.]\n","[ 0. -3.  1.]\n","cnt  3\n","point:  [array([1., 3., 0.]), array([ 1., -2.,  2.]), array([1., 1., 1.])] \n","\n","remainlist:  [1, 2, 4]\n","3\n","[0, 0, 0]\n","[1. 0. 0.]\n","[1. 0. 0.]\n","[ 0. -2. -1.]\n","[ 0. -2. -1.]\n","[ 1. -2. -1.]\n","[ 1. -2. -1.]\n","[ 2. -2.  2.]\n","cnt  3\n","point:  [array([1., 0., 0.]), array([1., 0., 3.]), array([1., 2., 1.])] \n","\n","wpla:  [array([ 0., -3.,  1.]), array([ 2., -2.,  2.])]\n","points:  [[array([1., 3., 0.]), array([ 1., -2.,  2.]), array([1., 1., 1.])], [array([1., 0., 0.]), array([1., 0., 3.]), array([1., 2., 1.])]]\n","h:  [ 0. -3.  1.]\n","dout:  [array([1., 0., 0.]), array([1., 0., 3.]), array([1., 2., 1.])]\n","y:  [0.0, 0.0, 0.0]\n","errorsum:  3\n","Eost:  1.0\n","ranlist:  [2, 3, 0]\n","3\n","[0, 0, 0]\n","[1. 0. 3.]\n","[1. 0. 3.]\n","[ 0. -1.  2.]\n","[ 0. -1.  2.]\n","[-1. -2.  1.]\n","cnt  3\n","point:  [array([1., 0., 3.]), array([1., 1., 1.]), array([ 1., -2.,  2.])] \n","\n","remainlist:  [1, 4, 5]\n","3\n","[0, 0, 0]\n","[1. 0. 0.]\n","[1. 0. 0.]\n","[ 0. -2. -1.]\n","[ 0. -2. -1.]\n","[ 1. -2. -1.]\n","cnt  3\n","point:  [array([1., 0., 0.]), array([1., 2., 1.]), array([1., 3., 0.])] \n","\n","wpla:  [array([-1., -2.,  1.]), array([ 1., -2., -1.])]\n","points:  [[array([1., 0., 3.]), array([1., 1., 1.]), array([ 1., -2.,  2.])], [array([1., 0., 0.]), array([1., 2., 1.]), array([1., 3., 0.])]]\n","h:  [-1. -2.  1.]\n","dout:  [array([1., 0., 0.]), array([1., 2., 1.]), array([1., 3., 0.])]\n","y:  [-1.0, -1.0, -1.0]\n","errorsum:  1\n","Eost:  0.3333333333333333\n","ranlist:  [1, 4, 3]\n","3\n","[0, 0, 0]\n","[1. 0. 0.]\n","[1. 0. 0.]\n","[ 0. -2. -1.]\n","[ 0. -2. -1.]\n","[ 1. -2. -1.]\n","cnt  3\n","point:  [array([1., 0., 0.]), array([1., 2., 1.]), array([1., 1., 1.])] \n","\n","remainlist:  [0, 2, 5]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","cnt  3\n","point:  [array([ 1., -2.,  2.]), array([1., 0., 3.]), array([1., 3., 0.])] \n","\n","wpla:  [array([ 1., -2., -1.]), array([ 1., -2.,  2.])]\n","points:  [[array([1., 0., 0.]), array([1., 2., 1.]), array([1., 1., 1.])], [array([ 1., -2.,  2.]), array([1., 0., 3.]), array([1., 3., 0.])]]\n","h:  [ 1. -2. -1.]\n","dout:  [array([ 1., -2.,  2.]), array([1., 0., 3.]), array([1., 3., 0.])]\n","y:  [1.0, 1.0, 1.0]\n","errorsum:  1\n","Eost:  0.3333333333333333\n","ranlist:  [3, 1, 2]\n","3\n","[0, 0, 0]\n","[1. 0. 0.]\n","[1. 0. 0.]\n","[ 0. -1. -1.]\n","[ 0. -1. -1.]\n","[ 1. -1. -1.]\n","[ 1. -1. -1.]\n","[ 2. -1.  2.]\n","[ 2. -1.  2.]\n","[ 1. -2.  1.]\n","cnt  3\n","point:  [array([1., 1., 1.]), array([1., 0., 0.]), array([1., 0., 3.])] \n","\n","remainlist:  [0, 4, 5]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","cnt  3\n","point:  [array([ 1., -2.,  2.]), array([1., 2., 1.]), array([1., 3., 0.])] \n","\n","wpla:  [array([ 1., -2.,  1.]), array([ 1., -2.,  2.])]\n","points:  [[array([1., 1., 1.]), array([1., 0., 0.]), array([1., 0., 3.])], [array([ 1., -2.,  2.]), array([1., 2., 1.]), array([1., 3., 0.])]]\n","h:  [ 1. -2.  1.]\n","dout:  [array([ 1., -2.,  2.]), array([1., 2., 1.]), array([1., 3., 0.])]\n","y:  [1.0, 1.0, 1.0]\n","errorsum:  2\n","Eost:  0.6666666666666666\n","ranlist:  [0, 3, 4]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","[ 1. -2.  2.]\n","[ 0. -3.  1.]\n","cnt  3\n","point:  [array([ 1., -2.,  2.]), array([1., 1., 1.]), array([1., 2., 1.])] \n","\n","remainlist:  [1, 2, 5]\n","3\n","[0, 0, 0]\n","[1. 0. 0.]\n","[1. 0. 0.]\n","[ 0. -3.  0.]\n","[ 0. -3.  0.]\n","[ 1. -3.  0.]\n","cnt  3\n","point:  [array([1., 0., 0.]), array([1., 0., 3.]), array([1., 3., 0.])] \n","\n","wpla:  [array([ 0., -3.,  1.]), array([ 1., -3.,  0.])]\n","points:  [[array([ 1., -2.,  2.]), array([1., 1., 1.]), array([1., 2., 1.])], [array([1., 0., 0.]), array([1., 0., 3.]), array([1., 3., 0.])]]\n","h:  [ 0. -3.  1.]\n","dout:  [array([1., 0., 0.]), array([1., 0., 3.]), array([1., 3., 0.])]\n","y:  [0.0, 0.0, 0.0]\n","errorsum:  3\n","Eost:  1.0\n","ranlist:  [5, 4, 1]\n","3\n","[0, 0, 0]\n","[1. 0. 0.]\n","[1. 0. 0.]\n","[ 0. -3.  0.]\n","[ 0. -3.  0.]\n","[ 1. -3.  0.]\n","cnt  3\n","point:  [array([1., 3., 0.]), array([1., 2., 1.]), array([1., 0., 0.])] \n","\n","remainlist:  [0, 2, 3]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","[ 1. -2.  2.]\n","[ 0. -3.  1.]\n","cnt  3\n","point:  [array([ 1., -2.,  2.]), array([1., 0., 3.]), array([1., 1., 1.])] \n","\n","wpla:  [array([ 1., -3.,  0.]), array([ 0., -3.,  1.])]\n","points:  [[array([1., 3., 0.]), array([1., 2., 1.]), array([1., 0., 0.])], [array([ 1., -2.,  2.]), array([1., 0., 3.]), array([1., 1., 1.])]]\n","h:  [ 1. -3.  0.]\n","dout:  [array([ 1., -2.,  2.]), array([1., 0., 3.]), array([1., 1., 1.])]\n","y:  [1.0, 1.0, 1.0]\n","errorsum:  1\n","Eost:  0.3333333333333333\n","ranlist:  [0, 2, 5]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","cnt  3\n","point:  [array([ 1., -2.,  2.]), array([1., 0., 3.]), array([1., 3., 0.])] \n","\n","remainlist:  [1, 3, 4]\n","3\n","[0, 0, 0]\n","[1. 0. 0.]\n","[1. 0. 0.]\n","[ 0. -1. -1.]\n","[ 0. -1. -1.]\n","[ 1. -1. -1.]\n","cnt  3\n","point:  [array([1., 0., 0.]), array([1., 1., 1.]), array([1., 2., 1.])] \n","\n","wpla:  [array([ 1., -2.,  2.]), array([ 1., -1., -1.])]\n","points:  [[array([ 1., -2.,  2.]), array([1., 0., 3.]), array([1., 3., 0.])], [array([1., 0., 0.]), array([1., 1., 1.]), array([1., 2., 1.])]]\n","h:  [ 1. -2.  2.]\n","dout:  [array([1., 0., 0.]), array([1., 1., 1.]), array([1., 2., 1.])]\n","y:  [1.0, 1.0, 1.0]\n","errorsum:  2\n","Eost:  0.6666666666666666\n","ranlist:  [5, 3, 2]\n","3\n","[0, 0, 0]\n","[1. 0. 3.]\n","[1. 0. 3.]\n","[ 0. -3.  3.]\n","cnt  3\n","point:  [array([1., 3., 0.]), array([1., 1., 1.]), array([1., 0., 3.])] \n","\n","remainlist:  [0, 1, 4]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","cnt  3\n","point:  [array([ 1., -2.,  2.]), array([1., 0., 0.]), array([1., 2., 1.])] \n","\n","wpla:  [array([ 0., -3.,  3.]), array([ 1., -2.,  2.])]\n","points:  [[array([1., 3., 0.]), array([1., 1., 1.]), array([1., 0., 3.])], [array([ 1., -2.,  2.]), array([1., 0., 0.]), array([1., 2., 1.])]]\n","h:  [ 0. -3.  3.]\n","dout:  [array([ 1., -2.,  2.]), array([1., 0., 0.]), array([1., 2., 1.])]\n","y:  [1.0, 1.0, 1.0]\n","errorsum:  1\n","Eost:  0.3333333333333333\n","ranlist:  [1, 2, 5]\n","3\n","[0, 0, 0]\n","[1. 0. 0.]\n","[1. 0. 0.]\n","[ 0. -3.  0.]\n","[ 0. -3.  0.]\n","[ 1. -3.  0.]\n","cnt  3\n","point:  [array([1., 0., 0.]), array([1., 0., 3.]), array([1., 3., 0.])] \n","\n","remainlist:  [0, 3, 4]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","[ 1. -2.  2.]\n","[ 0. -3.  1.]\n","cnt  3\n","point:  [array([ 1., -2.,  2.]), array([1., 1., 1.]), array([1., 2., 1.])] \n","\n","wpla:  [array([ 1., -3.,  0.]), array([ 0., -3.,  1.])]\n","points:  [[array([1., 0., 0.]), array([1., 0., 3.]), array([1., 3., 0.])], [array([ 1., -2.,  2.]), array([1., 1., 1.]), array([1., 2., 1.])]]\n","h:  [ 1. -3.  0.]\n","dout:  [array([ 1., -2.,  2.]), array([1., 1., 1.]), array([1., 2., 1.])]\n","y:  [1.0, 1.0, 1.0]\n","errorsum:  2\n","Eost:  0.6666666666666666\n","ranlist:  [4, 2, 1]\n","3\n","[0, 0, 0]\n","[1. 0. 3.]\n","[1. 0. 3.]\n","[ 0. -2.  2.]\n","[ 0. -2.  2.]\n","[ 1. -2.  2.]\n","cnt  3\n","point:  [array([1., 2., 1.]), array([1., 0., 3.]), array([1., 0., 0.])] \n","\n","remainlist:  [0, 3, 5]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","[ 1. -2.  2.]\n","[ 0. -3.  1.]\n","cnt  3\n","point:  [array([ 1., -2.,  2.]), array([1., 1., 1.]), array([1., 3., 0.])] \n","\n","wpla:  [array([ 1., -2.,  2.]), array([ 0., -3.,  1.])]\n","points:  [[array([1., 2., 1.]), array([1., 0., 3.]), array([1., 0., 0.])], [array([ 1., -2.,  2.]), array([1., 1., 1.]), array([1., 3., 0.])]]\n","h:  [ 1. -2.  2.]\n","dout:  [array([ 1., -2.,  2.]), array([1., 1., 1.]), array([1., 3., 0.])]\n","y:  [1.0, 1.0, 1.0]\n","errorsum:  2\n","Eost:  0.6666666666666666\n","ranlist:  [3, 2, 5]\n","3\n","[0, 0, 0]\n","[1. 0. 3.]\n","[1. 0. 3.]\n","[ 0. -1.  2.]\n","[ 0. -1.  2.]\n","[-1. -2.  1.]\n","cnt  3\n","point:  [array([1., 1., 1.]), array([1., 0., 3.]), array([1., 3., 0.])] \n","\n","remainlist:  [0, 1, 4]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","cnt  3\n","point:  [array([ 1., -2.,  2.]), array([1., 0., 0.]), array([1., 2., 1.])] \n","\n","wpla:  [array([-1., -2.,  1.]), array([ 1., -2.,  2.])]\n","points:  [[array([1., 1., 1.]), array([1., 0., 3.]), array([1., 3., 0.])], [array([ 1., -2.,  2.]), array([1., 0., 0.]), array([1., 2., 1.])]]\n","h:  [-1. -2.  1.]\n","dout:  [array([ 1., -2.,  2.]), array([1., 0., 0.]), array([1., 2., 1.])]\n","y:  [1.0, 1.0, 1.0]\n","errorsum:  1\n","Eost:  0.3333333333333333\n","ranlist:  [5, 0, 3]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","[ 1. -2.  2.]\n","[ 0. -3.  1.]\n","cnt  3\n","point:  [array([1., 3., 0.]), array([ 1., -2.,  2.]), array([1., 1., 1.])] \n","\n","remainlist:  [1, 2, 4]\n","3\n","[0, 0, 0]\n","[1. 0. 0.]\n","[1. 0. 0.]\n","[ 0. -2. -1.]\n","[ 0. -2. -1.]\n","[ 1. -2. -1.]\n","[ 1. -2. -1.]\n","[ 2. -2.  2.]\n","cnt  3\n","point:  [array([1., 0., 0.]), array([1., 0., 3.]), array([1., 2., 1.])] \n","\n","wpla:  [array([ 0., -3.,  1.]), array([ 2., -2.,  2.])]\n","points:  [[array([1., 3., 0.]), array([ 1., -2.,  2.]), array([1., 1., 1.])], [array([1., 0., 0.]), array([1., 0., 3.]), array([1., 2., 1.])]]\n","h:  [ 0. -3.  1.]\n","dout:  [array([1., 0., 0.]), array([1., 0., 3.]), array([1., 2., 1.])]\n","y:  [0.0, 0.0, 0.0]\n","errorsum:  3\n","Eost:  1.0\n","ranlist:  [1, 4, 0]\n","3\n","[0, 0, 0]\n","[1. 0. 0.]\n","[1. 0. 0.]\n","[ 0. -2. -1.]\n","[ 0. -2. -1.]\n","[ 1. -2. -1.]\n","cnt  3\n","point:  [array([1., 0., 0.]), array([1., 2., 1.]), array([ 1., -2.,  2.])] \n","\n","remainlist:  [2, 3, 5]\n","3\n","[0, 0, 0]\n","[1. 0. 3.]\n","[1. 0. 3.]\n","[ 0. -1.  2.]\n","[ 0. -1.  2.]\n","[-1. -2.  1.]\n","cnt  3\n","point:  [array([1., 0., 3.]), array([1., 1., 1.]), array([1., 3., 0.])] \n","\n","wpla:  [array([ 1., -2., -1.]), array([-1., -2.,  1.])]\n","points:  [[array([1., 0., 0.]), array([1., 2., 1.]), array([ 1., -2.,  2.])], [array([1., 0., 3.]), array([1., 1., 1.]), array([1., 3., 0.])]]\n","h:  [ 1. -2. -1.]\n","dout:  [array([1., 0., 3.]), array([1., 1., 1.]), array([1., 3., 0.])]\n","y:  [-1.0, -1.0, -1.0]\n","errorsum:  1\n","Eost:  0.3333333333333333\n","ranlist:  [0, 2, 3]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","[ 1. -2.  2.]\n","[ 0. -3.  1.]\n","cnt  3\n","point:  [array([ 1., -2.,  2.]), array([1., 0., 3.]), array([1., 1., 1.])] \n","\n","remainlist:  [1, 4, 5]\n","3\n","[0, 0, 0]\n","[1. 0. 0.]\n","[1. 0. 0.]\n","[ 0. -2. -1.]\n","[ 0. -2. -1.]\n","[ 1. -2. -1.]\n","cnt  3\n","point:  [array([1., 0., 0.]), array([1., 2., 1.]), array([1., 3., 0.])] \n","\n","wpla:  [array([ 0., -3.,  1.]), array([ 1., -2., -1.])]\n","points:  [[array([ 1., -2.,  2.]), array([1., 0., 3.]), array([1., 1., 1.])], [array([1., 0., 0.]), array([1., 2., 1.]), array([1., 3., 0.])]]\n","h:  [ 0. -3.  1.]\n","dout:  [array([1., 0., 0.]), array([1., 2., 1.]), array([1., 3., 0.])]\n","y:  [0.0, 0.0, 0.0]\n","errorsum:  3\n","Eost:  1.0\n","ranlist:  [3, 1, 0]\n","3\n","[0, 0, 0]\n","[1. 0. 0.]\n","[1. 0. 0.]\n","[ 0. -1. -1.]\n","[ 0. -1. -1.]\n","[ 1. -1. -1.]\n","cnt  3\n","point:  [array([1., 1., 1.]), array([1., 0., 0.]), array([ 1., -2.,  2.])] \n","\n","remainlist:  [2, 4, 5]\n","3\n","[0, 0, 0]\n","[1. 0. 3.]\n","[1. 0. 3.]\n","[ 0. -2.  2.]\n","cnt  3\n","point:  [array([1., 0., 3.]), array([1., 2., 1.]), array([1., 3., 0.])] \n","\n","wpla:  [array([ 1., -1., -1.]), array([ 0., -2.,  2.])]\n","points:  [[array([1., 1., 1.]), array([1., 0., 0.]), array([ 1., -2.,  2.])], [array([1., 0., 3.]), array([1., 2., 1.]), array([1., 3., 0.])]]\n","h:  [ 1. -1. -1.]\n","dout:  [array([1., 0., 3.]), array([1., 2., 1.]), array([1., 3., 0.])]\n","y:  [-1.0, -1.0, -1.0]\n","errorsum:  1\n","Eost:  0.3333333333333333\n","ranlist:  [1, 0, 5]\n","3\n","[0, 0, 0]\n","[1. 0. 0.]\n","[1. 0. 0.]\n","[ 0. -3.  0.]\n","[ 0. -3.  0.]\n","[ 1. -3.  0.]\n","cnt  3\n","point:  [array([1., 0., 0.]), array([ 1., -2.,  2.]), array([1., 3., 0.])] \n","\n","remainlist:  [2, 3, 4]\n","3\n","[0, 0, 0]\n","[1. 0. 3.]\n","[1. 0. 3.]\n","[ 0. -1.  2.]\n","[ 0. -1.  2.]\n","[-1. -2.  1.]\n","cnt  3\n","point:  [array([1., 0., 3.]), array([1., 1., 1.]), array([1., 2., 1.])] \n","\n","wpla:  [array([ 1., -3.,  0.]), array([-1., -2.,  1.])]\n","points:  [[array([1., 0., 0.]), array([ 1., -2.,  2.]), array([1., 3., 0.])], [array([1., 0., 3.]), array([1., 1., 1.]), array([1., 2., 1.])]]\n","h:  [ 1. -3.  0.]\n","dout:  [array([1., 0., 3.]), array([1., 1., 1.]), array([1., 2., 1.])]\n","y:  [1.0, 1.0, 1.0]\n","errorsum:  2\n","Eost:  0.6666666666666666\n","ranlist:  [4, 1, 2]\n","3\n","[0, 0, 0]\n","[1. 0. 0.]\n","[1. 0. 0.]\n","[ 0. -2. -1.]\n","[ 0. -2. -1.]\n","[ 1. -2. -1.]\n","[ 1. -2. -1.]\n","[ 2. -2.  2.]\n","cnt  3\n","point:  [array([1., 2., 1.]), array([1., 0., 0.]), array([1., 0., 3.])] \n","\n","remainlist:  [0, 3, 5]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","[ 1. -2.  2.]\n","[ 0. -3.  1.]\n","cnt  3\n","point:  [array([ 1., -2.,  2.]), array([1., 1., 1.]), array([1., 3., 0.])] \n","\n","wpla:  [array([ 2., -2.,  2.]), array([ 0., -3.,  1.])]\n","points:  [[array([1., 2., 1.]), array([1., 0., 0.]), array([1., 0., 3.])], [array([ 1., -2.,  2.]), array([1., 1., 1.]), array([1., 3., 0.])]]\n","h:  [ 2. -2.  2.]\n","dout:  [array([ 1., -2.,  2.]), array([1., 1., 1.]), array([1., 3., 0.])]\n","y:  [1.0, 1.0, 1.0]\n","errorsum:  2\n","Eost:  0.6666666666666666\n","ranlist:  [3, 5, 2]\n","3\n","[0, 0, 0]\n","[1. 0. 3.]\n","[1. 0. 3.]\n","[ 0. -1.  2.]\n","[ 0. -1.  2.]\n","[-1. -2.  1.]\n","cnt  3\n","point:  [array([1., 1., 1.]), array([1., 3., 0.]), array([1., 0., 3.])] \n","\n","remainlist:  [0, 1, 4]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","cnt  3\n","point:  [array([ 1., -2.,  2.]), array([1., 0., 0.]), array([1., 2., 1.])] \n","\n","wpla:  [array([-1., -2.,  1.]), array([ 1., -2.,  2.])]\n","points:  [[array([1., 1., 1.]), array([1., 3., 0.]), array([1., 0., 3.])], [array([ 1., -2.,  2.]), array([1., 0., 0.]), array([1., 2., 1.])]]\n","h:  [-1. -2.  1.]\n","dout:  [array([ 1., -2.,  2.]), array([1., 0., 0.]), array([1., 2., 1.])]\n","y:  [1.0, 1.0, 1.0]\n","errorsum:  1\n","Eost:  0.3333333333333333\n","ranlist:  [2, 5, 3]\n","3\n","[0, 0, 0]\n","[1. 0. 3.]\n","[1. 0. 3.]\n","[ 0. -3.  3.]\n","cnt  3\n","point:  [array([1., 0., 3.]), array([1., 3., 0.]), array([1., 1., 1.])] \n","\n","remainlist:  [0, 1, 4]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","cnt  3\n","point:  [array([ 1., -2.,  2.]), array([1., 0., 0.]), array([1., 2., 1.])] \n","\n","wpla:  [array([ 0., -3.,  3.]), array([ 1., -2.,  2.])]\n","points:  [[array([1., 0., 3.]), array([1., 3., 0.]), array([1., 1., 1.])], [array([ 1., -2.,  2.]), array([1., 0., 0.]), array([1., 2., 1.])]]\n","h:  [ 0. -3.  3.]\n","dout:  [array([ 1., -2.,  2.]), array([1., 0., 0.]), array([1., 2., 1.])]\n","y:  [1.0, 1.0, 1.0]\n","errorsum:  1\n","Eost:  0.3333333333333333\n","ranlist:  [0, 5, 2]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","cnt  3\n","point:  [array([ 1., -2.,  2.]), array([1., 3., 0.]), array([1., 0., 3.])] \n","\n","remainlist:  [1, 3, 4]\n","3\n","[0, 0, 0]\n","[1. 0. 0.]\n","[1. 0. 0.]\n","[ 0. -1. -1.]\n","[ 0. -1. -1.]\n","[ 1. -1. -1.]\n","cnt  3\n","point:  [array([1., 0., 0.]), array([1., 1., 1.]), array([1., 2., 1.])] \n","\n","wpla:  [array([ 1., -2.,  2.]), array([ 1., -1., -1.])]\n","points:  [[array([ 1., -2.,  2.]), array([1., 3., 0.]), array([1., 0., 3.])], [array([1., 0., 0.]), array([1., 1., 1.]), array([1., 2., 1.])]]\n","h:  [ 1. -2.  2.]\n","dout:  [array([1., 0., 0.]), array([1., 1., 1.]), array([1., 2., 1.])]\n","y:  [1.0, 1.0, 1.0]\n","errorsum:  2\n","Eost:  0.6666666666666666\n","ranlist:  [5, 4, 2]\n","3\n","[0, 0, 0]\n","[1. 0. 3.]\n","[1. 0. 3.]\n","[ 0. -3.  3.]\n","cnt  3\n","point:  [array([1., 3., 0.]), array([1., 2., 1.]), array([1., 0., 3.])] \n","\n","remainlist:  [0, 1, 3]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","[ 1. -2.  2.]\n","[ 0. -3.  1.]\n","[ 0. -3.  1.]\n","[ 1. -3.  1.]\n","cnt  3\n","point:  [array([ 1., -2.,  2.]), array([1., 0., 0.]), array([1., 1., 1.])] \n","\n","wpla:  [array([ 0., -3.,  3.]), array([ 1., -3.,  1.])]\n","points:  [[array([1., 3., 0.]), array([1., 2., 1.]), array([1., 0., 3.])], [array([ 1., -2.,  2.]), array([1., 0., 0.]), array([1., 1., 1.])]]\n","h:  [ 0. -3.  3.]\n","dout:  [array([ 1., -2.,  2.]), array([1., 0., 0.]), array([1., 1., 1.])]\n","y:  [1.0, 1.0, 1.0]\n","errorsum:  1\n","Eost:  0.3333333333333333\n","ranlist:  [5, 2, 4]\n","3\n","[0, 0, 0]\n","[1. 0. 3.]\n","[1. 0. 3.]\n","[ 0. -3.  3.]\n","cnt  3\n","point:  [array([1., 3., 0.]), array([1., 0., 3.]), array([1., 2., 1.])] \n","\n","remainlist:  [0, 1, 3]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","[ 1. -2.  2.]\n","[ 0. -3.  1.]\n","[ 0. -3.  1.]\n","[ 1. -3.  1.]\n","cnt  3\n","point:  [array([ 1., -2.,  2.]), array([1., 0., 0.]), array([1., 1., 1.])] \n","\n","wpla:  [array([ 0., -3.,  3.]), array([ 1., -3.,  1.])]\n","points:  [[array([1., 3., 0.]), array([1., 0., 3.]), array([1., 2., 1.])], [array([ 1., -2.,  2.]), array([1., 0., 0.]), array([1., 1., 1.])]]\n","h:  [ 0. -3.  3.]\n","dout:  [array([ 1., -2.,  2.]), array([1., 0., 0.]), array([1., 1., 1.])]\n","y:  [1.0, 1.0, 1.0]\n","errorsum:  1\n","Eost:  0.3333333333333333\n","ranlist:  [0, 2, 4]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","cnt  3\n","point:  [array([ 1., -2.,  2.]), array([1., 0., 3.]), array([1., 2., 1.])] \n","\n","remainlist:  [1, 3, 5]\n","3\n","[0, 0, 0]\n","[1. 0. 0.]\n","[1. 0. 0.]\n","[ 0. -1. -1.]\n","[ 0. -1. -1.]\n","[ 1. -1. -1.]\n","cnt  3\n","point:  [array([1., 0., 0.]), array([1., 1., 1.]), array([1., 3., 0.])] \n","\n","wpla:  [array([ 1., -2.,  2.]), array([ 1., -1., -1.])]\n","points:  [[array([ 1., -2.,  2.]), array([1., 0., 3.]), array([1., 2., 1.])], [array([1., 0., 0.]), array([1., 1., 1.]), array([1., 3., 0.])]]\n","h:  [ 1. -2.  2.]\n","dout:  [array([1., 0., 0.]), array([1., 1., 1.]), array([1., 3., 0.])]\n","y:  [1.0, 1.0, 1.0]\n","errorsum:  2\n","Eost:  0.6666666666666666\n","ranlist:  [5, 3, 0]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","[ 1. -2.  2.]\n","[ 0. -3.  1.]\n","cnt  3\n","point:  [array([1., 3., 0.]), array([1., 1., 1.]), array([ 1., -2.,  2.])] \n","\n","remainlist:  [1, 2, 4]\n","3\n","[0, 0, 0]\n","[1. 0. 0.]\n","[1. 0. 0.]\n","[ 0. -2. -1.]\n","[ 0. -2. -1.]\n","[ 1. -2. -1.]\n","[ 1. -2. -1.]\n","[ 2. -2.  2.]\n","cnt  3\n","point:  [array([1., 0., 0.]), array([1., 0., 3.]), array([1., 2., 1.])] \n","\n","wpla:  [array([ 0., -3.,  1.]), array([ 2., -2.,  2.])]\n","points:  [[array([1., 3., 0.]), array([1., 1., 1.]), array([ 1., -2.,  2.])], [array([1., 0., 0.]), array([1., 0., 3.]), array([1., 2., 1.])]]\n","h:  [ 0. -3.  1.]\n","dout:  [array([1., 0., 0.]), array([1., 0., 3.]), array([1., 2., 1.])]\n","y:  [0.0, 0.0, 0.0]\n","errorsum:  3\n","Eost:  1.0\n","ranlist:  [5, 0, 3]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","[ 1. -2.  2.]\n","[ 0. -3.  1.]\n","cnt  3\n","point:  [array([1., 3., 0.]), array([ 1., -2.,  2.]), array([1., 1., 1.])] \n","\n","remainlist:  [1, 2, 4]\n","3\n","[0, 0, 0]\n","[1. 0. 0.]\n","[1. 0. 0.]\n","[ 0. -2. -1.]\n","[ 0. -2. -1.]\n","[ 1. -2. -1.]\n","[ 1. -2. -1.]\n","[ 2. -2.  2.]\n","cnt  3\n","point:  [array([1., 0., 0.]), array([1., 0., 3.]), array([1., 2., 1.])] \n","\n","wpla:  [array([ 0., -3.,  1.]), array([ 2., -2.,  2.])]\n","points:  [[array([1., 3., 0.]), array([ 1., -2.,  2.]), array([1., 1., 1.])], [array([1., 0., 0.]), array([1., 0., 3.]), array([1., 2., 1.])]]\n","h:  [ 0. -3.  1.]\n","dout:  [array([1., 0., 0.]), array([1., 0., 3.]), array([1., 2., 1.])]\n","y:  [0.0, 0.0, 0.0]\n","errorsum:  3\n","Eost:  1.0\n","ranlist:  [1, 5, 3]\n","3\n","[0, 0, 0]\n","[1. 0. 0.]\n","[1. 0. 0.]\n","[ 0. -3.  0.]\n","[ 0. -3.  0.]\n","[ 1. -3.  0.]\n","cnt  3\n","point:  [array([1., 0., 0.]), array([1., 3., 0.]), array([1., 1., 1.])] \n","\n","remainlist:  [0, 2, 4]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","cnt  3\n","point:  [array([ 1., -2.,  2.]), array([1., 0., 3.]), array([1., 2., 1.])] \n","\n","wpla:  [array([ 1., -3.,  0.]), array([ 1., -2.,  2.])]\n","points:  [[array([1., 0., 0.]), array([1., 3., 0.]), array([1., 1., 1.])], [array([ 1., -2.,  2.]), array([1., 0., 3.]), array([1., 2., 1.])]]\n","h:  [ 1. -3.  0.]\n","dout:  [array([ 1., -2.,  2.]), array([1., 0., 3.]), array([1., 2., 1.])]\n","y:  [1.0, 1.0, 1.0]\n","errorsum:  1\n","Eost:  0.3333333333333333\n","ranlist:  [4, 3, 5]\n","3\n","cnt  3\n","point:  [array([1., 2., 1.]), array([1., 1., 1.]), array([1., 3., 0.])] \n","\n","remainlist:  [0, 1, 2]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","cnt  3\n","point:  [array([ 1., -2.,  2.]), array([1., 0., 0.]), array([1., 0., 3.])] \n","\n","wpla:  [[0, 0, 0], array([ 1., -2.,  2.])]\n","points:  [[array([1., 2., 1.]), array([1., 1., 1.]), array([1., 3., 0.])], [array([ 1., -2.,  2.]), array([1., 0., 0.]), array([1., 0., 3.])]]\n","h:  [0, 0, 0]\n","dout:  [array([ 1., -2.,  2.]), array([1., 0., 0.]), array([1., 0., 3.])]\n","y:  [0.0, 0.0, 0.0]\n","errorsum:  3\n","Eost:  1.0\n","ranlist:  [3, 5, 1]\n","3\n","[0, 0, 0]\n","[1. 0. 0.]\n","[1. 0. 0.]\n","[ 0. -1. -1.]\n","[ 0. -1. -1.]\n","[ 1. -1. -1.]\n","cnt  3\n","point:  [array([1., 1., 1.]), array([1., 3., 0.]), array([1., 0., 0.])] \n","\n","remainlist:  [0, 2, 4]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","cnt  3\n","point:  [array([ 1., -2.,  2.]), array([1., 0., 3.]), array([1., 2., 1.])] \n","\n","wpla:  [array([ 1., -1., -1.]), array([ 1., -2.,  2.])]\n","points:  [[array([1., 1., 1.]), array([1., 3., 0.]), array([1., 0., 0.])], [array([ 1., -2.,  2.]), array([1., 0., 3.]), array([1., 2., 1.])]]\n","h:  [ 1. -1. -1.]\n","dout:  [array([ 1., -2.,  2.]), array([1., 0., 3.]), array([1., 2., 1.])]\n","y:  [1.0, 1.0, 1.0]\n","errorsum:  1\n","Eost:  0.3333333333333333\n","ranlist:  [4, 5, 2]\n","3\n","[0, 0, 0]\n","[1. 0. 3.]\n","[1. 0. 3.]\n","[ 0. -2.  2.]\n","cnt  3\n","point:  [array([1., 2., 1.]), array([1., 3., 0.]), array([1., 0., 3.])] \n","\n","remainlist:  [0, 1, 3]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","[ 1. -2.  2.]\n","[ 0. -3.  1.]\n","[ 0. -3.  1.]\n","[ 1. -3.  1.]\n","cnt  3\n","point:  [array([ 1., -2.,  2.]), array([1., 0., 0.]), array([1., 1., 1.])] \n","\n","wpla:  [array([ 0., -2.,  2.]), array([ 1., -3.,  1.])]\n","points:  [[array([1., 2., 1.]), array([1., 3., 0.]), array([1., 0., 3.])], [array([ 1., -2.,  2.]), array([1., 0., 0.]), array([1., 1., 1.])]]\n","h:  [ 0. -2.  2.]\n","dout:  [array([ 1., -2.,  2.]), array([1., 0., 0.]), array([1., 1., 1.])]\n","y:  [1.0, 1.0, 1.0]\n","errorsum:  1\n","Eost:  0.3333333333333333\n","ranlist:  [0, 3, 5]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","[ 1. -2.  2.]\n","[ 0. -3.  1.]\n","cnt  3\n","point:  [array([ 1., -2.,  2.]), array([1., 1., 1.]), array([1., 3., 0.])] \n","\n","remainlist:  [1, 2, 4]\n","3\n","[0, 0, 0]\n","[1. 0. 0.]\n","[1. 0. 0.]\n","[ 0. -2. -1.]\n","[ 0. -2. -1.]\n","[ 1. -2. -1.]\n","[ 1. -2. -1.]\n","[ 2. -2.  2.]\n","cnt  3\n","point:  [array([1., 0., 0.]), array([1., 0., 3.]), array([1., 2., 1.])] \n","\n","wpla:  [array([ 0., -3.,  1.]), array([ 2., -2.,  2.])]\n","points:  [[array([ 1., -2.,  2.]), array([1., 1., 1.]), array([1., 3., 0.])], [array([1., 0., 0.]), array([1., 0., 3.]), array([1., 2., 1.])]]\n","h:  [ 0. -3.  1.]\n","dout:  [array([1., 0., 0.]), array([1., 0., 3.]), array([1., 2., 1.])]\n","y:  [0.0, 0.0, 0.0]\n","errorsum:  3\n","Eost:  1.0\n","ranlist:  [0, 2, 5]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","cnt  3\n","point:  [array([ 1., -2.,  2.]), array([1., 0., 3.]), array([1., 3., 0.])] \n","\n","remainlist:  [1, 3, 4]\n","3\n","[0, 0, 0]\n","[1. 0. 0.]\n","[1. 0. 0.]\n","[ 0. -1. -1.]\n","[ 0. -1. -1.]\n","[ 1. -1. -1.]\n","cnt  3\n","point:  [array([1., 0., 0.]), array([1., 1., 1.]), array([1., 2., 1.])] \n","\n","wpla:  [array([ 1., -2.,  2.]), array([ 1., -1., -1.])]\n","points:  [[array([ 1., -2.,  2.]), array([1., 0., 3.]), array([1., 3., 0.])], [array([1., 0., 0.]), array([1., 1., 1.]), array([1., 2., 1.])]]\n","h:  [ 1. -2.  2.]\n","dout:  [array([1., 0., 0.]), array([1., 1., 1.]), array([1., 2., 1.])]\n","y:  [1.0, 1.0, 1.0]\n","errorsum:  2\n","Eost:  0.6666666666666666\n","ranlist:  [1, 2, 3]\n","3\n","[0, 0, 0]\n","[1. 0. 0.]\n","[1. 0. 0.]\n","[ 0. -1. -1.]\n","[ 0. -1. -1.]\n","[ 1. -1. -1.]\n","[ 1. -1. -1.]\n","[ 2. -1.  2.]\n","[ 2. -1.  2.]\n","[ 1. -2.  1.]\n","cnt  3\n","point:  [array([1., 0., 0.]), array([1., 0., 3.]), array([1., 1., 1.])] \n","\n","remainlist:  [0, 4, 5]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","cnt  3\n","point:  [array([ 1., -2.,  2.]), array([1., 2., 1.]), array([1., 3., 0.])] \n","\n","wpla:  [array([ 1., -2.,  1.]), array([ 1., -2.,  2.])]\n","points:  [[array([1., 0., 0.]), array([1., 0., 3.]), array([1., 1., 1.])], [array([ 1., -2.,  2.]), array([1., 2., 1.]), array([1., 3., 0.])]]\n","h:  [ 1. -2.  1.]\n","dout:  [array([ 1., -2.,  2.]), array([1., 2., 1.]), array([1., 3., 0.])]\n","y:  [1.0, 1.0, 1.0]\n","errorsum:  2\n","Eost:  0.6666666666666666\n","ranlist:  [5, 4, 1]\n","3\n","[0, 0, 0]\n","[1. 0. 0.]\n","[1. 0. 0.]\n","[ 0. -3.  0.]\n","[ 0. -3.  0.]\n","[ 1. -3.  0.]\n","cnt  3\n","point:  [array([1., 3., 0.]), array([1., 2., 1.]), array([1., 0., 0.])] \n","\n","remainlist:  [0, 2, 3]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","[ 1. -2.  2.]\n","[ 0. -3.  1.]\n","cnt  3\n","point:  [array([ 1., -2.,  2.]), array([1., 0., 3.]), array([1., 1., 1.])] \n","\n","wpla:  [array([ 1., -3.,  0.]), array([ 0., -3.,  1.])]\n","points:  [[array([1., 3., 0.]), array([1., 2., 1.]), array([1., 0., 0.])], [array([ 1., -2.,  2.]), array([1., 0., 3.]), array([1., 1., 1.])]]\n","h:  [ 1. -3.  0.]\n","dout:  [array([ 1., -2.,  2.]), array([1., 0., 3.]), array([1., 1., 1.])]\n","y:  [1.0, 1.0, 1.0]\n","errorsum:  1\n","Eost:  0.3333333333333333\n","ranlist:  [4, 0, 5]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","cnt  3\n","point:  [array([1., 2., 1.]), array([ 1., -2.,  2.]), array([1., 3., 0.])] \n","\n","remainlist:  [1, 2, 3]\n","3\n","[0, 0, 0]\n","[1. 0. 0.]\n","[1. 0. 0.]\n","[ 0. -1. -1.]\n","[ 0. -1. -1.]\n","[ 1. -1. -1.]\n","[ 1. -1. -1.]\n","[ 2. -1.  2.]\n","[ 2. -1.  2.]\n","[ 1. -2.  1.]\n","cnt  3\n","point:  [array([1., 0., 0.]), array([1., 0., 3.]), array([1., 1., 1.])] \n","\n","wpla:  [array([ 1., -2.,  2.]), array([ 1., -2.,  1.])]\n","points:  [[array([1., 2., 1.]), array([ 1., -2.,  2.]), array([1., 3., 0.])], [array([1., 0., 0.]), array([1., 0., 3.]), array([1., 1., 1.])]]\n","h:  [ 1. -2.  2.]\n","dout:  [array([1., 0., 0.]), array([1., 0., 3.]), array([1., 1., 1.])]\n","y:  [1.0, 1.0, 1.0]\n","errorsum:  1\n","Eost:  0.3333333333333333\n","ranlist:  [5, 3, 0]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","[ 1. -2.  2.]\n","[ 0. -3.  1.]\n","cnt  3\n","point:  [array([1., 3., 0.]), array([1., 1., 1.]), array([ 1., -2.,  2.])] \n","\n","remainlist:  [1, 2, 4]\n","3\n","[0, 0, 0]\n","[1. 0. 0.]\n","[1. 0. 0.]\n","[ 0. -2. -1.]\n","[ 0. -2. -1.]\n","[ 1. -2. -1.]\n","[ 1. -2. -1.]\n","[ 2. -2.  2.]\n","cnt  3\n","point:  [array([1., 0., 0.]), array([1., 0., 3.]), array([1., 2., 1.])] \n","\n","wpla:  [array([ 0., -3.,  1.]), array([ 2., -2.,  2.])]\n","points:  [[array([1., 3., 0.]), array([1., 1., 1.]), array([ 1., -2.,  2.])], [array([1., 0., 0.]), array([1., 0., 3.]), array([1., 2., 1.])]]\n","h:  [ 0. -3.  1.]\n","dout:  [array([1., 0., 0.]), array([1., 0., 3.]), array([1., 2., 1.])]\n","y:  [0.0, 0.0, 0.0]\n","errorsum:  3\n","Eost:  1.0\n","ranlist:  [5, 4, 2]\n","3\n","[0, 0, 0]\n","[1. 0. 3.]\n","[1. 0. 3.]\n","[ 0. -3.  3.]\n","cnt  3\n","point:  [array([1., 3., 0.]), array([1., 2., 1.]), array([1., 0., 3.])] \n","\n","remainlist:  [0, 1, 3]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","[ 1. -2.  2.]\n","[ 0. -3.  1.]\n","[ 0. -3.  1.]\n","[ 1. -3.  1.]\n","cnt  3\n","point:  [array([ 1., -2.,  2.]), array([1., 0., 0.]), array([1., 1., 1.])] \n","\n","wpla:  [array([ 0., -3.,  3.]), array([ 1., -3.,  1.])]\n","points:  [[array([1., 3., 0.]), array([1., 2., 1.]), array([1., 0., 3.])], [array([ 1., -2.,  2.]), array([1., 0., 0.]), array([1., 1., 1.])]]\n","h:  [ 0. -3.  3.]\n","dout:  [array([ 1., -2.,  2.]), array([1., 0., 0.]), array([1., 1., 1.])]\n","y:  [1.0, 1.0, 1.0]\n","errorsum:  1\n","Eost:  0.3333333333333333\n","ranlist:  [4, 2, 3]\n","3\n","[0, 0, 0]\n","[1. 0. 3.]\n","[1. 0. 3.]\n","[ 0. -2.  2.]\n","cnt  3\n","point:  [array([1., 2., 1.]), array([1., 0., 3.]), array([1., 1., 1.])] \n","\n","remainlist:  [0, 1, 5]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","cnt  3\n","point:  [array([ 1., -2.,  2.]), array([1., 0., 0.]), array([1., 3., 0.])] \n","\n","wpla:  [array([ 0., -2.,  2.]), array([ 1., -2.,  2.])]\n","points:  [[array([1., 2., 1.]), array([1., 0., 3.]), array([1., 1., 1.])], [array([ 1., -2.,  2.]), array([1., 0., 0.]), array([1., 3., 0.])]]\n","h:  [ 0. -2.  2.]\n","dout:  [array([ 1., -2.,  2.]), array([1., 0., 0.]), array([1., 3., 0.])]\n","y:  [1.0, 1.0, 1.0]\n","errorsum:  1\n","Eost:  0.3333333333333333\n","ranlist:  [2, 3, 0]\n","3\n","[0, 0, 0]\n","[1. 0. 3.]\n","[1. 0. 3.]\n","[ 0. -1.  2.]\n","[ 0. -1.  2.]\n","[-1. -2.  1.]\n","cnt  3\n","point:  [array([1., 0., 3.]), array([1., 1., 1.]), array([ 1., -2.,  2.])] \n","\n","remainlist:  [1, 4, 5]\n","3\n","[0, 0, 0]\n","[1. 0. 0.]\n","[1. 0. 0.]\n","[ 0. -2. -1.]\n","[ 0. -2. -1.]\n","[ 1. -2. -1.]\n","cnt  3\n","point:  [array([1., 0., 0.]), array([1., 2., 1.]), array([1., 3., 0.])] \n","\n","wpla:  [array([-1., -2.,  1.]), array([ 1., -2., -1.])]\n","points:  [[array([1., 0., 3.]), array([1., 1., 1.]), array([ 1., -2.,  2.])], [array([1., 0., 0.]), array([1., 2., 1.]), array([1., 3., 0.])]]\n","h:  [-1. -2.  1.]\n","dout:  [array([1., 0., 0.]), array([1., 2., 1.]), array([1., 3., 0.])]\n","y:  [-1.0, -1.0, -1.0]\n","errorsum:  1\n","Eost:  0.3333333333333333\n","ranlist:  [0, 4, 3]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","[ 1. -2.  2.]\n","[ 0. -3.  1.]\n","cnt  3\n","point:  [array([ 1., -2.,  2.]), array([1., 2., 1.]), array([1., 1., 1.])] \n","\n","remainlist:  [1, 2, 5]\n","3\n","[0, 0, 0]\n","[1. 0. 0.]\n","[1. 0. 0.]\n","[ 0. -3.  0.]\n","[ 0. -3.  0.]\n","[ 1. -3.  0.]\n","cnt  3\n","point:  [array([1., 0., 0.]), array([1., 0., 3.]), array([1., 3., 0.])] \n","\n","wpla:  [array([ 0., -3.,  1.]), array([ 1., -3.,  0.])]\n","points:  [[array([ 1., -2.,  2.]), array([1., 2., 1.]), array([1., 1., 1.])], [array([1., 0., 0.]), array([1., 0., 3.]), array([1., 3., 0.])]]\n","h:  [ 0. -3.  1.]\n","dout:  [array([1., 0., 0.]), array([1., 0., 3.]), array([1., 3., 0.])]\n","y:  [0.0, 0.0, 0.0]\n","errorsum:  3\n","Eost:  1.0\n","ranlist:  [3, 1, 4]\n","3\n","[0, 0, 0]\n","[1. 0. 0.]\n","[1. 0. 0.]\n","[ 0. -1. -1.]\n","[ 0. -1. -1.]\n","[ 1. -1. -1.]\n","cnt  3\n","point:  [array([1., 1., 1.]), array([1., 0., 0.]), array([1., 2., 1.])] \n","\n","remainlist:  [0, 2, 5]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","cnt  3\n","point:  [array([ 1., -2.,  2.]), array([1., 0., 3.]), array([1., 3., 0.])] \n","\n","wpla:  [array([ 1., -1., -1.]), array([ 1., -2.,  2.])]\n","points:  [[array([1., 1., 1.]), array([1., 0., 0.]), array([1., 2., 1.])], [array([ 1., -2.,  2.]), array([1., 0., 3.]), array([1., 3., 0.])]]\n","h:  [ 1. -1. -1.]\n","dout:  [array([ 1., -2.,  2.]), array([1., 0., 3.]), array([1., 3., 0.])]\n","y:  [1.0, 1.0, 1.0]\n","errorsum:  1\n","Eost:  0.3333333333333333\n","ranlist:  [4, 2, 3]\n","3\n","[0, 0, 0]\n","[1. 0. 3.]\n","[1. 0. 3.]\n","[ 0. -2.  2.]\n","cnt  3\n","point:  [array([1., 2., 1.]), array([1., 0., 3.]), array([1., 1., 1.])] \n","\n","remainlist:  [0, 1, 5]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","cnt  3\n","point:  [array([ 1., -2.,  2.]), array([1., 0., 0.]), array([1., 3., 0.])] \n","\n","wpla:  [array([ 0., -2.,  2.]), array([ 1., -2.,  2.])]\n","points:  [[array([1., 2., 1.]), array([1., 0., 3.]), array([1., 1., 1.])], [array([ 1., -2.,  2.]), array([1., 0., 0.]), array([1., 3., 0.])]]\n","h:  [ 0. -2.  2.]\n","dout:  [array([ 1., -2.,  2.]), array([1., 0., 0.]), array([1., 3., 0.])]\n","y:  [1.0, 1.0, 1.0]\n","errorsum:  1\n","Eost:  0.3333333333333333\n","ranlist:  [0, 5, 2]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","cnt  3\n","point:  [array([ 1., -2.,  2.]), array([1., 3., 0.]), array([1., 0., 3.])] \n","\n","remainlist:  [1, 3, 4]\n","3\n","[0, 0, 0]\n","[1. 0. 0.]\n","[1. 0. 0.]\n","[ 0. -1. -1.]\n","[ 0. -1. -1.]\n","[ 1. -1. -1.]\n","cnt  3\n","point:  [array([1., 0., 0.]), array([1., 1., 1.]), array([1., 2., 1.])] \n","\n","wpla:  [array([ 1., -2.,  2.]), array([ 1., -1., -1.])]\n","points:  [[array([ 1., -2.,  2.]), array([1., 3., 0.]), array([1., 0., 3.])], [array([1., 0., 0.]), array([1., 1., 1.]), array([1., 2., 1.])]]\n","h:  [ 1. -2.  2.]\n","dout:  [array([1., 0., 0.]), array([1., 1., 1.]), array([1., 2., 1.])]\n","y:  [1.0, 1.0, 1.0]\n","errorsum:  2\n","Eost:  0.6666666666666666\n","ranlist:  [5, 3, 1]\n","3\n","[0, 0, 0]\n","[1. 0. 0.]\n","[1. 0. 0.]\n","[ 0. -3.  0.]\n","[ 0. -3.  0.]\n","[ 1. -3.  0.]\n","cnt  3\n","point:  [array([1., 3., 0.]), array([1., 1., 1.]), array([1., 0., 0.])] \n","\n","remainlist:  [0, 2, 4]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","cnt  3\n","point:  [array([ 1., -2.,  2.]), array([1., 0., 3.]), array([1., 2., 1.])] \n","\n","wpla:  [array([ 1., -3.,  0.]), array([ 1., -2.,  2.])]\n","points:  [[array([1., 3., 0.]), array([1., 1., 1.]), array([1., 0., 0.])], [array([ 1., -2.,  2.]), array([1., 0., 3.]), array([1., 2., 1.])]]\n","h:  [ 1. -3.  0.]\n","dout:  [array([ 1., -2.,  2.]), array([1., 0., 3.]), array([1., 2., 1.])]\n","y:  [1.0, 1.0, 1.0]\n","errorsum:  1\n","Eost:  0.3333333333333333\n","ranlist:  [5, 1, 0]\n","3\n","[0, 0, 0]\n","[1. 0. 0.]\n","[1. 0. 0.]\n","[ 0. -3.  0.]\n","[ 0. -3.  0.]\n","[ 1. -3.  0.]\n","cnt  3\n","point:  [array([1., 3., 0.]), array([1., 0., 0.]), array([ 1., -2.,  2.])] \n","\n","remainlist:  [2, 3, 4]\n","3\n","[0, 0, 0]\n","[1. 0. 3.]\n","[1. 0. 3.]\n","[ 0. -1.  2.]\n","[ 0. -1.  2.]\n","[-1. -2.  1.]\n","cnt  3\n","point:  [array([1., 0., 3.]), array([1., 1., 1.]), array([1., 2., 1.])] \n","\n","wpla:  [array([ 1., -3.,  0.]), array([-1., -2.,  1.])]\n","points:  [[array([1., 3., 0.]), array([1., 0., 0.]), array([ 1., -2.,  2.])], [array([1., 0., 3.]), array([1., 1., 1.]), array([1., 2., 1.])]]\n","h:  [ 1. -3.  0.]\n","dout:  [array([1., 0., 3.]), array([1., 1., 1.]), array([1., 2., 1.])]\n","y:  [1.0, 1.0, 1.0]\n","errorsum:  2\n","Eost:  0.6666666666666666\n","ranlist:  [2, 3, 4]\n","3\n","[0, 0, 0]\n","[1. 0. 3.]\n","[1. 0. 3.]\n","[ 0. -1.  2.]\n","[ 0. -1.  2.]\n","[-1. -2.  1.]\n","cnt  3\n","point:  [array([1., 0., 3.]), array([1., 1., 1.]), array([1., 2., 1.])] \n","\n","remainlist:  [0, 1, 5]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","cnt  3\n","point:  [array([ 1., -2.,  2.]), array([1., 0., 0.]), array([1., 3., 0.])] \n","\n","wpla:  [array([-1., -2.,  1.]), array([ 1., -2.,  2.])]\n","points:  [[array([1., 0., 3.]), array([1., 1., 1.]), array([1., 2., 1.])], [array([ 1., -2.,  2.]), array([1., 0., 0.]), array([1., 3., 0.])]]\n","h:  [-1. -2.  1.]\n","dout:  [array([ 1., -2.,  2.]), array([1., 0., 0.]), array([1., 3., 0.])]\n","y:  [1.0, 1.0, 1.0]\n","errorsum:  1\n","Eost:  0.3333333333333333\n","ranlist:  [1, 4, 0]\n","3\n","[0, 0, 0]\n","[1. 0. 0.]\n","[1. 0. 0.]\n","[ 0. -2. -1.]\n","[ 0. -2. -1.]\n","[ 1. -2. -1.]\n","cnt  3\n","point:  [array([1., 0., 0.]), array([1., 2., 1.]), array([ 1., -2.,  2.])] \n","\n","remainlist:  [2, 3, 5]\n","3\n","[0, 0, 0]\n","[1. 0. 3.]\n","[1. 0. 3.]\n","[ 0. -1.  2.]\n","[ 0. -1.  2.]\n","[-1. -2.  1.]\n","cnt  3\n","point:  [array([1., 0., 3.]), array([1., 1., 1.]), array([1., 3., 0.])] \n","\n","wpla:  [array([ 1., -2., -1.]), array([-1., -2.,  1.])]\n","points:  [[array([1., 0., 0.]), array([1., 2., 1.]), array([ 1., -2.,  2.])], [array([1., 0., 3.]), array([1., 1., 1.]), array([1., 3., 0.])]]\n","h:  [ 1. -2. -1.]\n","dout:  [array([1., 0., 3.]), array([1., 1., 1.]), array([1., 3., 0.])]\n","y:  [-1.0, -1.0, -1.0]\n","errorsum:  1\n","Eost:  0.3333333333333333\n","ranlist:  [4, 0, 3]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","[ 1. -2.  2.]\n","[ 0. -3.  1.]\n","cnt  3\n","point:  [array([1., 2., 1.]), array([ 1., -2.,  2.]), array([1., 1., 1.])] \n","\n","remainlist:  [1, 2, 5]\n","3\n","[0, 0, 0]\n","[1. 0. 0.]\n","[1. 0. 0.]\n","[ 0. -3.  0.]\n","[ 0. -3.  0.]\n","[ 1. -3.  0.]\n","cnt  3\n","point:  [array([1., 0., 0.]), array([1., 0., 3.]), array([1., 3., 0.])] \n","\n","wpla:  [array([ 0., -3.,  1.]), array([ 1., -3.,  0.])]\n","points:  [[array([1., 2., 1.]), array([ 1., -2.,  2.]), array([1., 1., 1.])], [array([1., 0., 0.]), array([1., 0., 3.]), array([1., 3., 0.])]]\n","h:  [ 0. -3.  1.]\n","dout:  [array([1., 0., 0.]), array([1., 0., 3.]), array([1., 3., 0.])]\n","y:  [0.0, 0.0, 0.0]\n","errorsum:  3\n","Eost:  1.0\n","ranlist:  [3, 5, 4]\n","3\n","cnt  3\n","point:  [array([1., 1., 1.]), array([1., 3., 0.]), array([1., 2., 1.])] \n","\n","remainlist:  [0, 1, 2]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","cnt  3\n","point:  [array([ 1., -2.,  2.]), array([1., 0., 0.]), array([1., 0., 3.])] \n","\n","wpla:  [[0, 0, 0], array([ 1., -2.,  2.])]\n","points:  [[array([1., 1., 1.]), array([1., 3., 0.]), array([1., 2., 1.])], [array([ 1., -2.,  2.]), array([1., 0., 0.]), array([1., 0., 3.])]]\n","h:  [0, 0, 0]\n","dout:  [array([ 1., -2.,  2.]), array([1., 0., 0.]), array([1., 0., 3.])]\n","y:  [0.0, 0.0, 0.0]\n","errorsum:  3\n","Eost:  1.0\n","ranlist:  [4, 0, 5]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","cnt  3\n","point:  [array([1., 2., 1.]), array([ 1., -2.,  2.]), array([1., 3., 0.])] \n","\n","remainlist:  [1, 2, 3]\n","3\n","[0, 0, 0]\n","[1. 0. 0.]\n","[1. 0. 0.]\n","[ 0. -1. -1.]\n","[ 0. -1. -1.]\n","[ 1. -1. -1.]\n","[ 1. -1. -1.]\n","[ 2. -1.  2.]\n","[ 2. -1.  2.]\n","[ 1. -2.  1.]\n","cnt  3\n","point:  [array([1., 0., 0.]), array([1., 0., 3.]), array([1., 1., 1.])] \n","\n","wpla:  [array([ 1., -2.,  2.]), array([ 1., -2.,  1.])]\n","points:  [[array([1., 2., 1.]), array([ 1., -2.,  2.]), array([1., 3., 0.])], [array([1., 0., 0.]), array([1., 0., 3.]), array([1., 1., 1.])]]\n","h:  [ 1. -2.  2.]\n","dout:  [array([1., 0., 0.]), array([1., 0., 3.]), array([1., 1., 1.])]\n","y:  [1.0, 1.0, 1.0]\n","errorsum:  1\n","Eost:  0.3333333333333333\n","ranlist:  [4, 1, 0]\n","3\n","[0, 0, 0]\n","[1. 0. 0.]\n","[1. 0. 0.]\n","[ 0. -2. -1.]\n","[ 0. -2. -1.]\n","[ 1. -2. -1.]\n","cnt  3\n","point:  [array([1., 2., 1.]), array([1., 0., 0.]), array([ 1., -2.,  2.])] \n","\n","remainlist:  [2, 3, 5]\n","3\n","[0, 0, 0]\n","[1. 0. 3.]\n","[1. 0. 3.]\n","[ 0. -1.  2.]\n","[ 0. -1.  2.]\n","[-1. -2.  1.]\n","cnt  3\n","point:  [array([1., 0., 3.]), array([1., 1., 1.]), array([1., 3., 0.])] \n","\n","wpla:  [array([ 1., -2., -1.]), array([-1., -2.,  1.])]\n","points:  [[array([1., 2., 1.]), array([1., 0., 0.]), array([ 1., -2.,  2.])], [array([1., 0., 3.]), array([1., 1., 1.]), array([1., 3., 0.])]]\n","h:  [ 1. -2. -1.]\n","dout:  [array([1., 0., 3.]), array([1., 1., 1.]), array([1., 3., 0.])]\n","y:  [-1.0, -1.0, -1.0]\n","errorsum:  1\n","Eost:  0.3333333333333333\n","ranlist:  [3, 1, 0]\n","3\n","[0, 0, 0]\n","[1. 0. 0.]\n","[1. 0. 0.]\n","[ 0. -1. -1.]\n","[ 0. -1. -1.]\n","[ 1. -1. -1.]\n","cnt  3\n","point:  [array([1., 1., 1.]), array([1., 0., 0.]), array([ 1., -2.,  2.])] \n","\n","remainlist:  [2, 4, 5]\n","3\n","[0, 0, 0]\n","[1. 0. 3.]\n","[1. 0. 3.]\n","[ 0. -2.  2.]\n","cnt  3\n","point:  [array([1., 0., 3.]), array([1., 2., 1.]), array([1., 3., 0.])] \n","\n","wpla:  [array([ 1., -1., -1.]), array([ 0., -2.,  2.])]\n","points:  [[array([1., 1., 1.]), array([1., 0., 0.]), array([ 1., -2.,  2.])], [array([1., 0., 3.]), array([1., 2., 1.]), array([1., 3., 0.])]]\n","h:  [ 1. -1. -1.]\n","dout:  [array([1., 0., 3.]), array([1., 2., 1.]), array([1., 3., 0.])]\n","y:  [-1.0, -1.0, -1.0]\n","errorsum:  1\n","Eost:  0.3333333333333333\n","ranlist:  [5, 3, 0]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","[ 1. -2.  2.]\n","[ 0. -3.  1.]\n","cnt  3\n","point:  [array([1., 3., 0.]), array([1., 1., 1.]), array([ 1., -2.,  2.])] \n","\n","remainlist:  [1, 2, 4]\n","3\n","[0, 0, 0]\n","[1. 0. 0.]\n","[1. 0. 0.]\n","[ 0. -2. -1.]\n","[ 0. -2. -1.]\n","[ 1. -2. -1.]\n","[ 1. -2. -1.]\n","[ 2. -2.  2.]\n","cnt  3\n","point:  [array([1., 0., 0.]), array([1., 0., 3.]), array([1., 2., 1.])] \n","\n","wpla:  [array([ 0., -3.,  1.]), array([ 2., -2.,  2.])]\n","points:  [[array([1., 3., 0.]), array([1., 1., 1.]), array([ 1., -2.,  2.])], [array([1., 0., 0.]), array([1., 0., 3.]), array([1., 2., 1.])]]\n","h:  [ 0. -3.  1.]\n","dout:  [array([1., 0., 0.]), array([1., 0., 3.]), array([1., 2., 1.])]\n","y:  [0.0, 0.0, 0.0]\n","errorsum:  3\n","Eost:  1.0\n","ranlist:  [1, 3, 0]\n","3\n","[0, 0, 0]\n","[1. 0. 0.]\n","[1. 0. 0.]\n","[ 0. -1. -1.]\n","[ 0. -1. -1.]\n","[ 1. -1. -1.]\n","cnt  3\n","point:  [array([1., 0., 0.]), array([1., 1., 1.]), array([ 1., -2.,  2.])] \n","\n","remainlist:  [2, 4, 5]\n","3\n","[0, 0, 0]\n","[1. 0. 3.]\n","[1. 0. 3.]\n","[ 0. -2.  2.]\n","cnt  3\n","point:  [array([1., 0., 3.]), array([1., 2., 1.]), array([1., 3., 0.])] \n","\n","wpla:  [array([ 1., -1., -1.]), array([ 0., -2.,  2.])]\n","points:  [[array([1., 0., 0.]), array([1., 1., 1.]), array([ 1., -2.,  2.])], [array([1., 0., 3.]), array([1., 2., 1.]), array([1., 3., 0.])]]\n","h:  [ 1. -1. -1.]\n","dout:  [array([1., 0., 3.]), array([1., 2., 1.]), array([1., 3., 0.])]\n","y:  [-1.0, -1.0, -1.0]\n","errorsum:  1\n","Eost:  0.3333333333333333\n","ranlist:  [4, 1, 5]\n","3\n","[0, 0, 0]\n","[1. 0. 0.]\n","[1. 0. 0.]\n","[ 0. -2. -1.]\n","[ 0. -2. -1.]\n","[ 1. -2. -1.]\n","cnt  3\n","point:  [array([1., 2., 1.]), array([1., 0., 0.]), array([1., 3., 0.])] \n","\n","remainlist:  [0, 2, 3]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","[ 1. -2.  2.]\n","[ 0. -3.  1.]\n","cnt  3\n","point:  [array([ 1., -2.,  2.]), array([1., 0., 3.]), array([1., 1., 1.])] \n","\n","wpla:  [array([ 1., -2., -1.]), array([ 0., -3.,  1.])]\n","points:  [[array([1., 2., 1.]), array([1., 0., 0.]), array([1., 3., 0.])], [array([ 1., -2.,  2.]), array([1., 0., 3.]), array([1., 1., 1.])]]\n","h:  [ 1. -2. -1.]\n","dout:  [array([ 1., -2.,  2.]), array([1., 0., 3.]), array([1., 1., 1.])]\n","y:  [1.0, 1.0, 1.0]\n","errorsum:  1\n","Eost:  0.3333333333333333\n","ranlist:  [3, 2, 5]\n","3\n","[0, 0, 0]\n","[1. 0. 3.]\n","[1. 0. 3.]\n","[ 0. -1.  2.]\n","[ 0. -1.  2.]\n","[-1. -2.  1.]\n","cnt  3\n","point:  [array([1., 1., 1.]), array([1., 0., 3.]), array([1., 3., 0.])] \n","\n","remainlist:  [0, 1, 4]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","cnt  3\n","point:  [array([ 1., -2.,  2.]), array([1., 0., 0.]), array([1., 2., 1.])] \n","\n","wpla:  [array([-1., -2.,  1.]), array([ 1., -2.,  2.])]\n","points:  [[array([1., 1., 1.]), array([1., 0., 3.]), array([1., 3., 0.])], [array([ 1., -2.,  2.]), array([1., 0., 0.]), array([1., 2., 1.])]]\n","h:  [-1. -2.  1.]\n","dout:  [array([ 1., -2.,  2.]), array([1., 0., 0.]), array([1., 2., 1.])]\n","y:  [1.0, 1.0, 1.0]\n","errorsum:  1\n","Eost:  0.3333333333333333\n","ranlist:  [0, 1, 2]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","cnt  3\n","point:  [array([ 1., -2.,  2.]), array([1., 0., 0.]), array([1., 0., 3.])] \n","\n","remainlist:  [3, 4, 5]\n","3\n","cnt  3\n","point:  [array([1., 1., 1.]), array([1., 2., 1.]), array([1., 3., 0.])] \n","\n","wpla:  [array([ 1., -2.,  2.]), [0, 0, 0]]\n","points:  [[array([ 1., -2.,  2.]), array([1., 0., 0.]), array([1., 0., 3.])], [array([1., 1., 1.]), array([1., 2., 1.]), array([1., 3., 0.])]]\n","h:  [ 1. -2.  2.]\n","dout:  [array([1., 1., 1.]), array([1., 2., 1.]), array([1., 3., 0.])]\n","y:  [1.0, 1.0, 1.0]\n","errorsum:  3\n","Eost:  1.0\n","ranlist:  [2, 0, 5]\n","3\n","[0, 0, 0]\n","[1. 0. 3.]\n","[1. 0. 3.]\n","[ 0. -3.  3.]\n","cnt  3\n","point:  [array([1., 0., 3.]), array([ 1., -2.,  2.]), array([1., 3., 0.])] \n","\n","remainlist:  [1, 3, 4]\n","3\n","[0, 0, 0]\n","[1. 0. 0.]\n","[1. 0. 0.]\n","[ 0. -1. -1.]\n","[ 0. -1. -1.]\n","[ 1. -1. -1.]\n","cnt  3\n","point:  [array([1., 0., 0.]), array([1., 1., 1.]), array([1., 2., 1.])] \n","\n","wpla:  [array([ 0., -3.,  3.]), array([ 1., -1., -1.])]\n","points:  [[array([1., 0., 3.]), array([ 1., -2.,  2.]), array([1., 3., 0.])], [array([1., 0., 0.]), array([1., 1., 1.]), array([1., 2., 1.])]]\n","h:  [ 0. -3.  3.]\n","dout:  [array([1., 0., 0.]), array([1., 1., 1.]), array([1., 2., 1.])]\n","y:  [0.0, 0.0, 0.0]\n","errorsum:  3\n","Eost:  1.0\n","ranlist:  [2, 4, 3]\n","3\n","[0, 0, 0]\n","[1. 0. 3.]\n","[1. 0. 3.]\n","[ 0. -2.  2.]\n","cnt  3\n","point:  [array([1., 0., 3.]), array([1., 2., 1.]), array([1., 1., 1.])] \n","\n","remainlist:  [0, 1, 5]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","cnt  3\n","point:  [array([ 1., -2.,  2.]), array([1., 0., 0.]), array([1., 3., 0.])] \n","\n","wpla:  [array([ 0., -2.,  2.]), array([ 1., -2.,  2.])]\n","points:  [[array([1., 0., 3.]), array([1., 2., 1.]), array([1., 1., 1.])], [array([ 1., -2.,  2.]), array([1., 0., 0.]), array([1., 3., 0.])]]\n","h:  [ 0. -2.  2.]\n","dout:  [array([ 1., -2.,  2.]), array([1., 0., 0.]), array([1., 3., 0.])]\n","y:  [1.0, 1.0, 1.0]\n","errorsum:  1\n","Eost:  0.3333333333333333\n","ranlist:  [3, 1, 5]\n","3\n","[0, 0, 0]\n","[1. 0. 0.]\n","[1. 0. 0.]\n","[ 0. -1. -1.]\n","[ 0. -1. -1.]\n","[ 1. -1. -1.]\n","cnt  3\n","point:  [array([1., 1., 1.]), array([1., 0., 0.]), array([1., 3., 0.])] \n","\n","remainlist:  [0, 2, 4]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","cnt  3\n","point:  [array([ 1., -2.,  2.]), array([1., 0., 3.]), array([1., 2., 1.])] \n","\n","wpla:  [array([ 1., -1., -1.]), array([ 1., -2.,  2.])]\n","points:  [[array([1., 1., 1.]), array([1., 0., 0.]), array([1., 3., 0.])], [array([ 1., -2.,  2.]), array([1., 0., 3.]), array([1., 2., 1.])]]\n","h:  [ 1. -1. -1.]\n","dout:  [array([ 1., -2.,  2.]), array([1., 0., 3.]), array([1., 2., 1.])]\n","y:  [1.0, 1.0, 1.0]\n","errorsum:  1\n","Eost:  0.3333333333333333\n","ranlist:  [4, 1, 5]\n","3\n","[0, 0, 0]\n","[1. 0. 0.]\n","[1. 0. 0.]\n","[ 0. -2. -1.]\n","[ 0. -2. -1.]\n","[ 1. -2. -1.]\n","cnt  3\n","point:  [array([1., 2., 1.]), array([1., 0., 0.]), array([1., 3., 0.])] \n","\n","remainlist:  [0, 2, 3]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","[ 1. -2.  2.]\n","[ 0. -3.  1.]\n","cnt  3\n","point:  [array([ 1., -2.,  2.]), array([1., 0., 3.]), array([1., 1., 1.])] \n","\n","wpla:  [array([ 1., -2., -1.]), array([ 0., -3.,  1.])]\n","points:  [[array([1., 2., 1.]), array([1., 0., 0.]), array([1., 3., 0.])], [array([ 1., -2.,  2.]), array([1., 0., 3.]), array([1., 1., 1.])]]\n","h:  [ 1. -2. -1.]\n","dout:  [array([ 1., -2.,  2.]), array([1., 0., 3.]), array([1., 1., 1.])]\n","y:  [1.0, 1.0, 1.0]\n","errorsum:  1\n","Eost:  0.3333333333333333\n","ranlist:  [0, 2, 4]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","cnt  3\n","point:  [array([ 1., -2.,  2.]), array([1., 0., 3.]), array([1., 2., 1.])] \n","\n","remainlist:  [1, 3, 5]\n","3\n","[0, 0, 0]\n","[1. 0. 0.]\n","[1. 0. 0.]\n","[ 0. -1. -1.]\n","[ 0. -1. -1.]\n","[ 1. -1. -1.]\n","cnt  3\n","point:  [array([1., 0., 0.]), array([1., 1., 1.]), array([1., 3., 0.])] \n","\n","wpla:  [array([ 1., -2.,  2.]), array([ 1., -1., -1.])]\n","points:  [[array([ 1., -2.,  2.]), array([1., 0., 3.]), array([1., 2., 1.])], [array([1., 0., 0.]), array([1., 1., 1.]), array([1., 3., 0.])]]\n","h:  [ 1. -2.  2.]\n","dout:  [array([1., 0., 0.]), array([1., 1., 1.]), array([1., 3., 0.])]\n","y:  [1.0, 1.0, 1.0]\n","errorsum:  2\n","Eost:  0.6666666666666666\n","ranlist:  [3, 2, 5]\n","3\n","[0, 0, 0]\n","[1. 0. 3.]\n","[1. 0. 3.]\n","[ 0. -1.  2.]\n","[ 0. -1.  2.]\n","[-1. -2.  1.]\n","cnt  3\n","point:  [array([1., 1., 1.]), array([1., 0., 3.]), array([1., 3., 0.])] \n","\n","remainlist:  [0, 1, 4]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","cnt  3\n","point:  [array([ 1., -2.,  2.]), array([1., 0., 0.]), array([1., 2., 1.])] \n","\n","wpla:  [array([-1., -2.,  1.]), array([ 1., -2.,  2.])]\n","points:  [[array([1., 1., 1.]), array([1., 0., 3.]), array([1., 3., 0.])], [array([ 1., -2.,  2.]), array([1., 0., 0.]), array([1., 2., 1.])]]\n","h:  [-1. -2.  1.]\n","dout:  [array([ 1., -2.,  2.]), array([1., 0., 0.]), array([1., 2., 1.])]\n","y:  [1.0, 1.0, 1.0]\n","errorsum:  1\n","Eost:  0.3333333333333333\n","ranlist:  [0, 5, 2]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","cnt  3\n","point:  [array([ 1., -2.,  2.]), array([1., 3., 0.]), array([1., 0., 3.])] \n","\n","remainlist:  [1, 3, 4]\n","3\n","[0, 0, 0]\n","[1. 0. 0.]\n","[1. 0. 0.]\n","[ 0. -1. -1.]\n","[ 0. -1. -1.]\n","[ 1. -1. -1.]\n","cnt  3\n","point:  [array([1., 0., 0.]), array([1., 1., 1.]), array([1., 2., 1.])] \n","\n","wpla:  [array([ 1., -2.,  2.]), array([ 1., -1., -1.])]\n","points:  [[array([ 1., -2.,  2.]), array([1., 3., 0.]), array([1., 0., 3.])], [array([1., 0., 0.]), array([1., 1., 1.]), array([1., 2., 1.])]]\n","h:  [ 1. -2.  2.]\n","dout:  [array([1., 0., 0.]), array([1., 1., 1.]), array([1., 2., 1.])]\n","y:  [1.0, 1.0, 1.0]\n","errorsum:  2\n","Eost:  0.6666666666666666\n","ranlist:  [1, 5, 2]\n","3\n","[0, 0, 0]\n","[1. 0. 0.]\n","[1. 0. 0.]\n","[ 0. -3.  0.]\n","[ 0. -3.  0.]\n","[ 1. -3.  0.]\n","cnt  3\n","point:  [array([1., 0., 0.]), array([1., 3., 0.]), array([1., 0., 3.])] \n","\n","remainlist:  [0, 3, 4]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","[ 1. -2.  2.]\n","[ 0. -3.  1.]\n","cnt  3\n","point:  [array([ 1., -2.,  2.]), array([1., 1., 1.]), array([1., 2., 1.])] \n","\n","wpla:  [array([ 1., -3.,  0.]), array([ 0., -3.,  1.])]\n","points:  [[array([1., 0., 0.]), array([1., 3., 0.]), array([1., 0., 3.])], [array([ 1., -2.,  2.]), array([1., 1., 1.]), array([1., 2., 1.])]]\n","h:  [ 1. -3.  0.]\n","dout:  [array([ 1., -2.,  2.]), array([1., 1., 1.]), array([1., 2., 1.])]\n","y:  [1.0, 1.0, 1.0]\n","errorsum:  2\n","Eost:  0.6666666666666666\n","ranlist:  [4, 2, 0]\n","3\n","[0, 0, 0]\n","[1. 0. 3.]\n","[1. 0. 3.]\n","[ 0. -2.  2.]\n","cnt  3\n","point:  [array([1., 2., 1.]), array([1., 0., 3.]), array([ 1., -2.,  2.])] \n","\n","remainlist:  [1, 3, 5]\n","3\n","[0, 0, 0]\n","[1. 0. 0.]\n","[1. 0. 0.]\n","[ 0. -1. -1.]\n","[ 0. -1. -1.]\n","[ 1. -1. -1.]\n","cnt  3\n","point:  [array([1., 0., 0.]), array([1., 1., 1.]), array([1., 3., 0.])] \n","\n","wpla:  [array([ 0., -2.,  2.]), array([ 1., -1., -1.])]\n","points:  [[array([1., 2., 1.]), array([1., 0., 3.]), array([ 1., -2.,  2.])], [array([1., 0., 0.]), array([1., 1., 1.]), array([1., 3., 0.])]]\n","h:  [ 0. -2.  2.]\n","dout:  [array([1., 0., 0.]), array([1., 1., 1.]), array([1., 3., 0.])]\n","y:  [0.0, 0.0, 0.0]\n","errorsum:  3\n","Eost:  1.0\n","ranlist:  [2, 5, 4]\n","3\n","[0, 0, 0]\n","[1. 0. 3.]\n","[1. 0. 3.]\n","[ 0. -3.  3.]\n","cnt  3\n","point:  [array([1., 0., 3.]), array([1., 3., 0.]), array([1., 2., 1.])] \n","\n","remainlist:  [0, 1, 3]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","[ 1. -2.  2.]\n","[ 0. -3.  1.]\n","[ 0. -3.  1.]\n","[ 1. -3.  1.]\n","cnt  3\n","point:  [array([ 1., -2.,  2.]), array([1., 0., 0.]), array([1., 1., 1.])] \n","\n","wpla:  [array([ 0., -3.,  3.]), array([ 1., -3.,  1.])]\n","points:  [[array([1., 0., 3.]), array([1., 3., 0.]), array([1., 2., 1.])], [array([ 1., -2.,  2.]), array([1., 0., 0.]), array([1., 1., 1.])]]\n","h:  [ 0. -3.  3.]\n","dout:  [array([ 1., -2.,  2.]), array([1., 0., 0.]), array([1., 1., 1.])]\n","y:  [1.0, 1.0, 1.0]\n","errorsum:  1\n","Eost:  0.3333333333333333\n","ranlist:  [1, 5, 3]\n","3\n","[0, 0, 0]\n","[1. 0. 0.]\n","[1. 0. 0.]\n","[ 0. -3.  0.]\n","[ 0. -3.  0.]\n","[ 1. -3.  0.]\n","cnt  3\n","point:  [array([1., 0., 0.]), array([1., 3., 0.]), array([1., 1., 1.])] \n","\n","remainlist:  [0, 2, 4]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","cnt  3\n","point:  [array([ 1., -2.,  2.]), array([1., 0., 3.]), array([1., 2., 1.])] \n","\n","wpla:  [array([ 1., -3.,  0.]), array([ 1., -2.,  2.])]\n","points:  [[array([1., 0., 0.]), array([1., 3., 0.]), array([1., 1., 1.])], [array([ 1., -2.,  2.]), array([1., 0., 3.]), array([1., 2., 1.])]]\n","h:  [ 1. -3.  0.]\n","dout:  [array([ 1., -2.,  2.]), array([1., 0., 3.]), array([1., 2., 1.])]\n","y:  [1.0, 1.0, 1.0]\n","errorsum:  1\n","Eost:  0.3333333333333333\n","ranlist:  [1, 2, 0]\n","3\n","[0, 0, 0]\n","[1. 0. 0.]\n","cnt  3\n","point:  [array([1., 0., 0.]), array([1., 0., 3.]), array([ 1., -2.,  2.])] \n","\n","remainlist:  [3, 4, 5]\n","3\n","cnt  3\n","point:  [array([1., 1., 1.]), array([1., 2., 1.]), array([1., 3., 0.])] \n","\n","wpla:  [array([1., 0., 0.]), [0, 0, 0]]\n","points:  [[array([1., 0., 0.]), array([1., 0., 3.]), array([ 1., -2.,  2.])], [array([1., 1., 1.]), array([1., 2., 1.]), array([1., 3., 0.])]]\n","h:  [1. 0. 0.]\n","dout:  [array([1., 1., 1.]), array([1., 2., 1.]), array([1., 3., 0.])]\n","y:  [1.0, 1.0, 1.0]\n","errorsum:  3\n","Eost:  1.0\n","ranlist:  [0, 5, 3]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","[ 1. -2.  2.]\n","[ 0. -3.  1.]\n","cnt  3\n","point:  [array([ 1., -2.,  2.]), array([1., 3., 0.]), array([1., 1., 1.])] \n","\n","remainlist:  [1, 2, 4]\n","3\n","[0, 0, 0]\n","[1. 0. 0.]\n","[1. 0. 0.]\n","[ 0. -2. -1.]\n","[ 0. -2. -1.]\n","[ 1. -2. -1.]\n","[ 1. -2. -1.]\n","[ 2. -2.  2.]\n","cnt  3\n","point:  [array([1., 0., 0.]), array([1., 0., 3.]), array([1., 2., 1.])] \n","\n","wpla:  [array([ 0., -3.,  1.]), array([ 2., -2.,  2.])]\n","points:  [[array([ 1., -2.,  2.]), array([1., 3., 0.]), array([1., 1., 1.])], [array([1., 0., 0.]), array([1., 0., 3.]), array([1., 2., 1.])]]\n","h:  [ 0. -3.  1.]\n","dout:  [array([1., 0., 0.]), array([1., 0., 3.]), array([1., 2., 1.])]\n","y:  [0.0, 0.0, 0.0]\n","errorsum:  3\n","Eost:  1.0\n","ranlist:  [0, 1, 3]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","[ 1. -2.  2.]\n","[ 0. -3.  1.]\n","[ 0. -3.  1.]\n","[ 1. -3.  1.]\n","cnt  3\n","point:  [array([ 1., -2.,  2.]), array([1., 0., 0.]), array([1., 1., 1.])] \n","\n","remainlist:  [2, 4, 5]\n","3\n","[0, 0, 0]\n","[1. 0. 3.]\n","[1. 0. 3.]\n","[ 0. -2.  2.]\n","cnt  3\n","point:  [array([1., 0., 3.]), array([1., 2., 1.]), array([1., 3., 0.])] \n","\n","wpla:  [array([ 1., -3.,  1.]), array([ 0., -2.,  2.])]\n","points:  [[array([ 1., -2.,  2.]), array([1., 0., 0.]), array([1., 1., 1.])], [array([1., 0., 3.]), array([1., 2., 1.]), array([1., 3., 0.])]]\n","h:  [ 1. -3.  1.]\n","dout:  [array([1., 0., 3.]), array([1., 2., 1.]), array([1., 3., 0.])]\n","y:  [1.0, 1.0, 1.0]\n","errorsum:  2\n","Eost:  0.6666666666666666\n","ranlist:  [1, 4, 0]\n","3\n","[0, 0, 0]\n","[1. 0. 0.]\n","[1. 0. 0.]\n","[ 0. -2. -1.]\n","[ 0. -2. -1.]\n","[ 1. -2. -1.]\n","cnt  3\n","point:  [array([1., 0., 0.]), array([1., 2., 1.]), array([ 1., -2.,  2.])] \n","\n","remainlist:  [2, 3, 5]\n","3\n","[0, 0, 0]\n","[1. 0. 3.]\n","[1. 0. 3.]\n","[ 0. -1.  2.]\n","[ 0. -1.  2.]\n","[-1. -2.  1.]\n","cnt  3\n","point:  [array([1., 0., 3.]), array([1., 1., 1.]), array([1., 3., 0.])] \n","\n","wpla:  [array([ 1., -2., -1.]), array([-1., -2.,  1.])]\n","points:  [[array([1., 0., 0.]), array([1., 2., 1.]), array([ 1., -2.,  2.])], [array([1., 0., 3.]), array([1., 1., 1.]), array([1., 3., 0.])]]\n","h:  [ 1. -2. -1.]\n","dout:  [array([1., 0., 3.]), array([1., 1., 1.]), array([1., 3., 0.])]\n","y:  [-1.0, -1.0, -1.0]\n","errorsum:  1\n","Eost:  0.3333333333333333\n","ranlist:  [5, 3, 2]\n","3\n","[0, 0, 0]\n","[1. 0. 3.]\n","[1. 0. 3.]\n","[ 0. -3.  3.]\n","cnt  3\n","point:  [array([1., 3., 0.]), array([1., 1., 1.]), array([1., 0., 3.])] \n","\n","remainlist:  [0, 1, 4]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","cnt  3\n","point:  [array([ 1., -2.,  2.]), array([1., 0., 0.]), array([1., 2., 1.])] \n","\n","wpla:  [array([ 0., -3.,  3.]), array([ 1., -2.,  2.])]\n","points:  [[array([1., 3., 0.]), array([1., 1., 1.]), array([1., 0., 3.])], [array([ 1., -2.,  2.]), array([1., 0., 0.]), array([1., 2., 1.])]]\n","h:  [ 0. -3.  3.]\n","dout:  [array([ 1., -2.,  2.]), array([1., 0., 0.]), array([1., 2., 1.])]\n","y:  [1.0, 1.0, 1.0]\n","errorsum:  1\n","Eost:  0.3333333333333333\n","ranlist:  [5, 3, 1]\n","3\n","[0, 0, 0]\n","[1. 0. 0.]\n","[1. 0. 0.]\n","[ 0. -3.  0.]\n","[ 0. -3.  0.]\n","[ 1. -3.  0.]\n","cnt  3\n","point:  [array([1., 3., 0.]), array([1., 1., 1.]), array([1., 0., 0.])] \n","\n","remainlist:  [0, 2, 4]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","cnt  3\n","point:  [array([ 1., -2.,  2.]), array([1., 0., 3.]), array([1., 2., 1.])] \n","\n","wpla:  [array([ 1., -3.,  0.]), array([ 1., -2.,  2.])]\n","points:  [[array([1., 3., 0.]), array([1., 1., 1.]), array([1., 0., 0.])], [array([ 1., -2.,  2.]), array([1., 0., 3.]), array([1., 2., 1.])]]\n","h:  [ 1. -3.  0.]\n","dout:  [array([ 1., -2.,  2.]), array([1., 0., 3.]), array([1., 2., 1.])]\n","y:  [1.0, 1.0, 1.0]\n","errorsum:  1\n","Eost:  0.3333333333333333\n","ranlist:  [3, 1, 2]\n","3\n","[0, 0, 0]\n","[1. 0. 0.]\n","[1. 0. 0.]\n","[ 0. -1. -1.]\n","[ 0. -1. -1.]\n","[ 1. -1. -1.]\n","[ 1. -1. -1.]\n","[ 2. -1.  2.]\n","[ 2. -1.  2.]\n","[ 1. -2.  1.]\n","cnt  3\n","point:  [array([1., 1., 1.]), array([1., 0., 0.]), array([1., 0., 3.])] \n","\n","remainlist:  [0, 4, 5]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","cnt  3\n","point:  [array([ 1., -2.,  2.]), array([1., 2., 1.]), array([1., 3., 0.])] \n","\n","wpla:  [array([ 1., -2.,  1.]), array([ 1., -2.,  2.])]\n","points:  [[array([1., 1., 1.]), array([1., 0., 0.]), array([1., 0., 3.])], [array([ 1., -2.,  2.]), array([1., 2., 1.]), array([1., 3., 0.])]]\n","h:  [ 1. -2.  1.]\n","dout:  [array([ 1., -2.,  2.]), array([1., 2., 1.]), array([1., 3., 0.])]\n","y:  [1.0, 1.0, 1.0]\n","errorsum:  2\n","Eost:  0.6666666666666666\n","ranlist:  [2, 4, 3]\n","3\n","[0, 0, 0]\n","[1. 0. 3.]\n","[1. 0. 3.]\n","[ 0. -2.  2.]\n","cnt  3\n","point:  [array([1., 0., 3.]), array([1., 2., 1.]), array([1., 1., 1.])] \n","\n","remainlist:  [0, 1, 5]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","cnt  3\n","point:  [array([ 1., -2.,  2.]), array([1., 0., 0.]), array([1., 3., 0.])] \n","\n","wpla:  [array([ 0., -2.,  2.]), array([ 1., -2.,  2.])]\n","points:  [[array([1., 0., 3.]), array([1., 2., 1.]), array([1., 1., 1.])], [array([ 1., -2.,  2.]), array([1., 0., 0.]), array([1., 3., 0.])]]\n","h:  [ 0. -2.  2.]\n","dout:  [array([ 1., -2.,  2.]), array([1., 0., 0.]), array([1., 3., 0.])]\n","y:  [1.0, 1.0, 1.0]\n","errorsum:  1\n","Eost:  0.3333333333333333\n","ranlist:  [3, 1, 0]\n","3\n","[0, 0, 0]\n","[1. 0. 0.]\n","[1. 0. 0.]\n","[ 0. -1. -1.]\n","[ 0. -1. -1.]\n","[ 1. -1. -1.]\n","cnt  3\n","point:  [array([1., 1., 1.]), array([1., 0., 0.]), array([ 1., -2.,  2.])] \n","\n","remainlist:  [2, 4, 5]\n","3\n","[0, 0, 0]\n","[1. 0. 3.]\n","[1. 0. 3.]\n","[ 0. -2.  2.]\n","cnt  3\n","point:  [array([1., 0., 3.]), array([1., 2., 1.]), array([1., 3., 0.])] \n","\n","wpla:  [array([ 1., -1., -1.]), array([ 0., -2.,  2.])]\n","points:  [[array([1., 1., 1.]), array([1., 0., 0.]), array([ 1., -2.,  2.])], [array([1., 0., 3.]), array([1., 2., 1.]), array([1., 3., 0.])]]\n","h:  [ 1. -1. -1.]\n","dout:  [array([1., 0., 3.]), array([1., 2., 1.]), array([1., 3., 0.])]\n","y:  [-1.0, -1.0, -1.0]\n","errorsum:  1\n","Eost:  0.3333333333333333\n","ranlist:  [3, 4, 1]\n","3\n","[0, 0, 0]\n","[1. 0. 0.]\n","[1. 0. 0.]\n","[ 0. -1. -1.]\n","[ 0. -1. -1.]\n","[ 1. -1. -1.]\n","cnt  3\n","point:  [array([1., 1., 1.]), array([1., 2., 1.]), array([1., 0., 0.])] \n","\n","remainlist:  [0, 2, 5]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","cnt  3\n","point:  [array([ 1., -2.,  2.]), array([1., 0., 3.]), array([1., 3., 0.])] \n","\n","wpla:  [array([ 1., -1., -1.]), array([ 1., -2.,  2.])]\n","points:  [[array([1., 1., 1.]), array([1., 2., 1.]), array([1., 0., 0.])], [array([ 1., -2.,  2.]), array([1., 0., 3.]), array([1., 3., 0.])]]\n","h:  [ 1. -1. -1.]\n","dout:  [array([ 1., -2.,  2.]), array([1., 0., 3.]), array([1., 3., 0.])]\n","y:  [1.0, 1.0, 1.0]\n","errorsum:  1\n","Eost:  0.3333333333333333\n","ranlist:  [5, 4, 0]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","cnt  3\n","point:  [array([1., 3., 0.]), array([1., 2., 1.]), array([ 1., -2.,  2.])] \n","\n","remainlist:  [1, 2, 3]\n","3\n","[0, 0, 0]\n","[1. 0. 0.]\n","[1. 0. 0.]\n","[ 0. -1. -1.]\n","[ 0. -1. -1.]\n","[ 1. -1. -1.]\n","[ 1. -1. -1.]\n","[ 2. -1.  2.]\n","[ 2. -1.  2.]\n","[ 1. -2.  1.]\n","cnt  3\n","point:  [array([1., 0., 0.]), array([1., 0., 3.]), array([1., 1., 1.])] \n","\n","wpla:  [array([ 1., -2.,  2.]), array([ 1., -2.,  1.])]\n","points:  [[array([1., 3., 0.]), array([1., 2., 1.]), array([ 1., -2.,  2.])], [array([1., 0., 0.]), array([1., 0., 3.]), array([1., 1., 1.])]]\n","h:  [ 1. -2.  2.]\n","dout:  [array([1., 0., 0.]), array([1., 0., 3.]), array([1., 1., 1.])]\n","y:  [1.0, 1.0, 1.0]\n","errorsum:  1\n","Eost:  0.3333333333333333\n","ranlist:  [2, 4, 5]\n","3\n","[0, 0, 0]\n","[1. 0. 3.]\n","[1. 0. 3.]\n","[ 0. -2.  2.]\n","cnt  3\n","point:  [array([1., 0., 3.]), array([1., 2., 1.]), array([1., 3., 0.])] \n","\n","remainlist:  [0, 1, 3]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","[ 1. -2.  2.]\n","[ 0. -3.  1.]\n","[ 0. -3.  1.]\n","[ 1. -3.  1.]\n","cnt  3\n","point:  [array([ 1., -2.,  2.]), array([1., 0., 0.]), array([1., 1., 1.])] \n","\n","wpla:  [array([ 0., -2.,  2.]), array([ 1., -3.,  1.])]\n","points:  [[array([1., 0., 3.]), array([1., 2., 1.]), array([1., 3., 0.])], [array([ 1., -2.,  2.]), array([1., 0., 0.]), array([1., 1., 1.])]]\n","h:  [ 0. -2.  2.]\n","dout:  [array([ 1., -2.,  2.]), array([1., 0., 0.]), array([1., 1., 1.])]\n","y:  [1.0, 1.0, 1.0]\n","errorsum:  1\n","Eost:  0.3333333333333333\n","ranlist:  [4, 2, 1]\n","3\n","[0, 0, 0]\n","[1. 0. 3.]\n","[1. 0. 3.]\n","[ 0. -2.  2.]\n","[ 0. -2.  2.]\n","[ 1. -2.  2.]\n","cnt  3\n","point:  [array([1., 2., 1.]), array([1., 0., 3.]), array([1., 0., 0.])] \n","\n","remainlist:  [0, 3, 5]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","[ 1. -2.  2.]\n","[ 0. -3.  1.]\n","cnt  3\n","point:  [array([ 1., -2.,  2.]), array([1., 1., 1.]), array([1., 3., 0.])] \n","\n","wpla:  [array([ 1., -2.,  2.]), array([ 0., -3.,  1.])]\n","points:  [[array([1., 2., 1.]), array([1., 0., 3.]), array([1., 0., 0.])], [array([ 1., -2.,  2.]), array([1., 1., 1.]), array([1., 3., 0.])]]\n","h:  [ 1. -2.  2.]\n","dout:  [array([ 1., -2.,  2.]), array([1., 1., 1.]), array([1., 3., 0.])]\n","y:  [1.0, 1.0, 1.0]\n","errorsum:  2\n","Eost:  0.6666666666666666\n","ranlist:  [4, 3, 0]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","[ 1. -2.  2.]\n","[ 0. -3.  1.]\n","cnt  3\n","point:  [array([1., 2., 1.]), array([1., 1., 1.]), array([ 1., -2.,  2.])] \n","\n","remainlist:  [1, 2, 5]\n","3\n","[0, 0, 0]\n","[1. 0. 0.]\n","[1. 0. 0.]\n","[ 0. -3.  0.]\n","[ 0. -3.  0.]\n","[ 1. -3.  0.]\n","cnt  3\n","point:  [array([1., 0., 0.]), array([1., 0., 3.]), array([1., 3., 0.])] \n","\n","wpla:  [array([ 0., -3.,  1.]), array([ 1., -3.,  0.])]\n","points:  [[array([1., 2., 1.]), array([1., 1., 1.]), array([ 1., -2.,  2.])], [array([1., 0., 0.]), array([1., 0., 3.]), array([1., 3., 0.])]]\n","h:  [ 0. -3.  1.]\n","dout:  [array([1., 0., 0.]), array([1., 0., 3.]), array([1., 3., 0.])]\n","y:  [0.0, 0.0, 0.0]\n","errorsum:  3\n","Eost:  1.0\n","ranlist:  [1, 3, 2]\n","3\n","[0, 0, 0]\n","[1. 0. 0.]\n","[1. 0. 0.]\n","[ 0. -1. -1.]\n","[ 0. -1. -1.]\n","[ 1. -1. -1.]\n","[ 1. -1. -1.]\n","[ 2. -1.  2.]\n","[ 2. -1.  2.]\n","[ 1. -2.  1.]\n","cnt  3\n","point:  [array([1., 0., 0.]), array([1., 1., 1.]), array([1., 0., 3.])] \n","\n","remainlist:  [0, 4, 5]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","cnt  3\n","point:  [array([ 1., -2.,  2.]), array([1., 2., 1.]), array([1., 3., 0.])] \n","\n","wpla:  [array([ 1., -2.,  1.]), array([ 1., -2.,  2.])]\n","points:  [[array([1., 0., 0.]), array([1., 1., 1.]), array([1., 0., 3.])], [array([ 1., -2.,  2.]), array([1., 2., 1.]), array([1., 3., 0.])]]\n","h:  [ 1. -2.  1.]\n","dout:  [array([ 1., -2.,  2.]), array([1., 2., 1.]), array([1., 3., 0.])]\n","y:  [1.0, 1.0, 1.0]\n","errorsum:  2\n","Eost:  0.6666666666666666\n","ranlist:  [0, 2, 5]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","cnt  3\n","point:  [array([ 1., -2.,  2.]), array([1., 0., 3.]), array([1., 3., 0.])] \n","\n","remainlist:  [1, 3, 4]\n","3\n","[0, 0, 0]\n","[1. 0. 0.]\n","[1. 0. 0.]\n","[ 0. -1. -1.]\n","[ 0. -1. -1.]\n","[ 1. -1. -1.]\n","cnt  3\n","point:  [array([1., 0., 0.]), array([1., 1., 1.]), array([1., 2., 1.])] \n","\n","wpla:  [array([ 1., -2.,  2.]), array([ 1., -1., -1.])]\n","points:  [[array([ 1., -2.,  2.]), array([1., 0., 3.]), array([1., 3., 0.])], [array([1., 0., 0.]), array([1., 1., 1.]), array([1., 2., 1.])]]\n","h:  [ 1. -2.  2.]\n","dout:  [array([1., 0., 0.]), array([1., 1., 1.]), array([1., 2., 1.])]\n","y:  [1.0, 1.0, 1.0]\n","errorsum:  2\n","Eost:  0.6666666666666666\n","ranlist:  [4, 0, 1]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","cnt  3\n","point:  [array([1., 2., 1.]), array([ 1., -2.,  2.]), array([1., 0., 0.])] \n","\n","remainlist:  [2, 3, 5]\n","3\n","[0, 0, 0]\n","[1. 0. 3.]\n","[1. 0. 3.]\n","[ 0. -1.  2.]\n","[ 0. -1.  2.]\n","[-1. -2.  1.]\n","cnt  3\n","point:  [array([1., 0., 3.]), array([1., 1., 1.]), array([1., 3., 0.])] \n","\n","wpla:  [array([ 1., -2.,  2.]), array([-1., -2.,  1.])]\n","points:  [[array([1., 2., 1.]), array([ 1., -2.,  2.]), array([1., 0., 0.])], [array([1., 0., 3.]), array([1., 1., 1.]), array([1., 3., 0.])]]\n","h:  [ 1. -2.  2.]\n","dout:  [array([1., 0., 3.]), array([1., 1., 1.]), array([1., 3., 0.])]\n","y:  [1.0, 1.0, 1.0]\n","errorsum:  2\n","Eost:  0.6666666666666666\n","ranlist:  [0, 2, 4]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","cnt  3\n","point:  [array([ 1., -2.,  2.]), array([1., 0., 3.]), array([1., 2., 1.])] \n","\n","remainlist:  [1, 3, 5]\n","3\n","[0, 0, 0]\n","[1. 0. 0.]\n","[1. 0. 0.]\n","[ 0. -1. -1.]\n","[ 0. -1. -1.]\n","[ 1. -1. -1.]\n","cnt  3\n","point:  [array([1., 0., 0.]), array([1., 1., 1.]), array([1., 3., 0.])] \n","\n","wpla:  [array([ 1., -2.,  2.]), array([ 1., -1., -1.])]\n","points:  [[array([ 1., -2.,  2.]), array([1., 0., 3.]), array([1., 2., 1.])], [array([1., 0., 0.]), array([1., 1., 1.]), array([1., 3., 0.])]]\n","h:  [ 1. -2.  2.]\n","dout:  [array([1., 0., 0.]), array([1., 1., 1.]), array([1., 3., 0.])]\n","y:  [1.0, 1.0, 1.0]\n","errorsum:  2\n","Eost:  0.6666666666666666\n","ranlist:  [3, 5, 4]\n","3\n","cnt  3\n","point:  [array([1., 1., 1.]), array([1., 3., 0.]), array([1., 2., 1.])] \n","\n","remainlist:  [0, 1, 2]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","cnt  3\n","point:  [array([ 1., -2.,  2.]), array([1., 0., 0.]), array([1., 0., 3.])] \n","\n","wpla:  [[0, 0, 0], array([ 1., -2.,  2.])]\n","points:  [[array([1., 1., 1.]), array([1., 3., 0.]), array([1., 2., 1.])], [array([ 1., -2.,  2.]), array([1., 0., 0.]), array([1., 0., 3.])]]\n","h:  [0, 0, 0]\n","dout:  [array([ 1., -2.,  2.]), array([1., 0., 0.]), array([1., 0., 3.])]\n","y:  [0.0, 0.0, 0.0]\n","errorsum:  3\n","Eost:  1.0\n","ranlist:  [2, 5, 0]\n","3\n","[0, 0, 0]\n","[1. 0. 3.]\n","[1. 0. 3.]\n","[ 0. -3.  3.]\n","cnt  3\n","point:  [array([1., 0., 3.]), array([1., 3., 0.]), array([ 1., -2.,  2.])] \n","\n","remainlist:  [1, 3, 4]\n","3\n","[0, 0, 0]\n","[1. 0. 0.]\n","[1. 0. 0.]\n","[ 0. -1. -1.]\n","[ 0. -1. -1.]\n","[ 1. -1. -1.]\n","cnt  3\n","point:  [array([1., 0., 0.]), array([1., 1., 1.]), array([1., 2., 1.])] \n","\n","wpla:  [array([ 0., -3.,  3.]), array([ 1., -1., -1.])]\n","points:  [[array([1., 0., 3.]), array([1., 3., 0.]), array([ 1., -2.,  2.])], [array([1., 0., 0.]), array([1., 1., 1.]), array([1., 2., 1.])]]\n","h:  [ 0. -3.  3.]\n","dout:  [array([1., 0., 0.]), array([1., 1., 1.]), array([1., 2., 1.])]\n","y:  [0.0, 0.0, 0.0]\n","errorsum:  3\n","Eost:  1.0\n","ranlist:  [2, 1, 5]\n","3\n","[0, 0, 0]\n","[1. 0. 3.]\n","[1. 0. 3.]\n","[ 0. -3.  3.]\n","[ 0. -3.  3.]\n","[ 1. -3.  3.]\n","cnt  3\n","point:  [array([1., 0., 3.]), array([1., 0., 0.]), array([1., 3., 0.])] \n","\n","remainlist:  [0, 3, 4]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","[ 1. -2.  2.]\n","[ 0. -3.  1.]\n","cnt  3\n","point:  [array([ 1., -2.,  2.]), array([1., 1., 1.]), array([1., 2., 1.])] \n","\n","wpla:  [array([ 1., -3.,  3.]), array([ 0., -3.,  1.])]\n","points:  [[array([1., 0., 3.]), array([1., 0., 0.]), array([1., 3., 0.])], [array([ 1., -2.,  2.]), array([1., 1., 1.]), array([1., 2., 1.])]]\n","h:  [ 1. -3.  3.]\n","dout:  [array([ 1., -2.,  2.]), array([1., 1., 1.]), array([1., 2., 1.])]\n","y:  [1.0, 1.0, 1.0]\n","errorsum:  2\n","Eost:  0.6666666666666666\n","ranlist:  [5, 0, 4]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","cnt  3\n","point:  [array([1., 3., 0.]), array([ 1., -2.,  2.]), array([1., 2., 1.])] \n","\n","remainlist:  [1, 2, 3]\n","3\n","[0, 0, 0]\n","[1. 0. 0.]\n","[1. 0. 0.]\n","[ 0. -1. -1.]\n","[ 0. -1. -1.]\n","[ 1. -1. -1.]\n","[ 1. -1. -1.]\n","[ 2. -1.  2.]\n","[ 2. -1.  2.]\n","[ 1. -2.  1.]\n","cnt  3\n","point:  [array([1., 0., 0.]), array([1., 0., 3.]), array([1., 1., 1.])] \n","\n","wpla:  [array([ 1., -2.,  2.]), array([ 1., -2.,  1.])]\n","points:  [[array([1., 3., 0.]), array([ 1., -2.,  2.]), array([1., 2., 1.])], [array([1., 0., 0.]), array([1., 0., 3.]), array([1., 1., 1.])]]\n","h:  [ 1. -2.  2.]\n","dout:  [array([1., 0., 0.]), array([1., 0., 3.]), array([1., 1., 1.])]\n","y:  [1.0, 1.0, 1.0]\n","errorsum:  1\n","Eost:  0.3333333333333333\n","ranlist:  [1, 4, 0]\n","3\n","[0, 0, 0]\n","[1. 0. 0.]\n","[1. 0. 0.]\n","[ 0. -2. -1.]\n","[ 0. -2. -1.]\n","[ 1. -2. -1.]\n","cnt  3\n","point:  [array([1., 0., 0.]), array([1., 2., 1.]), array([ 1., -2.,  2.])] \n","\n","remainlist:  [2, 3, 5]\n","3\n","[0, 0, 0]\n","[1. 0. 3.]\n","[1. 0. 3.]\n","[ 0. -1.  2.]\n","[ 0. -1.  2.]\n","[-1. -2.  1.]\n","cnt  3\n","point:  [array([1., 0., 3.]), array([1., 1., 1.]), array([1., 3., 0.])] \n","\n","wpla:  [array([ 1., -2., -1.]), array([-1., -2.,  1.])]\n","points:  [[array([1., 0., 0.]), array([1., 2., 1.]), array([ 1., -2.,  2.])], [array([1., 0., 3.]), array([1., 1., 1.]), array([1., 3., 0.])]]\n","h:  [ 1. -2. -1.]\n","dout:  [array([1., 0., 3.]), array([1., 1., 1.]), array([1., 3., 0.])]\n","y:  [-1.0, -1.0, -1.0]\n","errorsum:  1\n","Eost:  0.3333333333333333\n","ranlist:  [2, 4, 5]\n","3\n","[0, 0, 0]\n","[1. 0. 3.]\n","[1. 0. 3.]\n","[ 0. -2.  2.]\n","cnt  3\n","point:  [array([1., 0., 3.]), array([1., 2., 1.]), array([1., 3., 0.])] \n","\n","remainlist:  [0, 1, 3]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","[ 1. -2.  2.]\n","[ 0. -3.  1.]\n","[ 0. -3.  1.]\n","[ 1. -3.  1.]\n","cnt  3\n","point:  [array([ 1., -2.,  2.]), array([1., 0., 0.]), array([1., 1., 1.])] \n","\n","wpla:  [array([ 0., -2.,  2.]), array([ 1., -3.,  1.])]\n","points:  [[array([1., 0., 3.]), array([1., 2., 1.]), array([1., 3., 0.])], [array([ 1., -2.,  2.]), array([1., 0., 0.]), array([1., 1., 1.])]]\n","h:  [ 0. -2.  2.]\n","dout:  [array([ 1., -2.,  2.]), array([1., 0., 0.]), array([1., 1., 1.])]\n","y:  [1.0, 1.0, 1.0]\n","errorsum:  1\n","Eost:  0.3333333333333333\n","ranlist:  [3, 5, 0]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","[ 1. -2.  2.]\n","[ 0. -3.  1.]\n","cnt  3\n","point:  [array([1., 1., 1.]), array([1., 3., 0.]), array([ 1., -2.,  2.])] \n","\n","remainlist:  [1, 2, 4]\n","3\n","[0, 0, 0]\n","[1. 0. 0.]\n","[1. 0. 0.]\n","[ 0. -2. -1.]\n","[ 0. -2. -1.]\n","[ 1. -2. -1.]\n","[ 1. -2. -1.]\n","[ 2. -2.  2.]\n","cnt  3\n","point:  [array([1., 0., 0.]), array([1., 0., 3.]), array([1., 2., 1.])] \n","\n","wpla:  [array([ 0., -3.,  1.]), array([ 2., -2.,  2.])]\n","points:  [[array([1., 1., 1.]), array([1., 3., 0.]), array([ 1., -2.,  2.])], [array([1., 0., 0.]), array([1., 0., 3.]), array([1., 2., 1.])]]\n","h:  [ 0. -3.  1.]\n","dout:  [array([1., 0., 0.]), array([1., 0., 3.]), array([1., 2., 1.])]\n","y:  [0.0, 0.0, 0.0]\n","errorsum:  3\n","Eost:  1.0\n","ranlist:  [2, 5, 1]\n","3\n","[0, 0, 0]\n","[1. 0. 3.]\n","[1. 0. 3.]\n","[ 0. -3.  3.]\n","[ 0. -3.  3.]\n","[ 1. -3.  3.]\n","cnt  3\n","point:  [array([1., 0., 3.]), array([1., 3., 0.]), array([1., 0., 0.])] \n","\n","remainlist:  [0, 3, 4]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","[ 1. -2.  2.]\n","[ 0. -3.  1.]\n","cnt  3\n","point:  [array([ 1., -2.,  2.]), array([1., 1., 1.]), array([1., 2., 1.])] \n","\n","wpla:  [array([ 1., -3.,  3.]), array([ 0., -3.,  1.])]\n","points:  [[array([1., 0., 3.]), array([1., 3., 0.]), array([1., 0., 0.])], [array([ 1., -2.,  2.]), array([1., 1., 1.]), array([1., 2., 1.])]]\n","h:  [ 1. -3.  3.]\n","dout:  [array([ 1., -2.,  2.]), array([1., 1., 1.]), array([1., 2., 1.])]\n","y:  [1.0, 1.0, 1.0]\n","errorsum:  2\n","Eost:  0.6666666666666666\n","ranlist:  [5, 0, 4]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","cnt  3\n","point:  [array([1., 3., 0.]), array([ 1., -2.,  2.]), array([1., 2., 1.])] \n","\n","remainlist:  [1, 2, 3]\n","3\n","[0, 0, 0]\n","[1. 0. 0.]\n","[1. 0. 0.]\n","[ 0. -1. -1.]\n","[ 0. -1. -1.]\n","[ 1. -1. -1.]\n","[ 1. -1. -1.]\n","[ 2. -1.  2.]\n","[ 2. -1.  2.]\n","[ 1. -2.  1.]\n","cnt  3\n","point:  [array([1., 0., 0.]), array([1., 0., 3.]), array([1., 1., 1.])] \n","\n","wpla:  [array([ 1., -2.,  2.]), array([ 1., -2.,  1.])]\n","points:  [[array([1., 3., 0.]), array([ 1., -2.,  2.]), array([1., 2., 1.])], [array([1., 0., 0.]), array([1., 0., 3.]), array([1., 1., 1.])]]\n","h:  [ 1. -2.  2.]\n","dout:  [array([1., 0., 0.]), array([1., 0., 3.]), array([1., 1., 1.])]\n","y:  [1.0, 1.0, 1.0]\n","errorsum:  1\n","Eost:  0.3333333333333333\n","ranlist:  [4, 1, 0]\n","3\n","[0, 0, 0]\n","[1. 0. 0.]\n","[1. 0. 0.]\n","[ 0. -2. -1.]\n","[ 0. -2. -1.]\n","[ 1. -2. -1.]\n","cnt  3\n","point:  [array([1., 2., 1.]), array([1., 0., 0.]), array([ 1., -2.,  2.])] \n","\n","remainlist:  [2, 3, 5]\n","3\n","[0, 0, 0]\n","[1. 0. 3.]\n","[1. 0. 3.]\n","[ 0. -1.  2.]\n","[ 0. -1.  2.]\n","[-1. -2.  1.]\n","cnt  3\n","point:  [array([1., 0., 3.]), array([1., 1., 1.]), array([1., 3., 0.])] \n","\n","wpla:  [array([ 1., -2., -1.]), array([-1., -2.,  1.])]\n","points:  [[array([1., 2., 1.]), array([1., 0., 0.]), array([ 1., -2.,  2.])], [array([1., 0., 3.]), array([1., 1., 1.]), array([1., 3., 0.])]]\n","h:  [ 1. -2. -1.]\n","dout:  [array([1., 0., 3.]), array([1., 1., 1.]), array([1., 3., 0.])]\n","y:  [-1.0, -1.0, -1.0]\n","errorsum:  1\n","Eost:  0.3333333333333333\n","ranlist:  [3, 1, 0]\n","3\n","[0, 0, 0]\n","[1. 0. 0.]\n","[1. 0. 0.]\n","[ 0. -1. -1.]\n","[ 0. -1. -1.]\n","[ 1. -1. -1.]\n","cnt  3\n","point:  [array([1., 1., 1.]), array([1., 0., 0.]), array([ 1., -2.,  2.])] \n","\n","remainlist:  [2, 4, 5]\n","3\n","[0, 0, 0]\n","[1. 0. 3.]\n","[1. 0. 3.]\n","[ 0. -2.  2.]\n","cnt  3\n","point:  [array([1., 0., 3.]), array([1., 2., 1.]), array([1., 3., 0.])] \n","\n","wpla:  [array([ 1., -1., -1.]), array([ 0., -2.,  2.])]\n","points:  [[array([1., 1., 1.]), array([1., 0., 0.]), array([ 1., -2.,  2.])], [array([1., 0., 3.]), array([1., 2., 1.]), array([1., 3., 0.])]]\n","h:  [ 1. -1. -1.]\n","dout:  [array([1., 0., 3.]), array([1., 2., 1.]), array([1., 3., 0.])]\n","y:  [-1.0, -1.0, -1.0]\n","errorsum:  1\n","Eost:  0.3333333333333333\n","ranlist:  [3, 2, 1]\n","3\n","[0, 0, 0]\n","[1. 0. 3.]\n","[1. 0. 3.]\n","[ 0. -1.  2.]\n","[ 0. -1.  2.]\n","[-1. -2.  1.]\n","[-1. -2.  1.]\n","[ 0. -2.  1.]\n","[ 0. -2.  1.]\n","[ 1. -2.  1.]\n","cnt  3\n","point:  [array([1., 1., 1.]), array([1., 0., 3.]), array([1., 0., 0.])] \n","\n","remainlist:  [0, 4, 5]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","cnt  3\n","point:  [array([ 1., -2.,  2.]), array([1., 2., 1.]), array([1., 3., 0.])] \n","\n","wpla:  [array([ 1., -2.,  1.]), array([ 1., -2.,  2.])]\n","points:  [[array([1., 1., 1.]), array([1., 0., 3.]), array([1., 0., 0.])], [array([ 1., -2.,  2.]), array([1., 2., 1.]), array([1., 3., 0.])]]\n","h:  [ 1. -2.  1.]\n","dout:  [array([ 1., -2.,  2.]), array([1., 2., 1.]), array([1., 3., 0.])]\n","y:  [1.0, 1.0, 1.0]\n","errorsum:  2\n","Eost:  0.6666666666666666\n","ranlist:  [1, 0, 2]\n","3\n","[0, 0, 0]\n","[1. 0. 0.]\n","cnt  3\n","point:  [array([1., 0., 0.]), array([ 1., -2.,  2.]), array([1., 0., 3.])] \n","\n","remainlist:  [3, 4, 5]\n","3\n","cnt  3\n","point:  [array([1., 1., 1.]), array([1., 2., 1.]), array([1., 3., 0.])] \n","\n","wpla:  [array([1., 0., 0.]), [0, 0, 0]]\n","points:  [[array([1., 0., 0.]), array([ 1., -2.,  2.]), array([1., 0., 3.])], [array([1., 1., 1.]), array([1., 2., 1.]), array([1., 3., 0.])]]\n","h:  [1. 0. 0.]\n","dout:  [array([1., 1., 1.]), array([1., 2., 1.]), array([1., 3., 0.])]\n","y:  [1.0, 1.0, 1.0]\n","errorsum:  3\n","Eost:  1.0\n","ranlist:  [4, 0, 2]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","cnt  3\n","point:  [array([1., 2., 1.]), array([ 1., -2.,  2.]), array([1., 0., 3.])] \n","\n","remainlist:  [1, 3, 5]\n","3\n","[0, 0, 0]\n","[1. 0. 0.]\n","[1. 0. 0.]\n","[ 0. -1. -1.]\n","[ 0. -1. -1.]\n","[ 1. -1. -1.]\n","cnt  3\n","point:  [array([1., 0., 0.]), array([1., 1., 1.]), array([1., 3., 0.])] \n","\n","wpla:  [array([ 1., -2.,  2.]), array([ 1., -1., -1.])]\n","points:  [[array([1., 2., 1.]), array([ 1., -2.,  2.]), array([1., 0., 3.])], [array([1., 0., 0.]), array([1., 1., 1.]), array([1., 3., 0.])]]\n","h:  [ 1. -2.  2.]\n","dout:  [array([1., 0., 0.]), array([1., 1., 1.]), array([1., 3., 0.])]\n","y:  [1.0, 1.0, 1.0]\n","errorsum:  2\n","Eost:  0.6666666666666666\n","ranlist:  [5, 4, 3]\n","3\n","cnt  3\n","point:  [array([1., 3., 0.]), array([1., 2., 1.]), array([1., 1., 1.])] \n","\n","remainlist:  [0, 1, 2]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","cnt  3\n","point:  [array([ 1., -2.,  2.]), array([1., 0., 0.]), array([1., 0., 3.])] \n","\n","wpla:  [[0, 0, 0], array([ 1., -2.,  2.])]\n","points:  [[array([1., 3., 0.]), array([1., 2., 1.]), array([1., 1., 1.])], [array([ 1., -2.,  2.]), array([1., 0., 0.]), array([1., 0., 3.])]]\n","h:  [0, 0, 0]\n","dout:  [array([ 1., -2.,  2.]), array([1., 0., 0.]), array([1., 0., 3.])]\n","y:  [0.0, 0.0, 0.0]\n","errorsum:  3\n","Eost:  1.0\n","ranlist:  [5, 0, 3]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","[ 1. -2.  2.]\n","[ 0. -3.  1.]\n","cnt  3\n","point:  [array([1., 3., 0.]), array([ 1., -2.,  2.]), array([1., 1., 1.])] \n","\n","remainlist:  [1, 2, 4]\n","3\n","[0, 0, 0]\n","[1. 0. 0.]\n","[1. 0. 0.]\n","[ 0. -2. -1.]\n","[ 0. -2. -1.]\n","[ 1. -2. -1.]\n","[ 1. -2. -1.]\n","[ 2. -2.  2.]\n","cnt  3\n","point:  [array([1., 0., 0.]), array([1., 0., 3.]), array([1., 2., 1.])] \n","\n","wpla:  [array([ 0., -3.,  1.]), array([ 2., -2.,  2.])]\n","points:  [[array([1., 3., 0.]), array([ 1., -2.,  2.]), array([1., 1., 1.])], [array([1., 0., 0.]), array([1., 0., 3.]), array([1., 2., 1.])]]\n","h:  [ 0. -3.  1.]\n","dout:  [array([1., 0., 0.]), array([1., 0., 3.]), array([1., 2., 1.])]\n","y:  [0.0, 0.0, 0.0]\n","errorsum:  3\n","Eost:  1.0\n","ranlist:  [2, 1, 0]\n","3\n","[0, 0, 0]\n","[1. 0. 3.]\n","cnt  3\n","point:  [array([1., 0., 3.]), array([1., 0., 0.]), array([ 1., -2.,  2.])] \n","\n","remainlist:  [3, 4, 5]\n","3\n","cnt  3\n","point:  [array([1., 1., 1.]), array([1., 2., 1.]), array([1., 3., 0.])] \n","\n","wpla:  [array([1., 0., 3.]), [0, 0, 0]]\n","points:  [[array([1., 0., 3.]), array([1., 0., 0.]), array([ 1., -2.,  2.])], [array([1., 1., 1.]), array([1., 2., 1.]), array([1., 3., 0.])]]\n","h:  [1. 0. 3.]\n","dout:  [array([1., 1., 1.]), array([1., 2., 1.]), array([1., 3., 0.])]\n","y:  [1.0, 1.0, 1.0]\n","errorsum:  3\n","Eost:  1.0\n","ranlist:  [0, 2, 1]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","cnt  3\n","point:  [array([ 1., -2.,  2.]), array([1., 0., 3.]), array([1., 0., 0.])] \n","\n","remainlist:  [3, 4, 5]\n","3\n","cnt  3\n","point:  [array([1., 1., 1.]), array([1., 2., 1.]), array([1., 3., 0.])] \n","\n","wpla:  [array([ 1., -2.,  2.]), [0, 0, 0]]\n","points:  [[array([ 1., -2.,  2.]), array([1., 0., 3.]), array([1., 0., 0.])], [array([1., 1., 1.]), array([1., 2., 1.]), array([1., 3., 0.])]]\n","h:  [ 1. -2.  2.]\n","dout:  [array([1., 1., 1.]), array([1., 2., 1.]), array([1., 3., 0.])]\n","y:  [1.0, 1.0, 1.0]\n","errorsum:  3\n","Eost:  1.0\n","ranlist:  [4, 5, 0]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","cnt  3\n","point:  [array([1., 2., 1.]), array([1., 3., 0.]), array([ 1., -2.,  2.])] \n","\n","remainlist:  [1, 2, 3]\n","3\n","[0, 0, 0]\n","[1. 0. 0.]\n","[1. 0. 0.]\n","[ 0. -1. -1.]\n","[ 0. -1. -1.]\n","[ 1. -1. -1.]\n","[ 1. -1. -1.]\n","[ 2. -1.  2.]\n","[ 2. -1.  2.]\n","[ 1. -2.  1.]\n","cnt  3\n","point:  [array([1., 0., 0.]), array([1., 0., 3.]), array([1., 1., 1.])] \n","\n","wpla:  [array([ 1., -2.,  2.]), array([ 1., -2.,  1.])]\n","points:  [[array([1., 2., 1.]), array([1., 3., 0.]), array([ 1., -2.,  2.])], [array([1., 0., 0.]), array([1., 0., 3.]), array([1., 1., 1.])]]\n","h:  [ 1. -2.  2.]\n","dout:  [array([1., 0., 0.]), array([1., 0., 3.]), array([1., 1., 1.])]\n","y:  [1.0, 1.0, 1.0]\n","errorsum:  1\n","Eost:  0.3333333333333333\n","ranlist:  [2, 4, 0]\n","3\n","[0, 0, 0]\n","[1. 0. 3.]\n","[1. 0. 3.]\n","[ 0. -2.  2.]\n","cnt  3\n","point:  [array([1., 0., 3.]), array([1., 2., 1.]), array([ 1., -2.,  2.])] \n","\n","remainlist:  [1, 3, 5]\n","3\n","[0, 0, 0]\n","[1. 0. 0.]\n","[1. 0. 0.]\n","[ 0. -1. -1.]\n","[ 0. -1. -1.]\n","[ 1. -1. -1.]\n","cnt  3\n","point:  [array([1., 0., 0.]), array([1., 1., 1.]), array([1., 3., 0.])] \n","\n","wpla:  [array([ 0., -2.,  2.]), array([ 1., -1., -1.])]\n","points:  [[array([1., 0., 3.]), array([1., 2., 1.]), array([ 1., -2.,  2.])], [array([1., 0., 0.]), array([1., 1., 1.]), array([1., 3., 0.])]]\n","h:  [ 0. -2.  2.]\n","dout:  [array([1., 0., 0.]), array([1., 1., 1.]), array([1., 3., 0.])]\n","y:  [0.0, 0.0, 0.0]\n","errorsum:  3\n","Eost:  1.0\n","ranlist:  [0, 1, 2]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","cnt  3\n","point:  [array([ 1., -2.,  2.]), array([1., 0., 0.]), array([1., 0., 3.])] \n","\n","remainlist:  [3, 4, 5]\n","3\n","cnt  3\n","point:  [array([1., 1., 1.]), array([1., 2., 1.]), array([1., 3., 0.])] \n","\n","wpla:  [array([ 1., -2.,  2.]), [0, 0, 0]]\n","points:  [[array([ 1., -2.,  2.]), array([1., 0., 0.]), array([1., 0., 3.])], [array([1., 1., 1.]), array([1., 2., 1.]), array([1., 3., 0.])]]\n","h:  [ 1. -2.  2.]\n","dout:  [array([1., 1., 1.]), array([1., 2., 1.]), array([1., 3., 0.])]\n","y:  [1.0, 1.0, 1.0]\n","errorsum:  3\n","Eost:  1.0\n","ranlist:  [4, 0, 5]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","cnt  3\n","point:  [array([1., 2., 1.]), array([ 1., -2.,  2.]), array([1., 3., 0.])] \n","\n","remainlist:  [1, 2, 3]\n","3\n","[0, 0, 0]\n","[1. 0. 0.]\n","[1. 0. 0.]\n","[ 0. -1. -1.]\n","[ 0. -1. -1.]\n","[ 1. -1. -1.]\n","[ 1. -1. -1.]\n","[ 2. -1.  2.]\n","[ 2. -1.  2.]\n","[ 1. -2.  1.]\n","cnt  3\n","point:  [array([1., 0., 0.]), array([1., 0., 3.]), array([1., 1., 1.])] \n","\n","wpla:  [array([ 1., -2.,  2.]), array([ 1., -2.,  1.])]\n","points:  [[array([1., 2., 1.]), array([ 1., -2.,  2.]), array([1., 3., 0.])], [array([1., 0., 0.]), array([1., 0., 3.]), array([1., 1., 1.])]]\n","h:  [ 1. -2.  2.]\n","dout:  [array([1., 0., 0.]), array([1., 0., 3.]), array([1., 1., 1.])]\n","y:  [1.0, 1.0, 1.0]\n","errorsum:  1\n","Eost:  0.3333333333333333\n","ranlist:  [1, 3, 5]\n","3\n","[0, 0, 0]\n","[1. 0. 0.]\n","[1. 0. 0.]\n","[ 0. -1. -1.]\n","[ 0. -1. -1.]\n","[ 1. -1. -1.]\n","cnt  3\n","point:  [array([1., 0., 0.]), array([1., 1., 1.]), array([1., 3., 0.])] \n","\n","remainlist:  [0, 2, 4]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","cnt  3\n","point:  [array([ 1., -2.,  2.]), array([1., 0., 3.]), array([1., 2., 1.])] \n","\n","wpla:  [array([ 1., -1., -1.]), array([ 1., -2.,  2.])]\n","points:  [[array([1., 0., 0.]), array([1., 1., 1.]), array([1., 3., 0.])], [array([ 1., -2.,  2.]), array([1., 0., 3.]), array([1., 2., 1.])]]\n","h:  [ 1. -1. -1.]\n","dout:  [array([ 1., -2.,  2.]), array([1., 0., 3.]), array([1., 2., 1.])]\n","y:  [1.0, 1.0, 1.0]\n","errorsum:  1\n","Eost:  0.3333333333333333\n","ranlist:  [1, 2, 0]\n","3\n","[0, 0, 0]\n","[1. 0. 0.]\n","cnt  3\n","point:  [array([1., 0., 0.]), array([1., 0., 3.]), array([ 1., -2.,  2.])] \n","\n","remainlist:  [3, 4, 5]\n","3\n","cnt  3\n","point:  [array([1., 1., 1.]), array([1., 2., 1.]), array([1., 3., 0.])] \n","\n","wpla:  [array([1., 0., 0.]), [0, 0, 0]]\n","points:  [[array([1., 0., 0.]), array([1., 0., 3.]), array([ 1., -2.,  2.])], [array([1., 1., 1.]), array([1., 2., 1.]), array([1., 3., 0.])]]\n","h:  [1. 0. 0.]\n","dout:  [array([1., 1., 1.]), array([1., 2., 1.]), array([1., 3., 0.])]\n","y:  [1.0, 1.0, 1.0]\n","errorsum:  3\n","Eost:  1.0\n","ranlist:  [0, 1, 4]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","cnt  3\n","point:  [array([ 1., -2.,  2.]), array([1., 0., 0.]), array([1., 2., 1.])] \n","\n","remainlist:  [2, 3, 5]\n","3\n","[0, 0, 0]\n","[1. 0. 3.]\n","[1. 0. 3.]\n","[ 0. -1.  2.]\n","[ 0. -1.  2.]\n","[-1. -2.  1.]\n","cnt  3\n","point:  [array([1., 0., 3.]), array([1., 1., 1.]), array([1., 3., 0.])] \n","\n","wpla:  [array([ 1., -2.,  2.]), array([-1., -2.,  1.])]\n","points:  [[array([ 1., -2.,  2.]), array([1., 0., 0.]), array([1., 2., 1.])], [array([1., 0., 3.]), array([1., 1., 1.]), array([1., 3., 0.])]]\n","h:  [ 1. -2.  2.]\n","dout:  [array([1., 0., 3.]), array([1., 1., 1.]), array([1., 3., 0.])]\n","y:  [1.0, 1.0, 1.0]\n","errorsum:  2\n","Eost:  0.6666666666666666\n","ranlist:  [1, 4, 3]\n","3\n","[0, 0, 0]\n","[1. 0. 0.]\n","[1. 0. 0.]\n","[ 0. -2. -1.]\n","[ 0. -2. -1.]\n","[ 1. -2. -1.]\n","cnt  3\n","point:  [array([1., 0., 0.]), array([1., 2., 1.]), array([1., 1., 1.])] \n","\n","remainlist:  [0, 2, 5]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","cnt  3\n","point:  [array([ 1., -2.,  2.]), array([1., 0., 3.]), array([1., 3., 0.])] \n","\n","wpla:  [array([ 1., -2., -1.]), array([ 1., -2.,  2.])]\n","points:  [[array([1., 0., 0.]), array([1., 2., 1.]), array([1., 1., 1.])], [array([ 1., -2.,  2.]), array([1., 0., 3.]), array([1., 3., 0.])]]\n","h:  [ 1. -2. -1.]\n","dout:  [array([ 1., -2.,  2.]), array([1., 0., 3.]), array([1., 3., 0.])]\n","y:  [1.0, 1.0, 1.0]\n","errorsum:  1\n","Eost:  0.3333333333333333\n","ranlist:  [1, 2, 5]\n","3\n","[0, 0, 0]\n","[1. 0. 0.]\n","[1. 0. 0.]\n","[ 0. -3.  0.]\n","[ 0. -3.  0.]\n","[ 1. -3.  0.]\n","cnt  3\n","point:  [array([1., 0., 0.]), array([1., 0., 3.]), array([1., 3., 0.])] \n","\n","remainlist:  [0, 3, 4]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","[ 1. -2.  2.]\n","[ 0. -3.  1.]\n","cnt  3\n","point:  [array([ 1., -2.,  2.]), array([1., 1., 1.]), array([1., 2., 1.])] \n","\n","wpla:  [array([ 1., -3.,  0.]), array([ 0., -3.,  1.])]\n","points:  [[array([1., 0., 0.]), array([1., 0., 3.]), array([1., 3., 0.])], [array([ 1., -2.,  2.]), array([1., 1., 1.]), array([1., 2., 1.])]]\n","h:  [ 1. -3.  0.]\n","dout:  [array([ 1., -2.,  2.]), array([1., 1., 1.]), array([1., 2., 1.])]\n","y:  [1.0, 1.0, 1.0]\n","errorsum:  2\n","Eost:  0.6666666666666666\n","ranlist:  [3, 1, 0]\n","3\n","[0, 0, 0]\n","[1. 0. 0.]\n","[1. 0. 0.]\n","[ 0. -1. -1.]\n","[ 0. -1. -1.]\n","[ 1. -1. -1.]\n","cnt  3\n","point:  [array([1., 1., 1.]), array([1., 0., 0.]), array([ 1., -2.,  2.])] \n","\n","remainlist:  [2, 4, 5]\n","3\n","[0, 0, 0]\n","[1. 0. 3.]\n","[1. 0. 3.]\n","[ 0. -2.  2.]\n","cnt  3\n","point:  [array([1., 0., 3.]), array([1., 2., 1.]), array([1., 3., 0.])] \n","\n","wpla:  [array([ 1., -1., -1.]), array([ 0., -2.,  2.])]\n","points:  [[array([1., 1., 1.]), array([1., 0., 0.]), array([ 1., -2.,  2.])], [array([1., 0., 3.]), array([1., 2., 1.]), array([1., 3., 0.])]]\n","h:  [ 1. -1. -1.]\n","dout:  [array([1., 0., 3.]), array([1., 2., 1.]), array([1., 3., 0.])]\n","y:  [-1.0, -1.0, -1.0]\n","errorsum:  1\n","Eost:  0.3333333333333333\n","ranlist:  [3, 2, 1]\n","3\n","[0, 0, 0]\n","[1. 0. 3.]\n","[1. 0. 3.]\n","[ 0. -1.  2.]\n","[ 0. -1.  2.]\n","[-1. -2.  1.]\n","[-1. -2.  1.]\n","[ 0. -2.  1.]\n","[ 0. -2.  1.]\n","[ 1. -2.  1.]\n","cnt  3\n","point:  [array([1., 1., 1.]), array([1., 0., 3.]), array([1., 0., 0.])] \n","\n","remainlist:  [0, 4, 5]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","cnt  3\n","point:  [array([ 1., -2.,  2.]), array([1., 2., 1.]), array([1., 3., 0.])] \n","\n","wpla:  [array([ 1., -2.,  1.]), array([ 1., -2.,  2.])]\n","points:  [[array([1., 1., 1.]), array([1., 0., 3.]), array([1., 0., 0.])], [array([ 1., -2.,  2.]), array([1., 2., 1.]), array([1., 3., 0.])]]\n","h:  [ 1. -2.  1.]\n","dout:  [array([ 1., -2.,  2.]), array([1., 2., 1.]), array([1., 3., 0.])]\n","y:  [1.0, 1.0, 1.0]\n","errorsum:  2\n","Eost:  0.6666666666666666\n","ranlist:  [1, 3, 4]\n","3\n","[0, 0, 0]\n","[1. 0. 0.]\n","[1. 0. 0.]\n","[ 0. -1. -1.]\n","[ 0. -1. -1.]\n","[ 1. -1. -1.]\n","cnt  3\n","point:  [array([1., 0., 0.]), array([1., 1., 1.]), array([1., 2., 1.])] \n","\n","remainlist:  [0, 2, 5]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","cnt  3\n","point:  [array([ 1., -2.,  2.]), array([1., 0., 3.]), array([1., 3., 0.])] \n","\n","wpla:  [array([ 1., -1., -1.]), array([ 1., -2.,  2.])]\n","points:  [[array([1., 0., 0.]), array([1., 1., 1.]), array([1., 2., 1.])], [array([ 1., -2.,  2.]), array([1., 0., 3.]), array([1., 3., 0.])]]\n","h:  [ 1. -1. -1.]\n","dout:  [array([ 1., -2.,  2.]), array([1., 0., 3.]), array([1., 3., 0.])]\n","y:  [1.0, 1.0, 1.0]\n","errorsum:  1\n","Eost:  0.3333333333333333\n","ranlist:  [5, 0, 4]\n","3\n","[0, 0, 0]\n","[ 1. -2.  2.]\n","cnt  3\n","point:  [array([1., 3., 0.]), array([ 1., -2.,  2.]), array([1., 2., 1.])] \n","\n","remainlist:  [1, 2, 3]\n","3\n","[0, 0, 0]\n","[1. 0. 0.]\n","[1. 0. 0.]\n","[ 0. -1. -1.]\n","[ 0. -1. -1.]\n","[ 1. -1. -1.]\n","[ 1. -1. -1.]\n","[ 2. -1.  2.]\n","[ 2. -1.  2.]\n","[ 1. -2.  1.]\n","cnt  3\n","point:  [array([1., 0., 0.]), array([1., 0., 3.]), array([1., 1., 1.])] \n","\n","wpla:  [array([ 1., -2.,  2.]), array([ 1., -2.,  1.])]\n","points:  [[array([1., 3., 0.]), array([ 1., -2.,  2.]), array([1., 2., 1.])], [array([1., 0., 0.]), array([1., 0., 3.]), array([1., 1., 1.])]]\n","h:  [ 1. -2.  2.]\n","dout:  [array([1., 0., 0.]), array([1., 0., 3.]), array([1., 1., 1.])]\n","y:  [1.0, 1.0, 1.0]\n","errorsum:  1\n","Eost:  0.3333333333333333\n","[1.0, 0.3333333333333333, 1.0, 0.6666666666666666, 1.0, 0.3333333333333333, 1.0, 0.6666666666666666, 0.6666666666666666, 0.3333333333333333, 1.0, 0.3333333333333333, 0.3333333333333333, 0.6666666666666666, 0.3333333333333333, 0.3333333333333333, 0.6666666666666666, 0.3333333333333333, 0.6666666666666666, 0.3333333333333333, 0.6666666666666666, 0.3333333333333333, 0.3333333333333333, 1.0, 1.0, 0.6666666666666666, 0.3333333333333333, 0.3333333333333333, 0.6666666666666666, 0.6666666666666666, 1.0, 0.6666666666666666, 1.0, 0.3333333333333333, 1.0, 0.6666666666666666, 1.0, 0.3333333333333333, 1.0, 0.6666666666666666, 1.0, 0.6666666666666666, 0.6666666666666666, 0.6666666666666666, 1.0, 0.3333333333333333, 1.0, 0.3333333333333333, 0.6666666666666666, 1.0, 0.3333333333333333, 0.6666666666666666, 1.0, 0.3333333333333333, 0.3333333333333333, 0.6666666666666666, 1.0, 0.6666666666666666, 0.3333333333333333, 0.6666666666666666, 0.6666666666666666, 0.3333333333333333, 0.3333333333333333, 0.3333333333333333, 1.0, 0.3333333333333333, 1.0, 1.0, 1.0, 0.6666666666666666, 0.6666666666666666, 1.0, 0.3333333333333333, 1.0, 0.6666666666666666, 1.0, 0.6666666666666666, 1.0, 1.0, 0.6666666666666666, 0.3333333333333333, 0.3333333333333333, 0.3333333333333333, 0.6666666666666666, 1.0, 0.3333333333333333, 0.6666666666666666, 0.3333333333333333, 0.6666666666666666, 0.3333333333333333, 0.6666666666666666, 0.6666666666666666, 0.3333333333333333, 1.0, 0.3333333333333333, 0.3333333333333333, 0.3333333333333333, 0.6666666666666666, 1.0, 0.3333333333333333, 0.3333333333333333, 0.6666666666666666, 0.3333333333333333, 0.3333333333333333, 0.6666666666666666, 1.0, 1.0, 0.3333333333333333, 0.6666666666666666, 0.6666666666666666, 0.3333333333333333, 0.6666666666666666, 1.0, 0.6666666666666666, 0.3333333333333333, 1.0, 0.3333333333333333, 0.3333333333333333, 0.6666666666666666, 0.6666666666666666, 0.3333333333333333, 0.6666666666666666, 0.6666666666666666, 1.0, 1.0, 0.6666666666666666, 1.0, 0.6666666666666666, 0.3333333333333333, 1.0, 0.3333333333333333, 1.0, 0.3333333333333333, 0.3333333333333333, 0.3333333333333333, 0.3333333333333333, 1.0, 0.6666666666666666, 0.3333333333333333, 0.3333333333333333, 0.6666666666666666, 1.0, 1.0, 0.6666666666666666, 1.0, 1.0, 0.6666666666666666, 0.3333333333333333, 1.0, 1.0, 0.6666666666666666, 0.3333333333333333, 0.3333333333333333, 1.0, 0.3333333333333333, 0.3333333333333333, 0.3333333333333333, 0.3333333333333333, 0.6666666666666666, 0.3333333333333333, 0.6666666666666666, 0.3333333333333333, 0.6666666666666666, 0.3333333333333333, 0.6666666666666666, 1.0, 0.3333333333333333, 1.0, 0.3333333333333333, 0.6666666666666666, 1.0, 1.0, 0.6666666666666666, 0.3333333333333333, 1.0, 0.3333333333333333, 0.6666666666666666, 0.3333333333333333, 1.0, 0.3333333333333333, 0.6666666666666666, 0.3333333333333333, 0.6666666666666666, 0.6666666666666666, 1.0, 1.0, 0.3333333333333333, 0.3333333333333333, 0.6666666666666666, 0.3333333333333333, 1.0, 0.3333333333333333, 0.3333333333333333, 0.3333333333333333, 0.6666666666666666, 1.0, 0.3333333333333333, 0.6666666666666666, 0.3333333333333333, 0.3333333333333333, 0.6666666666666666, 0.6666666666666666, 0.3333333333333333, 1.0, 1.0, 1.0, 0.6666666666666666, 0.3333333333333333, 0.6666666666666666, 0.3333333333333333, 1.0, 0.3333333333333333, 1.0, 0.6666666666666666, 0.3333333333333333, 0.6666666666666666, 0.3333333333333333, 0.6666666666666666, 1.0, 0.3333333333333333, 0.3333333333333333, 0.3333333333333333, 1.0, 0.6666666666666666, 0.6666666666666666, 0.3333333333333333, 1.0, 0.3333333333333333, 0.3333333333333333, 0.3333333333333333, 0.6666666666666666, 0.6666666666666666, 1.0, 0.3333333333333333, 1.0, 0.3333333333333333, 0.3333333333333333, 0.3333333333333333, 0.3333333333333333, 0.6666666666666666, 0.6666666666666666, 0.3333333333333333, 0.3333333333333333, 0.3333333333333333, 1.0, 0.6666666666666666, 1.0, 0.3333333333333333, 0.3333333333333333, 0.3333333333333333, 0.3333333333333333, 1.0, 0.3333333333333333, 0.3333333333333333, 0.3333333333333333, 0.6666666666666666, 0.3333333333333333, 0.3333333333333333, 0.6666666666666666, 1.0, 0.3333333333333333, 0.6666666666666666, 0.3333333333333333, 0.3333333333333333, 0.3333333333333333, 0.3333333333333333, 0.3333333333333333, 0.3333333333333333, 1.0, 0.6666666666666666, 1.0, 0.3333333333333333, 0.3333333333333333, 0.3333333333333333, 0.6666666666666666, 0.3333333333333333, 1.0, 0.6666666666666666, 0.3333333333333333, 0.3333333333333333, 0.3333333333333333, 1.0, 1.0, 0.6666666666666666, 1.0, 0.3333333333333333, 1.0, 0.6666666666666666, 0.3333333333333333, 0.6666666666666666, 0.3333333333333333, 1.0, 0.6666666666666666, 0.6666666666666666, 0.3333333333333333, 0.3333333333333333, 0.6666666666666666, 0.3333333333333333, 0.3333333333333333, 0.3333333333333333, 1.0, 1.0, 0.3333333333333333, 0.6666666666666666, 0.3333333333333333, 0.3333333333333333, 0.3333333333333333, 0.3333333333333333, 0.6666666666666666, 1.0, 0.6666666666666666, 1.0, 0.3333333333333333, 0.3333333333333333, 0.3333333333333333, 0.3333333333333333, 1.0, 1.0, 1.0, 0.6666666666666666, 1.0, 0.6666666666666666, 0.3333333333333333, 0.6666666666666666, 0.3333333333333333, 0.3333333333333333, 1.0, 1.0, 0.3333333333333333, 0.3333333333333333, 1.0, 0.6666666666666666, 0.3333333333333333, 0.6666666666666666, 0.3333333333333333, 0.3333333333333333, 0.3333333333333333, 0.3333333333333333, 1.0, 0.3333333333333333, 1.0, 0.6666666666666666, 0.6666666666666666, 0.3333333333333333, 1.0, 1.0, 0.3333333333333333, 0.3333333333333333, 0.6666666666666666, 0.3333333333333333, 0.6666666666666666, 0.3333333333333333, 0.6666666666666666, 1.0, 0.6666666666666666, 0.3333333333333333, 1.0, 0.6666666666666666, 0.3333333333333333, 1.0, 0.6666666666666666, 0.3333333333333333, 0.6666666666666666, 0.3333333333333333, 0.6666666666666666, 0.6666666666666666, 1.0, 0.3333333333333333, 1.0, 0.6666666666666666, 0.6666666666666666, 0.3333333333333333, 0.6666666666666666, 0.6666666666666666, 0.6666666666666666, 0.6666666666666666, 0.3333333333333333, 0.3333333333333333, 0.6666666666666666, 0.6666666666666666, 0.6666666666666666, 1.0, 1.0, 0.3333333333333333, 1.0, 1.0, 0.3333333333333333, 0.3333333333333333, 0.6666666666666666, 0.3333333333333333, 1.0, 0.3333333333333333, 1.0, 1.0, 0.6666666666666666, 1.0, 0.6666666666666666, 1.0, 0.3333333333333333, 0.6666666666666666, 1.0, 1.0, 1.0, 0.6666666666666666, 1.0, 0.6666666666666666, 0.3333333333333333, 0.6666666666666666, 0.3333333333333333, 0.3333333333333333, 0.6666666666666666, 1.0, 1.0, 0.3333333333333333, 0.3333333333333333, 0.6666666666666666, 1.0, 0.3333333333333333, 1.0, 0.3333333333333333, 0.6666666666666666, 0.3333333333333333, 0.3333333333333333, 0.6666666666666666, 1.0, 0.6666666666666666, 0.6666666666666666, 0.3333333333333333, 1.0, 0.6666666666666666, 0.6666666666666666, 1.0, 1.0, 0.3333333333333333, 1.0, 0.3333333333333333, 0.6666666666666666, 1.0, 0.3333333333333333, 0.3333333333333333, 1.0, 0.3333333333333333, 0.3333333333333333, 0.6666666666666666, 0.3333333333333333, 0.3333333333333333, 1.0, 1.0, 1.0, 0.3333333333333333, 1.0, 0.6666666666666666, 1.0, 0.3333333333333333, 0.3333333333333333, 1.0, 1.0, 0.6666666666666666, 1.0, 0.3333333333333333, 0.3333333333333333, 1.0, 0.3333333333333333, 0.3333333333333333, 0.6666666666666666, 0.6666666666666666, 1.0, 0.3333333333333333, 0.3333333333333333, 0.3333333333333333, 0.6666666666666666, 0.6666666666666666, 0.3333333333333333, 1.0, 0.6666666666666666, 0.3333333333333333, 1.0, 1.0, 1.0, 1.0, 1.0, 0.3333333333333333, 0.3333333333333333, 0.3333333333333333, 0.3333333333333333, 0.6666666666666666, 0.6666666666666666, 1.0, 0.3333333333333333, 0.3333333333333333, 1.0, 1.0, 0.6666666666666666, 0.3333333333333333, 0.3333333333333333, 0.3333333333333333, 1.0, 0.3333333333333333, 0.3333333333333333, 0.6666666666666666, 0.3333333333333333, 0.6666666666666666, 0.6666666666666666, 0.6666666666666666, 0.3333333333333333, 0.6666666666666666, 0.3333333333333333, 0.3333333333333333, 1.0, 0.3333333333333333, 0.3333333333333333, 0.6666666666666666, 0.6666666666666666, 0.6666666666666666, 1.0, 1.0, 0.3333333333333333, 0.3333333333333333, 0.3333333333333333, 1.0, 0.6666666666666666, 1.0, 0.6666666666666666, 0.3333333333333333, 0.3333333333333333, 1.0, 1.0, 0.3333333333333333, 0.6666666666666666, 0.3333333333333333, 1.0, 0.3333333333333333, 0.3333333333333333, 0.3333333333333333, 0.3333333333333333, 0.3333333333333333, 0.3333333333333333, 0.3333333333333333, 0.3333333333333333, 0.6666666666666666, 0.3333333333333333, 0.3333333333333333, 0.6666666666666666, 0.6666666666666666, 1.0, 0.6666666666666666, 1.0, 0.6666666666666666, 0.6666666666666666, 0.3333333333333333, 0.3333333333333333, 0.3333333333333333, 0.3333333333333333, 0.6666666666666666, 0.6666666666666666, 0.6666666666666666, 0.3333333333333333, 0.3333333333333333, 0.3333333333333333, 1.0, 1.0, 0.6666666666666666, 1.0, 0.3333333333333333, 0.6666666666666666, 0.3333333333333333, 0.3333333333333333, 0.6666666666666666, 1.0, 0.6666666666666666, 1.0, 1.0, 0.6666666666666666, 0.6666666666666666, 1.0, 1.0, 1.0, 0.3333333333333333, 0.6666666666666666, 0.3333333333333333, 1.0, 0.6666666666666666, 0.6666666666666666, 0.6666666666666666, 0.3333333333333333, 0.6666666666666666, 1.0, 1.0, 0.3333333333333333, 0.6666666666666666, 1.0, 1.0, 1.0, 1.0, 0.3333333333333333, 0.3333333333333333, 0.3333333333333333, 1.0, 1.0, 0.6666666666666666, 0.3333333333333333, 0.3333333333333333, 0.6666666666666666, 0.6666666666666666, 0.6666666666666666, 0.3333333333333333, 0.6666666666666666, 0.6666666666666666, 0.3333333333333333, 0.3333333333333333, 0.6666666666666666, 0.3333333333333333, 0.3333333333333333, 1.0, 0.6666666666666666, 0.3333333333333333, 1.0, 0.3333333333333333, 0.3333333333333333, 0.3333333333333333, 0.3333333333333333, 0.3333333333333333, 0.3333333333333333, 0.6666666666666666, 1.0, 0.3333333333333333, 1.0, 0.3333333333333333, 1.0, 1.0, 0.3333333333333333, 0.6666666666666666, 0.6666666666666666, 1.0, 0.6666666666666666, 0.3333333333333333, 0.6666666666666666, 0.6666666666666666, 0.3333333333333333, 1.0, 1.0, 1.0, 0.3333333333333333, 0.3333333333333333, 0.3333333333333333, 0.3333333333333333, 0.3333333333333333, 0.3333333333333333, 0.3333333333333333, 0.6666666666666666, 0.6666666666666666, 0.6666666666666666, 0.3333333333333333, 1.0, 1.0, 1.0, 1.0, 0.3333333333333333, 1.0, 0.3333333333333333, 1.0, 0.6666666666666666, 0.6666666666666666, 0.3333333333333333, 1.0, 0.3333333333333333, 0.3333333333333333, 1.0, 0.6666666666666666, 0.3333333333333333, 0.3333333333333333, 0.3333333333333333, 0.6666666666666666, 0.3333333333333333, 0.6666666666666666, 0.6666666666666666, 0.3333333333333333, 0.6666666666666666, 1.0, 1.0, 0.3333333333333333, 0.3333333333333333, 0.3333333333333333, 1.0, 1.0, 1.0, 0.3333333333333333, 0.3333333333333333, 0.3333333333333333, 0.6666666666666666, 0.3333333333333333, 0.6666666666666666, 0.6666666666666666, 0.3333333333333333, 0.3333333333333333, 0.6666666666666666, 0.3333333333333333, 0.3333333333333333, 0.6666666666666666, 0.6666666666666666, 0.3333333333333333, 0.3333333333333333, 1.0, 1.0, 0.3333333333333333, 1.0, 0.3333333333333333, 0.3333333333333333, 0.6666666666666666, 0.3333333333333333, 1.0, 1.0, 0.3333333333333333, 0.3333333333333333, 1.0, 0.6666666666666666, 0.3333333333333333, 0.3333333333333333, 0.6666666666666666, 1.0, 0.6666666666666666, 0.3333333333333333, 0.3333333333333333, 0.6666666666666666, 1.0, 1.0, 0.3333333333333333, 0.3333333333333333, 1.0, 0.3333333333333333, 1.0, 0.3333333333333333, 1.0, 0.3333333333333333, 0.3333333333333333, 0.3333333333333333, 0.3333333333333333, 0.6666666666666666, 1.0, 0.6666666666666666, 0.6666666666666666, 0.3333333333333333, 0.6666666666666666, 0.3333333333333333, 1.0, 0.3333333333333333, 0.3333333333333333, 1.0, 1.0, 0.3333333333333333, 0.6666666666666666, 0.3333333333333333, 0.3333333333333333, 1.0, 0.3333333333333333, 0.3333333333333333, 0.3333333333333333, 0.3333333333333333, 1.0, 0.6666666666666666, 1.0, 0.3333333333333333, 0.6666666666666666, 1.0, 0.6666666666666666, 0.6666666666666666, 0.6666666666666666, 1.0, 1.0, 0.6666666666666666, 0.3333333333333333, 0.3333333333333333, 0.6666666666666666, 0.3333333333333333, 1.0, 0.6666666666666666, 1.0, 0.6666666666666666, 1.0, 0.3333333333333333, 0.6666666666666666, 0.6666666666666666, 0.6666666666666666, 0.3333333333333333, 1.0, 0.6666666666666666, 1.0, 0.3333333333333333, 1.0, 1.0, 0.3333333333333333, 0.3333333333333333, 1.0, 0.3333333333333333, 0.6666666666666666, 0.6666666666666666, 1.0, 0.3333333333333333, 0.3333333333333333, 0.3333333333333333, 1.0, 1.0, 0.6666666666666666, 0.6666666666666666, 1.0, 0.3333333333333333, 1.0, 1.0, 0.3333333333333333, 0.6666666666666666, 1.0, 0.6666666666666666, 1.0, 0.3333333333333333, 0.3333333333333333, 0.6666666666666666, 0.3333333333333333, 0.6666666666666666, 0.3333333333333333, 0.6666666666666666, 0.6666666666666666, 1.0, 1.0, 0.6666666666666666, 0.3333333333333333, 0.3333333333333333, 0.3333333333333333, 0.3333333333333333, 0.6666666666666666, 0.6666666666666666, 0.6666666666666666, 0.6666666666666666, 0.3333333333333333, 0.6666666666666666, 0.6666666666666666, 0.3333333333333333, 1.0, 0.3333333333333333, 0.3333333333333333, 0.6666666666666666, 0.3333333333333333, 1.0, 0.6666666666666666, 0.3333333333333333, 0.3333333333333333, 0.6666666666666666, 0.6666666666666666, 0.3333333333333333, 1.0, 0.6666666666666666, 1.0, 1.0, 1.0, 0.3333333333333333, 0.3333333333333333, 0.6666666666666666, 0.3333333333333333, 0.3333333333333333, 0.6666666666666666, 0.3333333333333333, 0.6666666666666666, 1.0, 0.3333333333333333, 0.3333333333333333, 0.3333333333333333, 1.0, 1.0, 0.3333333333333333, 0.6666666666666666, 0.3333333333333333, 0.3333333333333333, 1.0, 0.3333333333333333, 0.3333333333333333, 0.6666666666666666, 0.3333333333333333, 0.6666666666666666, 0.6666666666666666, 0.3333333333333333, 0.6666666666666666, 0.6666666666666666, 0.6666666666666666, 0.6666666666666666, 0.6666666666666666, 1.0, 0.3333333333333333, 0.3333333333333333, 0.6666666666666666, 1.0, 0.3333333333333333, 0.6666666666666666, 0.3333333333333333, 0.6666666666666666, 0.6666666666666666, 0.3333333333333333, 1.0, 0.3333333333333333, 1.0, 0.3333333333333333, 0.6666666666666666, 0.6666666666666666, 0.3333333333333333, 0.3333333333333333, 0.6666666666666666, 0.3333333333333333, 0.3333333333333333, 0.6666666666666666, 1.0, 1.0, 0.3333333333333333, 1.0, 0.3333333333333333, 0.3333333333333333, 1.0, 0.6666666666666666, 0.6666666666666666, 0.3333333333333333, 0.3333333333333333, 1.0, 0.3333333333333333, 0.3333333333333333, 0.3333333333333333, 1.0, 0.3333333333333333, 0.3333333333333333, 0.6666666666666666, 0.3333333333333333, 0.6666666666666666, 0.3333333333333333, 0.3333333333333333, 1.0, 1.0, 0.3333333333333333, 0.3333333333333333, 0.3333333333333333, 1.0, 0.3333333333333333, 0.3333333333333333, 0.3333333333333333, 1.0, 1.0, 0.3333333333333333, 0.3333333333333333, 0.3333333333333333, 0.6666666666666666, 0.3333333333333333, 0.6666666666666666, 0.6666666666666666, 1.0, 0.3333333333333333, 0.3333333333333333, 1.0, 1.0, 0.6666666666666666, 0.3333333333333333, 0.3333333333333333, 0.3333333333333333, 0.6666666666666666, 0.3333333333333333, 0.3333333333333333, 0.3333333333333333, 0.3333333333333333, 0.3333333333333333, 0.6666666666666666, 1.0, 0.6666666666666666, 0.6666666666666666, 0.6666666666666666, 0.6666666666666666, 1.0, 1.0, 0.6666666666666666, 0.3333333333333333, 0.3333333333333333, 0.3333333333333333, 1.0, 0.6666666666666666, 0.3333333333333333, 0.3333333333333333, 0.3333333333333333, 0.6666666666666666, 1.0, 0.6666666666666666, 1.0, 1.0, 1.0, 1.0, 0.3333333333333333, 1.0, 1.0, 0.3333333333333333, 0.3333333333333333, 1.0, 0.6666666666666666, 0.3333333333333333, 0.6666666666666666, 0.3333333333333333, 0.6666666666666666, 0.3333333333333333, 0.3333333333333333]\n","Eost max:  1.0\n","Eost min:  0.3333333333333333\n"]}]},{"cell_type":"code","metadata":{"id":"qi1PnGerlyVl","executionInfo":{"status":"ok","timestamp":1634659027469,"user_tz":-480,"elapsed":6,"user":{"displayName":"陳佑甄","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgzIUBUXR24tLoip4QQgjhsStGIG9hzjbafxUsz=s64","userId":"10990682828848697792"}}},"source":["\n"],"execution_count":2,"outputs":[]}]}